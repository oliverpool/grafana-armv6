"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[3348],{47138:(ce,H,o)=>{o.d(H,{JX:()=>U,Wz:()=>D,oZ:()=>u,uG:()=>te});var T=o(52423),g=o(82897),i=o.n(g),K=o(68404),c=o(93003),V=o(49371),k=o(318),X=o(71210),ee=o(25474),oe=o(46739),J=o(92555);const te=[{value:J.EM.Range,label:"Range",description:"Run query over a range of time."},{value:J.EM.Instant,label:"Instant",description:'Run query against a single point in time. For this query, the "To" time is used.'}];c.v.featureToggles.lokiLive&&te.push({value:J.EM.Stream,label:"Stream",description:"Run a query and keep sending results on an interval"});const u=[{value:1,label:"1/1"}].concat((0,g.map)([2,3,4,5,10],I=>({value:I,label:"1/"+I})));function U(I){const{lineLimitValue:Y,resolution:ne,onRunQuery:j,runOnBlur:x,onChange:h}=I,N=I.query??{};let $=N.queryType??(N.instant?J.EM.Instant:J.EM.Range);function q(P){const d={...N,maxLines:D(P)};h(d)}function m(P){const{instant:d,range:y,..._}=N;h({..._,queryType:P})}function f(P){N.maxLines!==D(P.currentTarget.value)&&q(P.currentTarget.value)}function Q(P){P.key==="Enter"&&j()}function L(P){const d={...N,resolution:P.value};h(d)}return K.createElement("div",{"aria-label":"Loki extra field",className:"gf-form-inline"},K.createElement("div",{"data-testid":"queryTypeField",className:(0,T.cx)("gf-form explore-input-margin",T.css`
            flex-wrap: nowrap;
          `),"aria-label":"Query type field"},K.createElement(V.c,{width:"auto"},"Query type"),K.createElement(k.S,{options:te,value:$,onChange:P=>{m(P),x&&j()}})),K.createElement("div",{"data-testid":"lineLimitField",className:(0,T.cx)("gf-form",T.css`
            flex-wrap: nowrap;
          `),"aria-label":"Line limit field"},K.createElement(X._,{label:"Line limit",tooltip:"Upper limit for number of log lines returned by query."},K.createElement(ee.I,{className:"width-4",placeholder:"auto",type:"number",min:0,onChange:f,onKeyDown:Q,value:Y,onBlur:()=>{x&&j()}})),K.createElement(X._,{label:"Resolution",tooltip:"Resolution 1/1 sets step parameter of Loki metrics range queries such that each pixel corresponds to one data point. For better performance, lower resolutions can be picked. 1/2 only retrieves a data point for every other pixel, and 1/10 retrieves one data point per 10 pixels."},K.createElement(oe.Ph,{isSearchable:!1,onChange:L,options:u,value:ne,"aria-label":"Select resolution"}))))}var A=(0,K.memo)(U);function D(I){return I.length===0?NaN:I.length>0&&(isNaN(+I)||+I<0)?0:+I}},72881:(ce,H,o)=>{o.d(H,{KV:()=>Tr,Ic:()=>ue,xf:()=>pe,NZ:()=>Et,V8:()=>Qr});var T=o(82897),g=o(37537),i=o(3363),K=o(53786),c=o(16313),V=o(2101),k=o(94514),X=o(13016),ee=o(29236),oe=o(33180),J=o(49922),te=o(71895),z=o(14582),u=o(40400),U=o(46519),A=o(90595),D=o(69311),I=o(21053),Y=o(50235),ne=o(9800),j=o(93003),x=o(37959),h=o(55935),N=o(19349),$=o(98639),q=o(8878),m=o(81042),f=o(44332),Q=o(44812),L=o(20707),P=o.n(L),d=o(57706),y=o.n(d),_=o(7238),C=o(51649),M=o(87826),v=o(19370),F=o(92555);const R=["job","namespace"],le="{}",Pe=10,Tt=1e3*60*60*24,we=1e6,Ae=[{label:"$__interval",sortValue:"$__interval"},{label:"$__range",sortValue:"$__range"},{label:"1m",sortValue:"00:01:00"},{label:"5m",sortValue:"00:05:00"},{label:"10m",sortValue:"00:10:00"},{label:"30m",sortValue:"00:30:00"},{label:"1h",sortValue:"01:00:00"},{label:"1d",sortValue:"24:00:00"}],_t=1e3*30,Qe=n=>({label:n,filterText:`"${n}"`});function St(n,t){const e=Date.now()-Tt,r=t.filter(l=>l.ts>e&&l.query.expr===n.label);let a=`Queried ${r.length} times in the last 24h.`;const s=r[0];if(s){const l=(0,U.CQ)(s.ts).fromNow();a=`${a} Last queried ${l}.`}return{...n,documentation:a}}class Ft extends _.iL{constructor(t,e){super(),this.started=!1,this.lookupsDisabled=!1,this.seriesCache=new(P())({max:10}),this.labelsCache=new(P())({max:10}),this.cleanText=r=>r.replace(/[{}[\]="(),!~+\-*/^%\|]/g,"").trim(),this.request=async(r,a)=>{try{return await this.datasource.metadataRequest(r,a)}catch(s){console.error(s)}},this.start=()=>(this.startTask||(this.startTask=this.fetchLabels().then(()=>(this.started=!0,[]))),this.startTask),this.getBeginningCompletionItems=r=>({suggestions:[...this.getEmptyCompletionItems(r).suggestions,...this.getTermCompletionItems().suggestions]}),this.getTermCompletionItems=()=>{const r=[];return r.push({prefixMatch:!0,label:"Functions",items:v.r8.map(a=>({...a,kind:"function"}))}),{suggestions:r}},this.getPipeCompletionItem=()=>{const r=[];return r.push({label:"Operators",items:v.Rd.map(a=>({...a,kind:"operators"}))}),r.push({label:"Parsers",items:v.uR.map(a=>({...a,kind:"parsers"}))}),{suggestions:r}},this.fetchSeriesLabels=async r=>{const a=this.datasource.interpolateString(r),s="series",{start:l,end:O}=this.datasource.getTimeRangeParams(),p=this.generateCacheKey(s,l,O,a);let b=this.seriesCache.get(p);if(!b){this.seriesCache.set(p,{});const E={"match[]":a,start:l,end:O},S=await this.request(s,E),{values:Z}=(0,C.DY)(S);b=Z,this.seriesCache.set(p,b)}return b},this.fetchSeries=async r=>{const a="series",{start:s,end:l}=this.datasource.getTimeRangeParams(),O={"match[]":r,start:s,end:l};return await this.request(a,O)},this.datasource=t,this.labelKeys=[],this.labelFetchTs=0,Object.assign(this,e)}getSyntax(){return v.ZP}getLabelKeys(){return this.labelKeys}async provideCompletionItems(t,e){const{wrapperClasses:r,value:a,prefix:s,text:l}=t,O={suggestions:[]};if(!a)return O;const p=a?.document.text.length===0,b=a.document.getTextsAtRange(a.selection),E=b.size===1?b.first().getText():null,S=E?E[a.selection.anchor.offset]:null,Z=r.length>3,B=s&&!Z,W=!S||S===")",w=s&&!l.match(/^['"~=\]})\s]+$/)&&W,ae=/[+\-*/^%]/,se=l.match(ae);return r.includes("context-range")?this.getRangeCompletionItems():r.includes("context-labels")?await this.getLabelCompletionItems(t):r.includes("context-pipe")?this.getPipeCompletionItem():p?this.getEmptyCompletionItems(e):B&&W&&!se?this.getBeginningCompletionItems(e):B&&w?this.getTermCompletionItems():O}getEmptyCompletionItems(t){const e=t?.history,r=[];if(e?.length){const a=(0,T.chain)(e).map(s=>s.query.expr).filter().uniq().take(Pe).map(Qe).map(s=>St(s,e)).value();r.push({prefixMatch:!0,skipSort:!0,label:"History",items:a})}return{suggestions:r}}getRangeCompletionItems(){return{context:"context-range",suggestions:[{label:"Range vector",items:[...Ae]}]}}async getLabelCompletionItems({text:t,wrapperClasses:e,labelKey:r,value:a}){let s="context-labels";const l=[];if(!a)return{context:s,suggestions:[]};const O=a.anchorBlock.getText(),p=a.selection.anchor.offset,b=t.match(/^(=|=~|!=|!~)/);let E,S;try{S=(0,C.rV)(O,p),E=S.selector}catch{E=le}if(!r&&E===le){await this.start();const W=this.getLabelKeys();return{context:s,suggestions:[{label:"Labels",items:W.map(Qe)}]}}const Z=S?S.labelKeys:[];let B;if(E)if(E===le&&r){const W=await this.getLabelValues(r);B={[r]:W}}else B=await this.getSeriesLabels(E);if(!B)return console.warn(`Server did not return any values for selector = ${E}`),{context:s,suggestions:l};if(t&&b||e.includes("attr-value"))r&&B[r]&&(s="context-label-values",l.push({label:`Label values for "${r}"`,items:B[r].map(Qe).filter(({filterText:W})=>W!==t)}));else{const W=B?Object.keys(B):R;if(W){const w=(0,T.difference)(W,Z);if(w.length){const se={label:"Labels",items:w.map(de=>({label:de}))};l.push(se)}}}return{context:s,suggestions:l}}importFromAbstractQuery(t){return{refId:t.refId,expr:(0,C.PL)(t),queryType:F.EM.Range}}exportToAbstractQuery(t){const e=t.expr;if(!e||e.length===0)return{refId:t.refId,labelMatchers:[]};const r=y().tokenize(e,v.ZP);return{refId:t.refId,labelMatchers:(0,C.UO)(r)}}async getSeriesLabels(t){if(!this.lookupsDisabled)try{return await this.fetchSeriesLabels(t)}catch(e){console.error(e);return}}async fetchLabels(){const t="labels",e=this.datasource.getTimeRangeParams();this.labelFetchTs=Date.now().valueOf();const r=await this.request(t,e);if(Array.isArray(r)){const a=r.slice().sort().filter(s=>s!=="__name__");this.labelKeys=a}return[]}async refreshLogLabels(t){(this.labelKeys&&Date.now().valueOf()-this.labelFetchTs>_t||t)&&await this.fetchLabels()}generateCacheKey(t,e,r,a){return[t,this.roundTime(e),this.roundTime(r),a].join()}roundTime(t){return t?Math.floor(t/we/1e3/60/5):0}async getLabelValues(t){return await this.fetchLabelValues(t)}async fetchLabelValues(t){const e=encodeURIComponent(this.datasource.interpolateString(t)),r=`label/${e}/values`,a=this.datasource.getTimeRangeParams(),{start:s,end:l}=a,O=this.generateCacheKey(r,s,l,e),p={start:s,end:l};let b=this.labelsCache.get(O);if(!b){this.labelsCache.set(O,[]);const E=await this.request(r,p);Array.isArray(E)&&(b=E.slice().sort(),this.labelsCache.set(O,b))}return b??[]}async getParserAndLabelKeys(t){const e=await this.datasource.getDataSamples({expr:t,refId:"data-samples"});if(!e.length)return{extractedLabelKeys:[],unwrapLabelKeys:[],hasJSON:!1,hasLogfmt:!1};const{hasLogfmt:r,hasJSON:a}=(0,M.OP)(e[0]);return{extractedLabelKeys:(0,M.e8)(e[0]),unwrapLabelKeys:(0,M.zb)(e[0]),hasJSON:a,hasLogfmt:r}}}var Ie=o(4561),Ne=o(47994),We=o(98356),$t=o(97218),Ve=o(9683),fe=o(96209),Ke=o(97709),Le=o(46060),Xe=o(95484),Ee=o(16527),Ct={url:"",deserializer:function(n){return JSON.parse(n.data)},serializer:function(n){return JSON.stringify(n)}},Bt="WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }",Dt=function(n){(0,Ve.__extends)(t,n);function t(e,r){var a=n.call(this)||this;if(a._socket=null,e instanceof Le.y)a.destination=r,a.source=e;else{var s=a._config=(0,Ve.__assign)({},Ct);if(a._output=new fe.x,typeof e=="string")s.url=e;else for(var l in e)e.hasOwnProperty(l)&&(s[l]=e[l]);if(!s.WebSocketCtor&&WebSocket)s.WebSocketCtor=WebSocket;else if(!s.WebSocketCtor)throw new Error("no WebSocket constructor can be found");a.destination=new Ee.t}return a}return t.prototype.lift=function(e){var r=new t(this._config,this.destination);return r.operator=e,r.source=this,r},t.prototype._resetState=function(){this._socket=null,this.source||(this.destination=new Ee.t),this._output=new fe.x},t.prototype.multiplex=function(e,r,a){var s=this;return new Le.y(function(l){try{s.next(e())}catch(p){l.error(p)}var O=s.subscribe({next:function(p){try{a(p)&&l.next(p)}catch(b){l.error(b)}},error:function(p){return l.error(p)},complete:function(){return l.complete()}});return function(){try{s.next(r())}catch(p){l.error(p)}O.unsubscribe()}})},t.prototype._connectSocket=function(){var e=this,r=this._config,a=r.WebSocketCtor,s=r.protocol,l=r.url,O=r.binaryType,p=this._output,b=null;try{b=s?new a(l,s):new a(l),this._socket=b,O&&(this._socket.binaryType=O)}catch(S){p.error(S);return}var E=new Xe.w0(function(){e._socket=null,b&&b.readyState===1&&b.close()});b.onopen=function(S){var Z=e._socket;if(!Z){b.close(),e._resetState();return}var B=e._config.openObserver;B&&B.next(S);var W=e.destination;e.destination=Ke.Lv.create(function(w){if(b.readyState===1)try{var ae=e._config.serializer;b.send(ae(w))}catch(se){e.destination.error(se)}},function(w){var ae=e._config.closingObserver;ae&&ae.next(void 0),w&&w.code?b.close(w.code,w.reason):p.error(new TypeError(Bt)),e._resetState()},function(){var w=e._config.closingObserver;w&&w.next(void 0),b.close(),e._resetState()}),W&&W instanceof Ee.t&&E.add(W.subscribe(e.destination))},b.onerror=function(S){e._resetState(),p.error(S)},b.onclose=function(S){b===e._socket&&e._resetState();var Z=e._config.closeObserver;Z&&Z.next(S),S.wasClean?p.complete():p.error(S)},b.onmessage=function(S){try{var Z=e._config.deserializer;p.next(Z(S))}catch(B){p.error(B)}}},t.prototype._subscribe=function(e){var r=this,a=this.source;return a?a.subscribe(e):(this._socket||this._connectSocket(),this._output.subscribe(e),e.add(function(){var s=r._socket;r._output.observers.length===0&&(s&&(s.readyState===1||s.readyState===0)&&s.close(),r._resetState())}),e)},t.prototype.unsubscribe=function(){var e=this._socket;e&&(e.readyState===1||e.readyState===0)&&e.close(),this._resetState(),n.prototype.unsubscribe.call(this)},t}(fe.u);function Mt(n){return new Dt(n)}var Ut=o(25091),wt=o(72847);const At=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function It(n){return typeof n=="string"&&At.test(n)}const Nt=It;function je(n){if(!Nt(n))throw TypeError("Invalid UUID");let t;const e=new Uint8Array(16);return e[0]=(t=parseInt(n.slice(0,8),16))>>>24,e[1]=t>>>16&255,e[2]=t>>>8&255,e[3]=t&255,e[4]=(t=parseInt(n.slice(9,13),16))>>>8,e[5]=t&255,e[6]=(t=parseInt(n.slice(14,18),16))>>>8,e[7]=t&255,e[8]=(t=parseInt(n.slice(19,23),16))>>>8,e[9]=t&255,e[10]=(t=parseInt(n.slice(24,36),16))/1099511627776&255,e[11]=t/4294967296&255,e[12]=t>>>24&255,e[13]=t>>>16&255,e[14]=t>>>8&255,e[15]=t&255,e}const Ze=je;function Ge(n){n=unescape(encodeURIComponent(n));const t=[];for(let e=0;e<n.length;++e)t.push(n.charCodeAt(e));return t}const ze="6ba7b810-9dad-11d1-80b4-00c04fd430c8",He="6ba7b811-9dad-11d1-80b4-00c04fd430c8";function ke(n,t,e){function r(a,s,l,O){var p;if(typeof a=="string"&&(a=Ge(a)),typeof s=="string"&&(s=Ze(s)),((p=s)===null||p===void 0?void 0:p.length)!==16)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let b=new Uint8Array(16+a.length);if(b.set(s),b.set(a,s.length),b=e(b),b[6]=b[6]&15|t,b[8]=b[8]&63|128,l){O=O||0;for(let E=0;E<16;++E)l[O+E]=b[E];return l}return(0,wt.S)(b)}try{r.name=n}catch{}return r.DNS=ze,r.URL=He,r}function qe(n,t,e,r){switch(n){case 0:return t&e^~t&r;case 1:return t^e^r;case 2:return t&e^t&r^e&r;case 3:return t^e^r}}function ge(n,t){return n<<t|n>>>32-t}function Wt(n){const t=[1518500249,1859775393,2400959708,3395469782],e=[1732584193,4023233417,2562383102,271733878,3285377520];if(typeof n=="string"){const l=unescape(encodeURIComponent(n));n=[];for(let O=0;O<l.length;++O)n.push(l.charCodeAt(O))}else Array.isArray(n)||(n=Array.prototype.slice.call(n));n.push(128);const r=n.length/4+2,a=Math.ceil(r/16),s=new Array(a);for(let l=0;l<a;++l){const O=new Uint32Array(16);for(let p=0;p<16;++p)O[p]=n[l*64+p*4]<<24|n[l*64+p*4+1]<<16|n[l*64+p*4+2]<<8|n[l*64+p*4+3];s[l]=O}s[a-1][14]=(n.length-1)*8/Math.pow(2,32),s[a-1][14]=Math.floor(s[a-1][14]),s[a-1][15]=(n.length-1)*8&4294967295;for(let l=0;l<a;++l){const O=new Uint32Array(80);for(let B=0;B<16;++B)O[B]=s[l][B];for(let B=16;B<80;++B)O[B]=ge(O[B-3]^O[B-8]^O[B-14]^O[B-16],1);let p=e[0],b=e[1],E=e[2],S=e[3],Z=e[4];for(let B=0;B<80;++B){const W=Math.floor(B/20),w=ge(p,5)+qe(W,b,E,S)+Z+t[W]+O[B]>>>0;Z=S,S=E,E=ge(b,30)>>>0,b=p,p=w}e[0]=e[0]+p>>>0,e[1]=e[1]+b>>>0,e[2]=e[2]+E>>>0,e[3]=e[3]+S>>>0,e[4]=e[4]+Z>>>0}return[e[0]>>24&255,e[0]>>16&255,e[0]>>8&255,e[0]&255,e[1]>>24&255,e[1]>>16&255,e[1]>>8&255,e[1]&255,e[2]>>24&255,e[2]>>16&255,e[2]>>8&255,e[2]&255,e[3]>>24&255,e[3]>>16&255,e[3]>>8&255,e[3]&255,e[4]>>24&255,e[4]>>16&255,e[4]>>8&255,e[4]&255]}const Kt=ke("v5",80,Wt),Xt="6ec946da-0f49-47a8-983a-1d76d17e7c92";function Ye(n,t){const e=n.streams;if(!e||!e.length)return;const r=t.fields[0],a=t.fields[1],s=t.fields[2],l={};for(const O of e){const p=Object.entries(O.stream).map(([b,E])=>`${b}="${E}"`).sort().join("");for(const[b,E]of O.values)r.values.add(new Date(parseInt(b.slice(0,-6),10)).toISOString()),a.values.add(E),s.values.add(Je(b,p,E,l,t.refId))}}function Je(n,t,e,r,a){let s=Kt(`${n}_${t}_${e}`,Xt);if(s in r){const l=r[s]+1;r[s]=l,s=`${s}_${l}`}else r[s]=0;return a?`${s}_${a}`:s}class et{constructor(){this.streams={}}getStream(t,e=5e3){let r=this.streams[t.url];if(r)return r;const a=new Ut.a({capacity:t.size});return a.addField({name:"Time",type:z.fS.time,config:{}}),a.addField({name:"Line",type:z.fS.string}),a.addField({name:"id",type:z.fS.string}),a.meta={...a.meta,preferredVisualisationType:"logs"},a.refId=t.refId,r=Mt(t.url).pipe((0,V.U)(s=>(Ye(s,a),[a])),(0,Ne.a)(s=>s.pipe((0,We.z)((l,O)=>{const p=O+1;return l.code===1006&&p<30?(p>10&&console.warn(`Websocket connection is being disrupted. We keep reconnecting but consider starting new live tailing again. Error: ${l.reason}`),(0,Ie.H)(e)):(0,g._)(l)}))),(0,$t.x)(()=>{delete this.streams[t.url]})),this.streams[t.url]=r,r}}var tt=o(16911),Oe=o(19695),rt=o(77213);function at(n,t){if(!t.length)return[];const e=(0,T.groupBy)(t,"name"),r=Object.values(e).map(nt),a=n.fields.find(s=>s.type===z.fS.string);if(a===void 0)throw new Error("invalid logs-dataframe, string-field missing");return a.values.toArray().forEach(s=>{for(const l of r){const O=s.match(e[l.name][0].matcherRegex);l.values.add(O&&O[1])}}),r}function nt(n){const t=(0,rt.F)(),e=n.reduce((r,a)=>{if(a.datasourceUid){const s=t.getInstanceSettings(a.datasourceUid);r.push({title:a.urlDisplayLabel||"",url:"",internal:{query:{query:a.url},datasourceUid:a.datasourceUid,datasourceName:s?.name??"Data source not found"}})}else a.url&&r.push({title:a.urlDisplayLabel||"",url:a.url});return r},[]);return{name:n[0].name,type:z.fS.string,config:{links:e},values:new Oe.G([])}}function jt(n){const t=n.filter(r=>r.refId!==void 0),e=(0,T.groupBy)(t,r=>r.refId);return Object.entries(e).map(([r,a])=>st(a,r))}function st(n,t){const e={name:"Time",config:{},values:new Oe.G,type:z.fS.time},r={name:`Value #${t}`,config:{},values:new Oe.G,type:z.fS.number},a=new Set(n.map(O=>O.fields.map(p=>Object.keys(p.labels??{})).flat()).flat()),l=Array.from(a).sort().map(O=>({name:O,config:{filterable:!0},values:new Oe.G,type:z.fS.string}));return n.forEach(O=>{const p=O.fields.find(B=>B.type===z.fS.time),b=O.fields.find(B=>B.type===z.fS.number);if(p==null||b==null)return;const E=p.values.toArray(),S=b.values.toArray();for(let B of E)e.values.add(B);for(let B of S)r.values.add(B);const Z=b.labels??{};for(let B of l){const W=Z[B.name]??"";for(let w=0;w<S.length;w++)B.values.add(W)}}),{fields:[e,...l,r],refId:t,meta:{preferredVisualisationType:"table"},length:e.values.length}}var ie=o(24666);function Zt(n){return n.fields.every(t=>t.type===z.fS.time||t.type===z.fS.number)}function xe(n,t){const{meta:e,...r}=n,a={...e,...t};return{...r,meta:a}}function it(n,t,e){const r={...n.meta?.custom,lokiQueryStatKey:"Summary: total bytes processed"};(0,M.vh)(n)&&(r.error="Error when parsing some of the logs");const a={preferredVisualisationType:"logs",limit:t?.maxLines,searchWords:t!==void 0?(0,ie.n6)((0,ie.x9)(t.expr)):void 0,custom:r},s=xe(n,a),l=at(s,e);return{...s,fields:[...s.fields,...l]}}function ot(n,t,e){return n.map(r=>{const a=r.refId!==void 0?t.get(r.refId):void 0;return it(r,a,e)})}function lt(n){return n.length>0?jt(n):[]}function Gt(n){const t={preferredVisualisationType:"graph"};return n.map(e=>xe(e,t))}function zt(n,t){const e=[],r=[],a=[];return n.forEach(s=>{Zt(s)?s.refId!=null&&t.get(s.refId)?.queryType===F.EM.Instant?r.push(s):a.push(s):e.push(s)}),{streamsFrames:e,metricInstantFrames:r,metricRangeFrames:a}}function Ht(n,t){if(n===void 0)return n;const{refId:e,message:r}=n;if(e===void 0||r===void 0)return n;const a=t.get(e);return a===void 0?n:r.includes("escape")&&a.expr.includes("\\")?{...n,message:`${r}. Make sure that all special characters are escaped with \\. For more information on escaping of special characters visit LogQL documentation at https://grafana.com/docs/loki/latest/logql/.`}:n}function kt(n,t,e){const{data:r,error:a,...s}=n,l=r.map(S=>{if(!(0,tt.aY)(S))throw new Error("transformation only supports dataframe responses");return S}),O=new Map(t.map(S=>[S.refId,S])),{streamsFrames:p,metricInstantFrames:b,metricRangeFrames:E}=zt(l,O);return{...s,error:Ht(a,O),data:[...Gt(E),...lt(b),...ot(p,O,e)]}}var G=o(68404),he=o(26418),ve=o(25474),qt=o(47138),Yt=o(91159);const Jt=(0,G.memo)(function(t){const{annotation:e,onAnnotationChange:r,history:a}=t;if(e===void 0||r===void 0)return null;const s=O=>{const p=(0,ie.Ib)(O).queryType===F.EM.Instant;r({...e,expr:O.expr,maxLines:O.maxLines,instant:p})},l={refId:"",expr:e.expr,maxLines:e.maxLines,instant:e.instant,queryType:e.queryType};return G.createElement(G.Fragment,null,G.createElement("div",{className:"gf-form-group"},G.createElement(Yt.n,{datasource:t.datasource,query:l,onChange:s,onRunQuery:()=>{},onBlur:()=>{},history:a,ExtraFieldElement:G.createElement(qt.JX,{lineLimitValue:l?.maxLines?.toString()||"",resolution:l.resolution||1,query:l,onRunQuery:()=>{},onChange:s})})),G.createElement(he.EditorRow,null,G.createElement(he.EditorField,{label:"Title",tooltip:"Use either the name or a pattern. For example, {{instance}} is replaced with label value for the label instance."},G.createElement(ve.I,{type:"text",placeholder:"alertname",value:e.titleFormat,onChange:O=>{r({...e,titleFormat:O.currentTarget.value})}})),G.createElement(he.EditorField,{label:"Tags"},G.createElement(ve.I,{type:"text",placeholder:"label1,label2",value:e.tagKeys,onChange:O=>{r({...e,tagKeys:O.currentTarget.value})}})),G.createElement(he.EditorField,{label:"Text",tooltip:"Use either the name or a pattern. For example, {{instance}} is replaced with label value for the label instance."},G.createElement(ve.I,{type:"text",placeholder:"instance",value:e.textFormat,onChange:O=>{r({...e,textFormat:O.currentTarget.value})}}))))});var me=o(31439);const Re=/^label_names\(\)\s*$/,Te=/^label_values\((?:(.+),\s*)?([a-zA-Z_][a-zA-Z0-9_]*)\)\s*$/;function er(n){if(typeof n!="string")return n;const t={refId:"LokiVariableQueryEditor-VariableQuery",type:F.Z3.LabelNames};if(n.match(Re))return{...t,type:F.Z3.LabelNames};const r=n.match(Te);return r?{...t,type:F.Z3.LabelValues,label:r[2]?r[2]:r[1],stream:r[2]?r[1]:void 0}:t}var re=o(78252),ct=o(39682),ut=o(21745);function be(n,t,e,r){if(!t||!r)throw new Error("Need label to add to query.");const a=_e(n),s=nr(n),l=a.every(E=>s.some(S=>S.from>=E.from&&S.to<=E.to)),O=Se(n),p=mt(n);if(!a.length)return n;const b=Fe(t,r,e);if(l&&(p.length||O.length)){const E=Ce([...p,...O]);return $e(n,[E],b)}else return or(n,a,b)}function dt(n,t){const e=sr(n);if(e.length)return Ot(n,e,t);{const r=_e(n);return Ot(n,r,t)}}function tr(n){const t=Se(n);if(!t.length)return n;const e=Fe("__error__","","=");return $e(n,t,e)}function rr(n,t){const e=ir(n);return lr(n,e,t)}function ar(n){const t=ft(n);if(!t.length)return n;let e="",r=0;for(let a of t)e=e+n.substring(r,a.from),r=a.to;return e}function _e(n){const t=re.E2.parse(n),e=[];return t.iterate({enter:({type:r,from:a,to:s})=>{if(r.id===re.Qf)return e.push({from:a,to:s}),!1}}),e}function nr(n){const t=re.E2.parse(n),e=[];return t.iterate({enter:({node:r})=>{r.type.id===re.Qf&&e.push(...Be(n,r,re.xO))}}),e}function Se(n){const t=re.E2.parse(n),e=[];return t.iterate({enter:({type:r,from:a,to:s})=>{if(r.id===re.Li||r.id===re.Lu)return e.push({from:a,to:s}),!1}}),e}function mt(n){const t=re.E2.parse(n),e=[];return t.iterate({enter:({type:r,from:a,to:s})=>{if(r.id===re.pj)return e.push({from:a,to:s}),!1}}),e}function sr(n){const t=re.E2.parse(n),e=[];return t.iterate({enter:({type:r,node:a})=>{if(r.id===re.wm)return e.push({from:a.from,to:a.to}),!1}}),e}function ir(n){const t=re.E2.parse(n),e=[];return t.iterate({enter:({type:r,from:a,to:s,node:l})=>{if(r.id===re.bL)return e.push({from:a,to:s}),!1;if(r.id===re.UN){const O=[],p=l.getChild(re.Qf);p&&O.push({from:p.from,to:p.to});const b=l.getChild(re.iP);b&&O.push({from:b.from,to:b.to});const E=l.getChild(re.Xt);E&&O.push({from:E.from,to:E.to});const S=(0,T.sortBy)(O,Z=>Z.to);return e.push({from:S[0].from,to:S[S.length-1].to}),!1}}}),e}function Fe(n,t,e){return{label:n,op:e,value:t}}function or(n,t,e){const r=new ct.Y;let a="",s=0;for(let l=0;l<t.length;l++){const O=t[l],p=l===t.length-1,b=n.substring(s,O.from),E=p?n.substring(O.to):"",S=(0,ut._)(n.substring(O.from,O.to));cr(S.query.labels,e)||S.query.labels.push(e);const Z=r.renderQuery(S.query);a+=b+Z+E,s=O.to}return a}function $e(n,t,e){let r="",a=0;for(let s=0;s<t.length;s++){const l=t[s],O=s===t.length-1,p=n.substring(a,l.to),b=O?n.substring(l.to):"",E=` | ${e.label}${e.op}\`${(0,me.iS)(e.value)}\``;r+=p+E+b,a=l.to}return r}function Ot(n,t,e){let r="",a=0;for(let s=0;s<t.length;s++){const l=t[s],O=s===t.length-1,p=n.substring(a,l.to),b=O?n.substring(l.to):"";r+=p+` | ${e}`+b,a=l.to}return r}function lr(n,t,e){let r="",a=0;for(let s=0;s<t.length;s++){const l=t[s],O=s===t.length-1,p=n.substring(a,l.to),b=O?n.substring(l.to):"",E=` | label_format ${e.renameTo}=${e.originalLabel}`;r+=p+E+b,a=l.to}return r}function pt(n){const e=_e(n)[0].to;return n.slice(0,e)+" |= ``"+n.slice(e)}function ft(n){const t=re.E2.parse(n),e=[];return t.iterate({enter:({type:r,from:a,to:s})=>{if(r.id===re.gD)return e.push({from:a,to:s}),!1}}),e}function cr(n,t){return n.find(e=>e.label===t.label&&e.value===t.value)}function Ce(n){return n.reduce((t,e)=>t.to>e.to?t:e)}function Be(n,t,e){if(t.type.id===e)return[{from:t.from,to:t.to}];const r=[];let a=0,s=t.childAfter(a);for(;s;)r.push(...Be(n,s,e)),a=s.to,s=t.childAfter(a);return r}function ur(n,t){if(t.length===0)return[];const e=[],{queryWithParser:r,parserCount:a}=(0,ie.cQ)(n);if(!r){const{hasLogfmt:O,hasJSON:p}=(0,M.OP)(t[0]);p&&e.push({type:"ADD_JSON_PARSER",label:"Selected log stream selector has JSON formatted logs.",fix:{title:"add json parser",label:"Consider using JSON parser.",action:{type:"ADD_JSON_PARSER",query:n}}}),O&&e.push({type:"ADD_LOGFMT_PARSER",label:"Selected log stream selector has logfmt formatted logs.",fix:{title:"add logfmt parser",label:"Consider using logfmt parser to turn key-value pairs in your log lines to labels.",action:{type:"ADD_LOGFMT_PARSER",query:n}}})}if(r){if(a===1){const p=(0,ie.N7)(n);(0,M.ki)(t[0])&&!p&&e.push({type:"ADD_NO_PIPELINE_ERROR",label:"Some logs in your selected log streams have parsing error.",fix:{title:"remove pipeline errors",label:"Consider filtering out logs with parsing errors.",action:{type:"ADD_NO_PIPELINE_ERROR",query:n}}})}(0,ie.Iu)(n)||e.push({type:"ADD_LABEL_FILTER",label:"Consider filtering logs by their label and value.",fix:{title:"add label filter",label:"",action:{type:"ADD_LABEL_FILTER",query:n}}})}if(!(0,ie.hI)(n)){const O=(0,M.EO)(t[0]),p=(0,M.Y)(t[0]);!O&&p&&e.push({type:"ADD_LEVEL_LABEL_FORMAT",label:`Some logs in your selected log stream have "${p}" label.`,fix:{title:"add label level format",label:`If ${p} label has level values, consider using label_format to rename it to "level". Level label can be then visualized in log volumes.`,action:{type:"ADD_LEVEL_LABEL_FORMAT",query:n,options:{renameTo:"level",originalLabel:p}}}})}return(0,ie.Qh)(n)||e.push({type:"ADD_LINE_FILTER",label:"Consider filtering logs for specific string.",fix:{title:"add line filter",label:"",action:{type:"ADD_LINE_FILTER",query:n}}}),e}var dr=o(12022);function mr(n,t){const e=n.values.toArray(),r=Array(e.length);for(let s=0;s<r.length;s++)r[s]=s;const a=t==="ASCENDING";return r.sort((s,l)=>{const O=e[s],p=e[l];return O<p?a?-1:1:O>p?a?1:-1:0}),r}function gt(n,t){const{fields:e,...r}=n,a=e.find(l=>l.name==="tsNs");if(a===void 0)throw new Error("missing nanosecond-timestamp field. should never happen");const s=mr(a,t);return{...r,fields:e.map(l=>({...l,values:new dr.o(l.values,s)}))}}var Or=o(17505),ht=o(62626),vt=o(72274),bt=o(28625);async function pr(n){const t=JSON.stringify({expr:n.expr}),e=new TextEncoder().encode(t),r=await crypto.subtle.digest("SHA-1",e);return Array.from(new Uint8Array(r.slice(0,8))).map(s=>s.toString(16).padStart(2,"0")).join("")}function fr(n,t,e){const r=e.range,a=r.to.valueOf()-r.from.valueOf()+1e3;let s=e.maxDataPoints??1e3;s>100&&(s*=2);let l;const O=p=>{if(p?.message){const b=p.message;l?l.push(b):l=bt.Av.fromDataFrameJSON(b,{maxLength:s,maxDelta:a,displayNameFormat:n.legendFormat})}return l};return(0,Or.P)(()=>pr(n)).pipe((0,We.z)(p=>(0,vt.gj)().getStream({scope:ht.z.DataSource,namespace:t.uid,path:`tail/${p}`,data:{...n,timeRange:{from:r.from.valueOf().toString(),to:r.to.valueOf().toString()}}}).pipe((0,V.U)(b=>{const E=O(b);return{data:E?[E]:[],state:J.Gu.Streaming}}))))}var yt=o(32920),Pt=o(85526),gr=o(59670),hr=o(9274),De=o(71210),Qt=o(46739);const vr=[{label:"Label names",value:F.Z3.LabelNames},{label:"Label values",value:F.Z3.LabelValues}],br="LokiVariableQueryEditor-VariableQuery",yr=({onChange:n,query:t,datasource:e})=>{const[r,a]=(0,G.useState)(void 0),[s,l]=(0,G.useState)(""),[O,p]=(0,G.useState)([]),[b,E]=(0,G.useState)("");(0,G.useEffect)(()=>{if(!t)return;const w=typeof t=="string"?er(t):t;a(w.type),l(w.label||""),E(w.stream||""),w.label&&p([{label:w.label,value:w.label}])},[t]),(0,G.useEffect)(()=>{r===F.Z3.LabelValues&&e.labelNamesQuery().then(w=>{p(w.map(({text:ae})=>({label:ae,value:ae})))})},[e,r]);const S=w=>{a(w.value),w.value!==void 0&&n({type:w.value,label:s,stream:b,refId:br})},Z=w=>{l(w.value||"")},B=w=>{E(w.currentTarget.value)},W=()=>{r!==void 0&&n({type:r,label:s,stream:b,refId:"LokiVariableQueryEditor-VariableQuery"})};return G.createElement(hr.Z,null,G.createElement(De._,{label:"Query type",labelWidth:20},G.createElement(Qt.Ph,{"aria-label":"Query type",onChange:S,onBlur:W,value:r,options:vr,width:16})),r===F.Z3.LabelValues&&G.createElement(G.Fragment,null,G.createElement(De._,{label:"Label",labelWidth:20},G.createElement(Qt.Ph,{"aria-label":"Label",onChange:Z,onBlur:W,value:s,options:O,width:16,allowCustomValue:!0})),G.createElement(De._,{label:"Stream selector",labelWidth:20,tooltip:G.createElement("div",null,'Optional. If defined, a list of values for the specified log stream selector is returned. For example: {label="value"} or {label="$variable"}')},G.createElement(ve.I,{type:"text","aria-label":"Stream selector",placeholder:"Optional stream selector",value:b,onChange:B,onBlur:W,width:22}))))};class Pr extends gr.Mg{constructor(t){super(),this.datasource=t,this.editor=yr,this.query=this.query.bind(this)}async execute(t){return this.datasource.metricFindQuery(t)}query(t){const e=this.execute(t.targets[0]);return(0,Pt.D)(e).pipe((0,V.U)(r=>({data:r})))}}const Lt=1e3,xr="/loki/api/v1",ue="loki-data-samples",pe="annotation-",Et="log-row-context-query-",Qr="log-volume-",Rr="log-sample-",Me=1e6;function xt(n,t,e,r,a){const s=oe.calculateInterval(t,1);return{targets:[n],requestId:r,interval:s.interval,intervalMs:s.intervalMs,range:t,scopedVars:{},timezone:"UTC",app:e,startTime:Date.now(),hideFromInspector:a}}class Tr extends ne.CK{constructor(t,e=(0,$.J)(),r=(0,N.$t)()){super(t),this.instanceSettings=t,this.templateSrv=e,this.timeSrv=r,this.streams=new et,this.runLiveQuery=(s,l)=>{const O=this.createLiveTarget(s,l);return this.streams.getStream(O).pipe((0,V.U)(p=>({data:p||[],key:`loki-${O.refId}`,state:J.Gu.Streaming})),(0,k.K)(p=>(0,g._)(()=>`Live tailing was stopped due to following error: ${p.reason}`)))},this.getLogRowContext=async(s,l)=>{const O=l&&l.direction||"BACKWARD",p=l&&l.limit||10,{query:b,range:E}=await this.prepareLogRowContextQueryTarget(s,p,O),S=W=>{const w=new te.N(W),ae=w.getFirstFieldOfType(z.fS.time),se=w.getFirstFieldOfType(z.fS.string),de=w.getFieldByName("id");return ae===void 0||se===void 0||de===void 0?{...W,fields:[]}:{...W,fields:[{...ae,name:"ts"},{...se,name:"line"},{...de,name:"id"}]}},Z=W=>{const ae=W.data.map(se=>gt(se,"DESCENDING")).map(se=>S(se));return{...W,data:ae}},B=u.zj.Explore;return(0,i.n)(this.query(xt(b,E,B,`${Et}${O}`)).pipe((0,k.K)(W=>{throw{message:"Error during context query. Please check JS console logs.",status:W.status,statusText:W.statusText}}),(0,X.w)(W=>(0,K.of)(Z(W)))))},this.prepareLogRowContextQueryTarget=async(s,l,O)=>{await this.languageProvider.start();const p=this.languageProvider.getLabelKeys(),b=Object.keys(s.labels).map(de=>p.includes(de)?`${de}="${(0,me.U9)(s.labels[de])}"`:"").filter(de=>!!de).join(","),E=2*60*60*1e3,S=O==="FORWARD"?F.sb.Forward:F.sb.Backward,Z={expr:`{${b}}`,queryType:F.EM.Range,refId:`${Et}${s.dataFrame.refId||""}`,maxLines:l,direction:S},W=new te.N(s.dataFrame).getFirstFieldOfType(z.fS.time);if(W===void 0)throw new Error("loki: dataframe missing time-field, should never happen");const w=W.values.get(s.rowIndex),ae=(0,U.zh)(w),se=S===F.sb.Forward?{from:ae,to:(0,U.zh)(s.timeEpochMs+E)}:{from:(0,U.zh)(s.timeEpochMs-E),to:ae};return{query:Z,range:{from:se.from,to:se.to,raw:se}}},this.languageProvider=new Ft(this);const a=t.jsonData||{};this.maxLines=parseInt(a.maxLines??"0",10)||Lt,this.annotations={QueryEditor:Jt},this.variables=new Pr(this)}getDataProvider(t,e){if(this.getSupportedSupplementaryQueryTypes().includes(t))switch(t){case A.v8.LogsVolume:return this.getLogsVolumeDataProvider(e);case A.v8.LogsSample:return this.getLogsSampleDataProvider(e);default:return}}getSupportedSupplementaryQueryTypes(){return[A.v8.LogsVolume,A.v8.LogsSample]}getSupplementaryQuery(t,e){if(!this.getSupportedSupplementaryQueryTypes().includes(t))return;const r=(0,ie.Ib)(e),a=ar(r.expr);let s=!1;switch(t){case A.v8.LogsVolume:return s=!!(e.expr&&(0,ie.rE)(e.expr)&&e.queryType===F.EM.Range),s?{...r,refId:`${Qr}${r.refId}`,instant:!1,volumeQuery:!0,expr:`sum by (level) (count_over_time(${a}[$__interval]))`}:void 0;case A.v8.LogsSample:return s=!!(e.expr&&!(0,ie.rE)(e.expr)),s?{...r,refId:`${Rr}${r.refId}`,expr:(0,ie.SP)(a),maxLines:100}:void 0;default:return}}getLogsVolumeDataProvider(t){const e=(0,T.cloneDeep)(t),r=e.targets.map(a=>this.getSupplementaryQuery(A.v8.LogsVolume,a)).filter(a=>!!a);if(r.length)return(0,x.Bz)(this,{...e,targets:r},{extractLevel:_r,range:t.range,targets:t.targets})}getLogsSampleDataProvider(t){const e=(0,T.cloneDeep)(t),r=e.targets.map(a=>this.getSupplementaryQuery(A.v8.LogsSample,a)).filter(a=>!!a);if(r.length)return(0,x.Ce)(this,{...e,targets:r})}query(t){const e=t.targets.map(ie.Ib).map(s=>({...s,maxLines:s.maxLines??this.maxLines})),r={...t,targets:e},a=r.targets.filter(s=>s.queryType===F.EM.Stream);if(j.v.featureToggles.lokiLive&&a.length>0&&r.rangeRaw?.to==="now"){const s={...r,targets:a};return(0,c.T)(...a.map(l=>fr(this.applyTemplateVariables(l,t.scopedVars),this,s)))}if(r.liveStreaming)return this.runLiveQueryThroughBackend(r);{const s=new Date;return super.query(r).pipe((0,V.U)(l=>kt(l,r.targets,this.instanceSettings.jsonData.derivedFields??[])),(0,ee.b)(l=>(0,yt.C)(l,r,s)))}}runLiveQueryThroughBackend(t){const e=t.targets.filter(a=>a.expr!==""&&(0,ie.rE)(a.expr));if(e.length===0)return(0,K.of)({data:[],state:J.Gu.Done});const r=e.map(a=>{const s=a.maxLines||this.maxLines;return this.runLiveQuery(a,s)});return(0,c.T)(...r)}createLiveTarget(t,e){const r=t.expr,a=this.instanceSettings.url,s=(0,q.tW)({query:r});return{query:r,url:(0,h.F3)(`${a}/loki/api/v1/tail?${s}`),refId:t.refId,size:e}}getRangeScopedVars(t=this.getTimeRange()){const e=t.to.diff(t.from),r=Math.round(e/1e3);return{__range_ms:{text:e,value:e},__range_s:{text:r,value:r},__range:{text:r+"s",value:r+"s"}}}interpolateVariablesInQueries(t,e){let r=t;return t&&t.length&&(r=t.map(a=>({...a,datasource:this.getRef(),expr:this.addAdHocFilters(this.templateSrv.replace(a.expr,e,this.interpolateQueryExpr))}))),r}getQueryDisplayText(t){return t.expr}getTimeRange(){return this.timeSrv.timeRange()}getTimeRangeParams(){const t=this.getTimeRange();return{start:t.from.valueOf()*Me,end:t.to.valueOf()*Me}}async importFromAbstractQueries(t){await this.languageProvider.start();const e=this.languageProvider.labelKeys;return e&&e.length&&(t=t.map(r=>(r.labelMatchers=r.labelMatchers.filter(a=>e.includes(a.name)),r))),t.map(r=>this.languageProvider.importFromAbstractQuery(r))}async exportToAbstractQueries(t){return t.map(e=>this.languageProvider.exportToAbstractQuery(e))}async metadataRequest(t,e){if(t.startsWith("/"))throw new Error(`invalid metadata request url: ${t}`);return(await this.getResource(t,e)).data||[]}async metricFindQuery(t){if(!t)return Promise.resolve([]);if(typeof t=="string"){const r=this.interpolateString(t);return await this.legacyProcessMetricFindQuery(r)}const e={...t,label:this.interpolateString(t.label||""),stream:this.interpolateString(t.stream||"")};return await this.processMetricFindQuery(e)}async processMetricFindQuery(t){return t.type===F.Z3.LabelNames?this.labelNamesQuery():t.label?t.stream?this.labelValuesSeriesQuery(t.stream,t.label):this.labelValuesQuery(t.label):[]}async legacyProcessMetricFindQuery(t){if(t.match(Re))return await this.labelNamesQuery();const r=t.match(Te);return r?r[1]?await this.labelValuesSeriesQuery(r[1],r[2]):await this.labelValuesQuery(r[2]):Promise.resolve([])}async labelNamesQuery(){const t="labels",e=this.getTimeRangeParams();return(await this.metadataRequest(t,e)).map(a=>({text:a}))}async labelValuesQuery(t){const e=this.getTimeRangeParams(),r=`label/${t}/values`;return(await this.metadataRequest(r,e)).map(s=>({text:s}))}async labelValuesSeriesQuery(t,e){const a={...this.getTimeRangeParams(),"match[]":t},s="series",l=new Set;return(await this.metadataRequest(s,a)).forEach(p=>{p[e]&&l.add({text:p[e]})}),Array.from(l)}async getDataSamples(t){if(!(0,ie.RT)(t.expr)||!(0,ie.rE)(t.expr))return[];const e={expr:t.expr,queryType:F.EM.Range,refId:ue,maxLines:10},r=(0,D.JK)(),a=xt(e,r,u.zj.Unknown,ue,!0);return await(0,i.n)(this.query(a).pipe((0,X.w)(s=>(0,K.of)(s.data))))}async getTagKeys(){return await this.labelNamesQuery()}async getTagValues(t={}){return await this.labelValuesQuery(t.key)}interpolateQueryExpr(t,e){return!e.multi&&!e.includeAll?Rt(t):typeof t=="string"?Lr(t):(0,T.map)(t,Lr).join("|")}modifyQuery(t,e){let r=t.expr??"";switch(e.type){case"ADD_FILTER":{if(e.options?.key&&e.options?.value){const a=(0,me.Hk)(e.options.value);r=be(r,e.options.key,"=",a)}break}case"ADD_FILTER_OUT":{if(e.options?.key&&e.options?.value){const a=(0,me.Hk)(e.options.value);r=be(r,e.options.key,"!=",a)}break}case"ADD_LOGFMT_PARSER":{r=dt(r,"logfmt");break}case"ADD_JSON_PARSER":{r=dt(r,"json");break}case"ADD_NO_PIPELINE_ERROR":{r=tr(r);break}case"ADD_LEVEL_LABEL_FORMAT":{e.options?.originalLabel&&e.options?.renameTo&&(r=rr(r,{renameTo:e.options.renameTo,originalLabel:e.options.originalLabel}));break}case"ADD_LABEL_FILTER":{const a=Se(t.expr),s=mt(t.expr),l=Ce([...a,...s]),O=Fe("","","=");r=$e(r,[l],O);break}case"ADD_LINE_FILTER":{r=pt(r);break}default:break}return{...t,expr:r}}getTime(t,e){return typeof t=="string"&&(t=I.parse(t,e)),Math.ceil(t.valueOf()*1e6)}testDatasource(){const t=Date.now(),e={start:(t-10*60*1e3)*Me,end:t*Me};return this.metadataRequest("labels",e).then(r=>r.length>0?{status:"success",message:"Data source connected and labels found."}:{status:"error",message:"Data source connected, but no labels received. Verify that Loki and Promtail is configured properly."},r=>{const a=r?.data?.message??"";return{status:"error",message:`Unable to fetch labels from Loki${a!==""?` (${a})`:""}, please check the server logs for more details`}})}async annotationQuery(t){const{expr:e,maxLines:r,instant:a,tagKeys:s="",titleFormat:l="",textFormat:O=""}=t.annotation;if(!e)return[];const p=`${pe}${t.annotation.name}`,b={refId:p,expr:e,maxLines:r,instant:a,queryType:a?F.EM.Instant:F.EM.Range},E=xt(b,t.range,u.zj.Dashboard,p),{data:S}=await(0,i.n)(this.query(E)),Z=[],B=s.split(",").filter(W=>W!=="");for(const W of S)new Y.U(W).forEach(ae=>{const{labels:se}=ae,de=Object.entries(se).map(([Ue,ye])=>[Ue,ye.trim()]).filter(([Ue,ye])=>!(ye===""||B.length&&!B.includes(Ue))).map(([Ue,ye])=>ye),Fr=Array.from(new Set(de));Z.push({time:new Date(ae.Time).valueOf(),title:(0,f.W)(l,se),text:(0,f.W)(O,se)||ae.Line,tags:Fr})});return Z}showContextToggle(t){return(t&&t.searchWords&&t.searchWords.length>0)===!0}processError(t,e){let r=(0,T.cloneDeep)(t);return r.refId=e.refId,r.data&&t.data.message.includes("escape")&&e.expr.includes("\\")&&(r.data.message=`Error: ${t.data.message}. Make sure that all special characters are escaped with \\. For more information on escaping of special characters visit LogQL documentation at https://grafana.com/docs/loki/latest/logql/.`),r}addAdHocFilters(t){const e=this.templateSrv.getAdhocFilters(this.name);let r=(0,Q.bU)(t);return r=e.reduce((a,s)=>{const{key:l,operator:O}=s;let{value:p}=s;return(0,me._z)(O)?p=Rt(p):p=(0,me.Hk)(p,O),be(a,l,O,p)},r),(0,Q.Tt)(r)}filterQuery(t){return!(t.hide||t.expr==="")}applyTemplateVariables(t,e){const{__interval:r,__interval_ms:a,...s}=e,l=this.addAdHocFilters(t.expr);return{...t,legendFormat:this.templateSrv.replace(t.legendFormat,s),expr:this.templateSrv.replace(l,s,this.interpolateQueryExpr)}}interpolateString(t,e){return this.templateSrv.replace(t,e,this.interpolateQueryExpr)}getVariables(){return this.templateSrv.getVariables().map(t=>`$${t.name}`)}getQueryHints(t,e){return ur(t.expr,e)}}function Rt(n){return typeof n=="string"?n.replace(/'/g,"\\\\'"):n}function Lr(n){return typeof n=="string"?Rt(n.replace(/\\/g,"\\\\\\\\").replace(/[$^*{}\[\]+?.()|]/g,"\\\\$&")):n}function _r(n){let t;try{t=new te.N(n).getFirstFieldOfType(z.fS.number)}catch{}return t?.labels?Sr(t.labels):A.in.unknown}function Sr(n){const t=["level","lvl","loglevel"];let e;for(let r of t)if(r in n){e=r;break}return e?(0,m.jx)(n[e]):A.in.unknown}},24666:(ce,H,o)=>{o.d(H,{H6:()=>J,Ib:()=>X,Iu:()=>ne,N7:()=>D,Qh:()=>j,RT:()=>z,SP:()=>Y,cQ:()=>U,dQ:()=>te,hI:()=>I,n6:()=>k,rE:()=>u,x9:()=>V});var T=o(82897),g=o.n(T),i=o(78252),K=o(44812),c=o(92555);function V(x){return`${x||""}`.trim()}function k(x){const h=[],N=i.E2.parse(x),$=[];N.iterate({enter:({type:q,node:m})=>{q.id===i.yx&&$.push(m)}});for(let q of $){const m=q.getChild(i.wn)?.getChild(i.OC),f=q.getChild(i.wn)?.getChild(i.Ih),Q=q.getChild(i.Ld);if(!m&&!f||!Q)continue;const L=x.substring(Q.from,Q.to).trim(),P=L[0]==="`",d=L.substring(1,L.length-1);if(!d)continue;let y="";f?y=P?d:d.replace(/\\\\/g,"\\"):y=(0,T.escapeRegExp)(d),y&&h.push(y)}return h}function X(x){const{queryType:h}=x;if(h===c.EM.Range||h===c.EM.Instant||h===c.EM.Stream){const{instant:f,range:Q,...L}=x;return L}if(x.instant===!0){const{instant:f,range:Q,...L}=x;return{...L,queryType:c.EM.Instant}}const{instant:$,range:q,...m}=x;return{...m,queryType:c.EM.Range}}const ee=["String","Identifier","LineComment","Number"],oe=["__error__","__interval","__interval_ms"];function J(x){let h=x;return i.E2.parse(x).iterate({enter:({name:$,from:q,to:m})=>{const f=x.substring(q,m);ee.includes($)&&!oe.includes(f)&&(h=h.replace(f,$))}}),h}function te(x){const h=[];return i.E2.parse(x).iterate({enter:({name:$})=>{h.push($)}}),h}function z(x){let h=!0;return i.E2.parse(x).iterate({enter:({type:$})=>{$.id===K._A&&(h=!1)}}),h}function u(x){let h=!0;return i.E2.parse(x).iterate({enter:({type:$})=>{$.id===i.cq&&(h=!1)}}),h}function U(x){let h=0;return i.E2.parse(x).iterate({enter:({type:$})=>{($.id===i.Li||$.id===i.Lu)&&h++}}),{queryWithParser:h>0,parserCount:h}}function A(x){const h=parser.parse(x);let N;return h.iterate({enter:$=>{if($.type.id===LabelParser||$.type.id===JsonExpressionParser)return N=x.substring($.from,$.to).trim(),!1}}),N}function D(x){let h=!1;return i.E2.parse(x).iterate({enter:({type:$,node:q})=>{if($.id===i.pj){const m=q.getChild(i.xO)?.getChild(i.xb);m&&x.substring(m.from,m.to)==="__error__"&&(h=!0)}}}),h}function I(x){let h=!1;return i.E2.parse(x).iterate({enter:({type:$})=>{$.id===i.zV&&(h=!0)}}),h}function Y(x){if(u(x))return x;const h=i.E2.parse(x);let N="";h.iterate({enter:({type:q,from:m,to:f})=>{if(q.id===i.Qf)return N=x.substring(m,f),!1}});let $="";return h.iterate({enter:({type:q,from:m,to:f})=>{if(q.id===i.iP)return $=x.substring(m,f),!1}}),N+$}function ne(x){const h=i.E2.parse(x);let N=!1;return h.iterate({enter:({type:$,node:q})=>{if($.id===i.pj){N=!0;return}}}),N}function j(x){const h=i.E2.parse(x);let N=!1;return h.iterate({enter:({type:$})=>{if($.id===i.yx){N=!0;return}}}),N}},39682:(ce,H,o)=>{o.d(H,{Y:()=>K,y:()=>c});var T=o(78625),g=o(58382),i=o(91720);class K extends T.x{constructor(){super(g._f),this.setOperationCategories([i.Ly.Aggregations,i.Ly.RangeFunctions,i.Ly.Formats,i.Ly.BinaryOps,i.Ly.LabelFilters,i.Ly.LineFilters])}renderLabels(k){return k.length===0?"{}":super.renderLabels(k)}getQueryPatterns(){return[{name:"Parse log lines with logfmt parser",type:i.Hv.Log,operations:[{id:i.B5.Logfmt,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]}]},{name:"Parse log lines with JSON parser",type:i.Hv.Log,operations:[{id:i.B5.Json,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]}]},{name:"Filter log line and parse with logfmt parser",type:i.Hv.Log,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.Logfmt,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]}]},{name:"Filter log lines and parse with json parser",type:i.Hv.Log,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.Json,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]}]},{name:"Parse log line with logfmt parser and use label filter",type:i.Hv.Log,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.Logfmt,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]},{id:i.B5.LabelFilter,params:["label","=","value"]}]},{name:"Parse log lines with nested json",type:i.Hv.Log,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.Json,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]},{id:i.B5.LineFormat,params:["{{.message}}"]},{id:i.B5.Json,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]}]},{name:"Reformat log lines",type:i.Hv.Log,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.Logfmt,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]},{id:i.B5.LineFormat,params:["{{.message}}"]}]},{name:"Rename lvl label to level",type:i.Hv.Log,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.Logfmt,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]},{id:i.B5.LabelFormat,params:["lvl","level"]}]},{name:"Query on value inside a log line",type:i.Hv.Metric,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.Logfmt,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]},{id:i.B5.Unwrap,params:[""]},{id:i.B5.LabelFilterNoErrors,params:[]},{id:i.B5.SumOverTime,params:["$__interval"]},{id:i.B5.Sum,params:[]}]},{name:"Total requests per label of streams",type:i.Hv.Metric,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.CountOverTime,params:["$__interval"]},{id:i.B5.Sum,params:[]}]},{name:"Total requests per parsed label or label of streams",type:i.Hv.Metric,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.Logfmt,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]},{id:i.B5.CountOverTime,params:["$__interval"]},{id:i.B5.Sum,params:[]}]},{name:"Bytes used by a log stream",type:i.Hv.Metric,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.BytesOverTime,params:["$__interval"]}]},{name:"Count of log lines per stream",type:i.Hv.Metric,operations:[{id:i.B5.LineContains,params:[""]},{id:i.B5.CountOverTime,params:["$__interval"]}]},{name:"Top N results by label or parsed label",type:i.Hv.Metric,operations:[{id:i.B5.Logfmt,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]},{id:i.B5.CountOverTime,params:["$__interval"]},{id:i.B5.Sum,params:[]},{id:i.B5.TopK,params:[10]}]},{name:"Extracted quantile",type:i.Hv.Metric,operations:[{id:i.B5.Logfmt,params:[]},{id:i.B5.LabelFilterNoErrors,params:[]},{id:i.B5.Unwrap,params:["latency"]},{id:i.B5.LabelFilterNoErrors,params:[]},{id:i.B5.QuantileOverTime,params:["$__interval",.5]},{id:i.B5.Sum,params:[]}]}]}}const c=new K},75215:(ce,H,o)=>{o.d(H,{E:()=>K,i:()=>i});var T=o(8373),g=o(91720);const i=[{id:g.B5.Addition,name:"Add scalar",sign:"+"},{id:g.B5.Subtraction,name:"Subtract scalar",sign:"-"},{id:g.B5.MultiplyBy,name:"Multiply by scalar",sign:"*"},{id:g.B5.DivideBy,name:"Divide by scalar",sign:"/"},{id:g.B5.Modulo,name:"Modulo by scalar",sign:"%"},{id:g.B5.Exponent,name:"Exponent",sign:"^"},{id:g.B5.EqualTo,name:"Equal to",sign:"==",comparison:!0},{id:g.B5.NotEqualTo,name:"Not equal to",sign:"!=",comparison:!0},{id:g.B5.GreaterThan,name:"Greater than",sign:">",comparison:!0},{id:g.B5.LessThan,name:"Less than",sign:"<",comparison:!0},{id:g.B5.GreaterOrEqual,name:"Greater or equal to",sign:">=",comparison:!0},{id:g.B5.LessOrEqual,name:"Less or equal to",sign:"<=",comparison:!0}],K=i.map(V=>{const k=[{name:"Value",type:"number"}],X=[2];return V.comparison&&(k.unshift({name:"Bool",type:"boolean",description:"If checked comparison will return 0 or 1 for the value rather than filtering."}),X.unshift(!1)),{id:V.id,name:V.name,params:k,defaultParams:X,alternativesKey:"binary scalar operations",category:g.Ly.BinaryOps,renderer:c(V.sign),addOperationHandler:T.PP}});function c(V){return function(X,ee,oe){let J=X.params[0],te="";return X.params.length===2&&(J=X.params[1],te=X.params[0]?" bool":""),`${oe} ${V}${te} ${J}`}}},58382:(ce,H,o)=>{o.d(H,{j$:()=>P,kf:()=>Q,XK:()=>L,_f:()=>m});var T=o(8373),g=o(75215),i=o(68404),K=o(63134),c=o(46739),V=o(72881),k=o(24666),X=o(87826),ee=o(39682);function oe({onChange:d,index:y,operationIndex:_,value:C,query:M,datasource:v}){const[F,R]=(0,i.useState)({});return i.createElement(c.Ph,{inputId:(0,T.i1)(_,y),onOpenMenu:async()=>{if(v instanceof V.KV){R({isLoading:!0});const le=await J(M,v);R({options:le,isLoading:void 0})}},isLoading:F.isLoading,allowCustomValue:!0,noOptionsMessage:"No labels found",loadingMessage:"Loading labels",options:F.options,value:C?(0,K.E)(C.toString()):null,onChange:le=>{le.value&&d(y,le.value)}})}async function J(d,y){const _=ee.y.renderQuery(d),C=(0,k.SP)(_);if(!(0,k.RT)(C))return[];const M=await y.getDataSamples({expr:C,refId:"unwrap_samples"});return(0,X.zb)(M[0]).map(R=>({label:R,value:R}))}var te=o(31075),z=o(19370),u=o(91720);function U(d,y){const _=[q()],C=["$__interval"];let M;return d===u.B5.QuantileOverTime&&(C.push("0.95"),_.push({name:"Quantile",type:"number"})),y&&(_.push({name:"By label",type:"string",restParam:!0,optional:!0}),M=(0,T.ZI)(`__${d}_by`)),{id:d,name:(0,T.t7)(d),params:_,defaultParams:C,alternativesKey:"range function",category:u.Ly.RangeFunctions,orderRank:u.jK.RangeVectorFunction,renderer:I,addOperationHandler:h,paramChangedHandler:M,explainHandler:(v,F)=>{let R=z.r8.find(le=>le.insertText===v.id)?.documentation??"";return v.params[0]==="$__interval"?`${R} \`$__interval\` is a variable that will be replaced with the [calculated interval](https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#__interval) based on the time range and width of the graph. In Dashboards, you can affect the interval variable using **Max data points** and **Min interval**. You can find these options under **Query options** right of the data source select dropdown.`:`${R} The [range vector](https://grafana.com/docs/loki/latest/logql/metric_queries/#range-vector-aggregation) is set to \`${v.params[0]}\`.`}}}function A(d){const y=U(d,!0),_=y.params.slice(0,-1);return[y,{id:`__${d}_by`,name:`${(0,T.t7)(d)} by`,params:[..._,{name:"Label",type:"string",restParam:!0,optional:!0,editor:te.g}],defaultParams:[...y.defaultParams,""],alternativesKey:"range function with grouping",category:u.Ly.RangeFunctions,renderer:D(d,"by"),paramChangedHandler:(0,T.j8)(d),explainHandler:(0,T.Sp)(d,"by"),addOperationHandler:h,hideFromList:!0},{id:`__${d}_without`,name:`${(0,T.t7)(d)} without`,params:[..._,{name:"Label",type:"string",restParam:!0,optional:!0,editor:te.g}],defaultParams:[...y.defaultParams,""],alternativesKey:"range function with grouping",category:u.Ly.RangeFunctions,renderer:D(d,"without"),paramChangedHandler:(0,T.j8)(d),explainHandler:(0,T.Sp)(d,"without"),addOperationHandler:h,hideFromList:!0}]}function D(d,y){return function(C,M,v){const F=M.params.findIndex(Pe=>Pe.restParam),R=C.params.slice(0,F),le=C.params.slice(F);return R.length===2&&d===u.B5.QuantileOverTime?`${d}(${R[1]}, ${v} [${R[0]}]) ${y} (${le.join(", ")})`:`${d}(${v} [${R[0]}]) ${y} (${le.join(", ")})`}}function I(d,y,_){const C=d.params??[],M=C[0]??"$__interval";if(C.length===2&&d.id===u.B5.QuantileOverTime){const v=C[1];return`${d.id}(${v}, ${_} [${M}])`}return`${d.id}(${_} [${C[0]??"$__interval"}])`}function Y(d,y,_){return d.params[1]==="<"||d.params[1]===">"?`${_} | ${d.params[0]} ${d.params[1]} ${d.params[2]}`:`${_} | ${d.params[0]} ${d.params[1]} \`${d.params[2]}\``}function ne(d,y,_){return`${_} | ${d.id}`}function j(d){return d.category===u.Ly.RangeFunctions}function x(d,y,_){const C=d.findIndex(M=>{const v=y.getOperationDef(M.id);return v?_(v):!1});return C===-1?d.length:C}function h(d,y,_){const C={id:d.id,params:d.defaultParams},M=[...y.operations],v=M.find(F=>{const R=_.getOperationDef(F.id);return R?j(R):!1});switch(d.category){case u.Ly.Aggregations:case u.Ly.Functions:if(!v){const R=x(M,_,le=>le.category===u.Ly.Functions);M.splice(R,0,{id:u.B5.Rate,params:["$__interval"]})}M.push(C);break;case u.Ly.RangeFunctions:if(v){const R=M.indexOf(v);M[R]=C;break}default:const F=x(M,_,R=>(d.orderRank??100)<(R.orderRank??100));M.splice(F,0,C);break}return{...y,operations:M}}function N(d,y){return{...y,binaryQueries:[...y.binaryQueries??[],{operator:"/",query:y}]}}function $(d,y){return function(C,M,v){return y?`${v} ${d} \`(?i)${C.params[0]}\``:`${v} ${d} \`${C.params[0]}\``}}function q(){return{name:"Range",type:"string",options:["$__interval","$__range","1m","5m","10m","1h","24h"]}}function m(){const d=[u.B5.Sum,u.B5.Min,u.B5.Max,u.B5.Avg,u.B5.Stddev,u.B5.Stdvar,u.B5.Count].flatMap(v=>(0,T.IT)(v,{addOperationHandler:h,orderRank:u.jK.Last})),y=[u.B5.TopK,u.B5.BottomK].flatMap(v=>(0,T.Z3)(v,{params:[{name:"K-value",type:"number"}],defaultParams:[5]},{addOperationHandler:h,orderRank:u.jK.Last})),_=[U(u.B5.Rate),U(u.B5.RateCounter),U(u.B5.CountOverTime),U(u.B5.SumOverTime),U(u.B5.BytesRate),U(u.B5.BytesOverTime),U(u.B5.AbsentOverTime)],C=[...A(u.B5.AvgOverTime),...A(u.B5.MaxOverTime),...A(u.B5.MinOverTime),...A(u.B5.FirstOverTime),...A(u.B5.LastOverTime),...A(u.B5.StdvarOverTime),...A(u.B5.StddevOverTime),...A(u.B5.QuantileOverTime)];return[...d,...y,..._,...C,{id:u.B5.Json,name:"Json",params:[{name:"Expression",type:"string",restParam:!0,optional:!0,minWidth:18,placeholder:'server="servers[0]"',description:"Using expressions with your json parser will extract only the specified json fields to labels. You can specify one or more expressions in this way. All expressions must be quoted."}],defaultParams:[],alternativesKey:"format",category:u.Ly.Formats,orderRank:u.jK.LineFormats,renderer:(v,F,R)=>`${R} | json ${v.params.join(", ")}`.trim(),addOperationHandler:h,explainHandler:()=>"This will extract keys and values from a [json](https://grafana.com/docs/loki/latest/logql/log_queries/#json) formatted log line as labels. The extracted labels can be used in label filter expressions and used as values for a range aggregation via the unwrap operation."},{id:u.B5.Logfmt,name:"Logfmt",params:[],defaultParams:[],alternativesKey:"format",category:u.Ly.Formats,orderRank:u.jK.LineFormats,renderer:ne,addOperationHandler:h,explainHandler:()=>"This will extract all keys and values from a [logfmt](https://grafana.com/docs/loki/latest/logql/log_queries/#logfmt) formatted log line as labels. The extracted labels can be used in label filter expressions and used as values for a range aggregation via the unwrap operation."},{id:u.B5.Regexp,name:"Regexp",params:[{name:"String",type:"string",hideName:!0,placeholder:"<re>",description:"The regexp expression that matches the structure of a log line.",minWidth:20}],defaultParams:[""],alternativesKey:"format",category:u.Ly.Formats,orderRank:u.jK.LineFormats,renderer:(v,F,R)=>`${R} | regexp \`${v.params[0]}\``,addOperationHandler:h,explainHandler:()=>'The [regexp parser](https://grafana.com/docs/loki/latest/logql/log_queries/#regular-expression) takes a single parameter | regexp "<re>" which is the regular expression using the Golang RE2 syntax. The regular expression must contain a least one named sub-match (e.g (?P<name>re)), each sub-match will extract a different label. The expression matches the structure of a log line. The extracted labels can be used in label filter expressions and used as values for a range aggregation via the unwrap operation.'},{id:u.B5.Pattern,name:"Pattern",params:[{name:"String",type:"string",hideName:!0,placeholder:"<pattern-expression>",description:"The expression that matches the structure of a log line.",minWidth:20}],defaultParams:[""],alternativesKey:"format",category:u.Ly.Formats,orderRank:u.jK.LineFormats,renderer:(v,F,R)=>`${R} | pattern \`${v.params[0]}\``,addOperationHandler:h,explainHandler:()=>"The [pattern parser](https://grafana.com/docs/loki/latest/logql/log_queries/#pattern) allows the explicit extraction of fields from log lines by defining a pattern expression (| pattern `<pattern-expression>`). The expression matches the structure of a log line. The extracted labels can be used in label filter expressions and used as values for a range aggregation via the unwrap operation."},{id:u.B5.Unpack,name:"Unpack",params:[],defaultParams:[],alternativesKey:"format",category:u.Ly.Formats,orderRank:u.jK.LineFormats,renderer:ne,addOperationHandler:h,explainHandler:()=>"This will extract all keys and values from a JSON log line, [unpacking](https://grafana.com/docs/loki/latest/logql/log_queries/#unpack) all embedded labels in the pack stage. The extracted labels can be used in label filter expressions and used as values for a range aggregation via the unwrap operation."},{id:u.B5.LineFormat,name:"Line format",params:[{name:"String",type:"string",hideName:!0,placeholder:"{{.status_code}}",description:"A line template that can refer to stream labels and extracted labels.",minWidth:20}],defaultParams:[""],alternativesKey:"format",category:u.Ly.Formats,orderRank:u.jK.LineFormats,renderer:(v,F,R)=>`${R} | line_format \`${v.params[0]}\``,addOperationHandler:h,explainHandler:()=>`This will replace log line using a specified template. The template can refer to stream labels and extracted labels.

Example: \`{{.status_code}} - {{.message}}\`

[Read the docs](https://grafana.com/docs/loki/latest/logql/log_queries/#line-format-expression) for more.
        `},{id:u.B5.LabelFormat,name:"Label format",params:[{name:"Label",type:"string"},{name:"Rename to",type:"string"}],defaultParams:["",""],alternativesKey:"format",category:u.Ly.Formats,orderRank:u.jK.LineFormats,renderer:(v,F,R)=>`${R} | label_format ${v.params[1]}=${v.params[0]}`,addOperationHandler:h,explainHandler:()=>'This will change name of label to desired new label. In the example below, label "error_level" will be renamed to "level".\n\nExample: ``error_level=`level` ``\n\n[Read the docs](https://grafana.com/docs/loki/latest/logql/log_queries/#labels-format-expression) for more.\n        '},{id:u.B5.LineContains,name:"Line contains",params:[{name:"String",type:"string",hideName:!0,placeholder:"Text to find",description:"Find log lines that contains this text",minWidth:20,runQueryOnEnter:!0}],defaultParams:[""],alternativesKey:"line filter",category:u.Ly.LineFilters,orderRank:u.jK.LineFilters,renderer:$("|="),addOperationHandler:h,explainHandler:v=>`Return log lines that contain string \`${v.params[0]}\`.`},{id:u.B5.LineContainsNot,name:"Line does not contain",params:[{name:"String",type:"string",hideName:!0,placeholder:"Text to exclude",description:"Find log lines that does not contain this text",minWidth:26,runQueryOnEnter:!0}],defaultParams:[""],alternativesKey:"line filter",category:u.Ly.LineFilters,orderRank:u.jK.LineFilters,renderer:$("!="),addOperationHandler:h,explainHandler:v=>`Return log lines that does not contain string \`${v.params[0]}\`.`},{id:u.B5.LineContainsCaseInsensitive,name:"Line contains case insensitive",params:[{name:"String",type:"string",hideName:!0,placeholder:"Text to find",description:"Find log lines that contains this text",minWidth:33,runQueryOnEnter:!0}],defaultParams:[""],alternativesKey:"line filter",category:u.Ly.LineFilters,orderRank:u.jK.LineFilters,renderer:$("|~",!0),addOperationHandler:h,explainHandler:v=>`Return log lines that match regex \`(?i)${v.params[0]}\`.`},{id:u.B5.LineContainsNotCaseInsensitive,name:"Line does not contain case insensitive",params:[{name:"String",type:"string",hideName:!0,placeholder:"Text to exclude",description:"Find log lines that does not contain this text",minWidth:40,runQueryOnEnter:!0}],defaultParams:[""],alternativesKey:"line filter",category:u.Ly.LineFilters,orderRank:u.jK.LineFilters,renderer:$("!~",!0),addOperationHandler:h,explainHandler:v=>`Return log lines that does not match regex \`(?i)${v.params[0]}\`.`},{id:u.B5.LineMatchesRegex,name:"Line contains regex match",params:[{name:"Regex",type:"string",hideName:!0,placeholder:"Pattern to match",description:"Find log lines that match this regex pattern",minWidth:30,runQueryOnEnter:!0}],defaultParams:[""],alternativesKey:"line filter",category:u.Ly.LineFilters,orderRank:u.jK.LineFilters,renderer:$("|~"),addOperationHandler:h,explainHandler:v=>`Return log lines that match a \`RE2\` regex pattern. \`${v.params[0]}\`.`},{id:u.B5.LineMatchesRegexNot,name:"Line does not match regex",params:[{name:"Regex",type:"string",hideName:!0,placeholder:"Pattern to exclude",description:"Find log lines that does not match this regex pattern",minWidth:30,runQueryOnEnter:!0}],defaultParams:[""],alternativesKey:"line filter",category:u.Ly.LineFilters,orderRank:u.jK.LineFilters,renderer:$("!~"),addOperationHandler:h,explainHandler:v=>`Return log lines that doesn't match a \`RE2\` regex pattern. \`${v.params[0]}\`.`},{id:u.B5.LineFilterIpMatches,name:"IP line filter expression",params:[{name:"Operator",type:"string",options:["|=","!="]},{name:"Pattern",type:"string",placeholder:"<pattern>",minWidth:16,runQueryOnEnter:!0}],defaultParams:["|=",""],alternativesKey:"line filter",category:u.Ly.LineFilters,orderRank:u.jK.LineFilters,renderer:(v,F,R)=>`${R} ${v.params[0]} ip(\`${v.params[1]}\`)`,addOperationHandler:h,explainHandler:v=>`Return log lines using IP matching of \`${v.params[1]}\``},{id:u.B5.LabelFilter,name:"Label filter expression",params:[{name:"Label",type:"string"},{name:"Operator",type:"string",options:["=","!="," =~","!~",">","<",">=","<="]},{name:"Value",type:"string"}],defaultParams:["","=",""],alternativesKey:"label filter",category:u.Ly.LabelFilters,orderRank:u.jK.LabelFilters,renderer:Y,addOperationHandler:h,explainHandler:()=>"Label expression filter allows filtering using original and extracted labels."},{id:u.B5.LabelFilterIpMatches,name:"IP label filter expression",params:[{name:"Label",type:"string"},{name:"Operator",type:"string",options:["=","!="]},{name:"Value",type:"string"}],defaultParams:["","=",""],alternativesKey:"label filter",category:u.Ly.LabelFilters,orderRank:u.jK.LabelFilters,renderer:(v,F,R)=>`${R} | ${v.params[0]} ${v.params[1]} ip(\`${v.params[2]}\`)`,addOperationHandler:h,explainHandler:v=>`Return log lines using IP matching of \`${v.params[2]}\` for \`${v.params[0]}\` label`},{id:u.B5.LabelFilterNoErrors,name:"No pipeline errors",params:[],defaultParams:[],alternativesKey:"label filter",category:u.Ly.LabelFilters,orderRank:u.jK.NoErrors,renderer:(v,F,R)=>`${R} | __error__=\`\``,addOperationHandler:h,explainHandler:()=>"Filter out all formatting and parsing errors."},{id:u.B5.Unwrap,name:"Unwrap",params:[{name:"Identifier",type:"string",hideName:!0,minWidth:16,placeholder:"Label key",editor:oe},{name:"Conversion function",hideName:!0,type:"string",options:["duration","duration_seconds","bytes"],optional:!0}],defaultParams:["",""],alternativesKey:"format",category:u.Ly.Formats,orderRank:u.jK.Unwrap,renderer:(v,F,R)=>`${R} | unwrap ${v.params[1]?`${v.params[1]}(${v.params[0]})`:v.params[0]}`,addOperationHandler:h,explainHandler:v=>{let F=String(v.params[0]).length>0?v.params[0]:"<label>";return`Use the extracted label \`${F}\` as sample values instead of log lines for the subsequent range aggregation.${v.params[1]?` Conversion function \`${v.params[1]}\` wrapping \`${F}\` will attempt to convert this label from a specific format (e.g. 3k, 500ms).`:""}`}},...g.E,{id:u.B5.NestedQuery,name:"Binary operation with query",params:[],defaultParams:[],category:u.Ly.BinaryOps,renderer:(v,F,R)=>R,addOperationHandler:N}]}const f=m();function Q(d){return(f.find(C=>C.id===d)?.explainHandler?.({id:"",params:["<value>"]})||"").replace(/\[(.*)\]\(.*\)/g,"$1")}function L(d){return f.find(y=>y.id===d)}function P(d,y){return!(y.length<d.params.filter(_=>!_.optional).length)}},21745:(ce,H,o)=>{o.d(H,{_:()=>k});var T=o(74899),g=o(78252),i=o(44812),K=o(75215),c=o(58382),V=o(91720);function k(m){const f=(0,i.bU)(m),L=g.E2.parse(f).topNode,d={query:{labels:[],operations:[]},errors:[]};try{X(f,L,d)}catch(y){console.error(y),y instanceof Error&&d.errors.push({text:y.message})}return q(d.query)&&(d.errors=[]),d}function X(m,f,Q){const L=Q.query;switch(f.type.id){case g.xO:{L.labels.push(ee(m,f));const P=f.getChild(i._A);P&&Q.errors.push((0,i.wf)(m,P));break}case g.yx:{const{operation:P,error:d}=oe(m,f);P&&L.operations.push(P),d&&Q.errors.push($(m,f,d));break}case g.Li:{L.operations.push(J(m,f));break}case g.pj:{const{operation:P,error:d}=z(m,f);P&&L.operations.push(P),d&&Q.errors.push($(m,f,d));break}case g.Lu:{L.operations.push(te(m,f));break}case g.PQ:{L.operations.push(u(m,f));break}case g.Md:{L.operations.push(U(m,f));break}case g.Xt:{const{operation:P,error:d}=A(m,f,Q);P&&L.operations.push(P),d&&Q.errors.push($(m,f,d));break}case g.Tr:{L.operations.push(D(m,f,Q));break}case g.M0:{L.operations.push(I(m,f,Q));break}case g.uf:{ne(m,f,Q);break}case i._A:{if(x(f))break;Q.errors.push((0,i.wf)(m,f));break}default:{let P=f.firstChild;for(;P;)X(m,P,Q),P=P.nextSibling}}}function ee(m,f){const Q=f.getChild(g.xb),L=(0,i.KF)(m,Q),P=(0,i.KF)(m,Q.nextSibling);let d=(0,i.KF)(m,f.getChild(g.Ld));return d=d.substring(1,d.length-1),{label:L,op:P,value:d}}function oe(m,f){const Q=(0,i.KF)(m,f.getChild(g.wn)),L=h((0,i.KF)(m,f.getChild(g.Ld)));return f.getChild(g.JX)?.getChild(g.Ip)?{operation:{id:V.B5.LineFilterIpMatches,params:[Q,L]}}:{operation:{id:{"|=":V.B5.LineContains,"!=":V.B5.LineContainsNot,"|~":V.B5.LineMatchesRegex,"!~":V.B5.LineMatchesRegexNot}[Q],params:[L]}}}function J(m,f){const Q=f.firstChild,L=(0,i.KF)(m,Q),P=h((0,i.KF)(m,f.getChild(g.Ld)));let d=P?[P]:[];const y=(0,c.XK)(L);return y&&!(0,c.j$)(y,d)&&(d=y?.defaultParams||[]),{id:L,params:d}}function te(m,f){const Q=f.getChild(g.Ph),L=(0,i.KF)(m,Q),P=[...(0,i.ff)(m,f,g.uw)];return{id:L,params:P}}function z(m,f){if(f.getChild(g.Or)||f.getChild(g.W8)||f.getChild("Comma"))return{error:'Label filter with comma, "and", "or" not supported in query builder'};if(f.firstChild.type.id===g.Fo){const C=f.firstChild,M=C?.getChild(g.xb),v=M?.nextSibling,F=C?.getChild(g.Ld),R=h((0,i.KF)(m,F));return{operation:{id:V.B5.LabelFilterIpMatches,params:[(0,i.KF)(m,M),(0,i.KF)(m,v),R]}}}const Q=V.B5.LabelFilter;if(f.firstChild.type.id===g.ai){const M=f.firstChild.firstChild.firstChild,v=M.nextSibling,F=v.nextSibling,R=h((0,i.KF)(m,F));return{operation:{id:Q,params:[(0,i.KF)(m,M),(0,i.KF)(m,v),R]}}}const P=f.firstChild.firstChild,d=P.nextSibling,y=d.nextSibling,_=[(0,i.KF)(m,P),(0,i.KF)(m,d),h((0,i.KF)(m,y))];return _.join("")==="__error__="?{operation:{id:V.B5.LabelFilterNoErrors,params:[]}}:{operation:{id:Q,params:_}}}function u(m,f){const Q=V.B5.LineFormat,L=h((0,i.KF)(m,f.getChild(g.Ld)));return{id:Q,params:[L]}}function U(m,f){const Q=V.B5.LabelFormat,L=f.getChild(g.xb),d=L.nextSibling.nextSibling;return{id:Q,params:[(0,i.KF)(m,d),h((0,i.KF)(m,L))]}}function A(m,f,Q){const L=f.getChild(g.Xt),P=f.getChild(g.pj),d=f.getChild(g.Z7);if(L&&X(m,L,Q),P&&X(m,P,Q),d){if(d.nextSibling?.type.id===g.h3){const y=d.nextSibling,_=y.nextSibling;return{operation:{id:V.B5.Unwrap,params:[(0,i.KF)(m,_),(0,i.KF)(m,y)]}}}return{operation:{id:V.B5.Unwrap,params:[(0,i.KF)(m,d?.nextSibling),""]}}}return{}}function D(m,f,Q){const L=f.getChild(g.gQ),P=(0,i.KF)(m,L),d=f.getChild(g.Mr),y=f.getChild(g.UN),_=d!=null?[(0,i.KF)(m,d)]:[],C=y?.getChild(g.e6),M=C?(0,i.KF)(m,C):null;M&&_.unshift(M.substring(1,M.length-1));const v={id:P,params:_};return y&&X(m,y,Q),v}function I(m,f,Q){const L=f.getChild(g.Up);let P=(0,i.KF)(m,L);const d=f.getChild(g.Kz),y=[],_=f.getChild(g.Mr);_&&y.push(Number((0,i.KF)(m,_))),d&&(d.getChild(g.By)&&P&&(P=`__${P}_by`),d.getChild(g.yN)&&(P=`__${P}_without`),y.push(...(0,i.ff)(m,d,g.xb)));const C=f.getChild(g.cq),M={id:P,params:y};return C&&X(m,C,Q),M}const Y=K.i.reduce((m,f)=>(m[f.sign]={id:f.id,comparison:f.comparison},m),{});function ne(m,f,Q){const L=Q.query,P=f.firstChild,d=(0,i.KF)(m,P.nextSibling),y=j(m,f.getChild(T.v3)),_=f.lastChild,C=Y[d],M=N(P,"MetricExpr.LiteralExpr.Number"),v=N(_,"MetricExpr.LiteralExpr.Number"),F=_.getChild(g.uf);if(M||X(m,P,Q),v)L.operations.push((0,i.Es)(C,m,_,!!y?.isBool));else if(F){const R=(0,i.ge)(_);R?.name==="Number"&&L.operations.push((0,i.Es)(C,m,R,!!y?.isBool)),X(m,_,Q)}else{L.binaryQueries=L.binaryQueries||[];const R={operator:d,query:{labels:[],operations:[]}};y?.isMatcher&&(R.vectorMatchesType=y.matchType,R.vectorMatches=y.matches),L.binaryQueries.push(R),X(m,_,{query:R.query,errors:Q.errors})}}function j(m,f){if(f){if(f.getChild(g.tW))return{isBool:!0,isMatcher:!1};{const Q=f.getChild(T.Wc);return Q?{isMatcher:!0,isBool:!1,matches:(0,i.KF)(m,Q.getChild(g.XT)?.getChild(g.pQ)),matchType:Q.getChild(g.On)?"on":"ignoring"}:void 0}}}function x(m){return m?.parent?.type.id===g.e6}function h(m){return m[0]==='"'&&m[m.length-1]==='"'?m.replace(/"/g,"").replace(/\\\\/g,"\\"):m.replace(/`/g,"")}function N(m,f){let Q=m;const L=f.split(".");for(const P of L)if(Q=Q.getChild(P),!Q)return null;return Q}function $(m,f,Q){const L=(0,i.wf)(m,f);return L.text=`${Q}: ${L.text}`,L}function q(m){return m.labels.length===0&&m.operations.length===0}},91720:(ce,H,o)=>{o.d(H,{B5:()=>i,Hv:()=>T,Ly:()=>g,jK:()=>K});var T=(c=>(c.Log="log",c.Metric="metric",c))(T||{}),g=(c=>(c.Aggregations="Aggregations",c.RangeFunctions="Range functions",c.Functions="Functions",c.Formats="Formats",c.LineFilters="Line filters",c.LabelFilters="Label filters",c.BinaryOps="Binary operations",c))(g||{}),i=(c=>(c.Json="json",c.Logfmt="logfmt",c.Regexp="regexp",c.Pattern="pattern",c.Unpack="unpack",c.LineFormat="line_format",c.LabelFormat="label_format",c.Rate="rate",c.RateCounter="rate_counter",c.CountOverTime="count_over_time",c.SumOverTime="sum_over_time",c.AvgOverTime="avg_over_time",c.MaxOverTime="max_over_time",c.MinOverTime="min_over_time",c.FirstOverTime="first_over_time",c.LastOverTime="last_over_time",c.StdvarOverTime="stdvar_over_time",c.StddevOverTime="stddev_over_time",c.QuantileOverTime="quantile_over_time",c.BytesRate="bytes_rate",c.BytesOverTime="bytes_over_time",c.AbsentOverTime="absent_over_time",c.Sum="sum",c.Avg="avg",c.Min="min",c.Max="max",c.Stddev="stddev",c.Stdvar="stdvar",c.Count="count",c.TopK="topk",c.BottomK="bottomk",c.LineContains="__line_contains",c.LineContainsNot="__line_contains_not",c.LineContainsCaseInsensitive="__line_contains_case_insensitive",c.LineContainsNotCaseInsensitive="__line_contains_not_case_insensitive",c.LineMatchesRegex="__line_matches_regex",c.LineMatchesRegexNot="__line_matches_regex_not",c.LineFilterIpMatches="__line_filter_ip_matches",c.LabelFilter="__label_filter",c.LabelFilterNoErrors="__label_filter_no_errors",c.LabelFilterIpMatches="__label_filter_ip_marches",c.Unwrap="unwrap",c.SumBy="__sum_by",c.SumWithout="__sum_without",c.Addition="__addition",c.Subtraction="__subtraction",c.MultiplyBy="__multiply_by",c.DivideBy="__divide_by",c.Modulo="__modulo",c.Exponent="__exponent",c.NestedQuery="__nested_query",c.EqualTo="__equal_to",c.NotEqualTo="__not_equal_to",c.GreaterThan="__greater_than",c.LessThan="__less_than",c.GreaterOrEqual="__greater_or_equal",c.LessOrEqual="__less_or_equal",c))(i||{}),K=(c=>(c[c.LineFilters=1]="LineFilters",c[c.LineFormats=2]="LineFormats",c[c.LabelFilters=3]="LabelFilters",c[c.Unwrap=4]="Unwrap",c[c.NoErrors=5]="NoErrors",c[c.RangeVectorFunction=5]="RangeVectorFunction",c[c.Last=6]="Last",c))(K||{})},87826:(ce,H,o)=>{o.d(H,{EO:()=>X,vh:()=>k,ki:()=>te,e8:()=>oe,Y:()=>z,OP:()=>ee,zb:()=>J});var T=o(14582),g=o(37556),i=o(31439);function K(u){let U;try{U=JSON.parse(u)}catch{}return typeof U=="object"}const c=/(?:^|\s)([\w\(\)\[\]\{\}]+)=(""|(?:".*?[^\\]"|[^"\s]\S*))/;function V(u){return c.test(u)}function k(u){return(u.fields.find(A=>A.name==="labels")?.values.toArray()??[]).some(A=>A.__error__!==void 0)}function X(u){return(u.fields.find(A=>A.name==="labels")?.values.toArray()??[]).some(A=>A.level!==void 0)}function ee(u){const U=u.fields.find(Y=>Y.type===T.fS.string);if(U==null)return{hasJSON:!1,hasLogfmt:!1};const A=U.values.toArray();let D=!1,I=!1;return A.forEach(Y=>{K(Y)&&(D=!0),V(Y)&&(I=!0)}),{hasLogfmt:I,hasJSON:D}}function oe(u){const U=u?.fields?.find(A=>A.name==="labels")?.values.toArray()??[];return U?.length?Object.keys(U[0]):[]}function J(u){const U=u?.fields?.find(D=>D.name==="labels")?.values.toArray()??[];return U?.length?Object.keys(U[0]).filter(D=>{const I=U[0][D];return I?!isNaN(Number(I))||(0,g.IA)(I)||(0,i.aC)(I):!1}).filter(D=>U.every(I=>I[D])):[]}function te(u){const U=u.fields.find(D=>D.name==="labels"&&D.type===T.fS.other);return U==null?!1:U.values.toArray().some(D=>D.__error__)}function z(u){const U=u.fields.find(I=>I.name==="labels"&&I.type===T.fS.other);if(U==null)return null;const A=U.values.toArray().slice(0,2);let D=null;for(let I of A){const Y=Object.keys(I).find(ne=>ne==="lvl"||ne.includes("level"));if(Y){D=Y;break}}return D}},19370:(ce,H,o)=>{o.d(H,{$5:()=>T,EH:()=>K,Rd:()=>i,ZP:()=>X,r8:()=>c,uR:()=>g,xY:()=>k});const T=[{label:"avg",insertText:"avg",documentation:"Calculate the average over dimensions"},{label:"bottomk",insertText:"bottomk",documentation:"Smallest k elements by sample value"},{label:"count",insertText:"count",documentation:"Count number of elements in the vector"},{label:"max",insertText:"max",documentation:"Select maximum over dimensions"},{label:"min",insertText:"min",documentation:"Select minimum over dimensions"},{label:"stddev",insertText:"stddev",documentation:"Calculate population standard deviation over dimensions"},{label:"stdvar",insertText:"stdvar",documentation:"Calculate population standard variance over dimensions"},{label:"sum",insertText:"sum",documentation:"Calculate sum over dimensions"},{label:"topk",insertText:"topk",documentation:"Largest k elements by sample value"}],g=[{label:"json",insertText:"json",documentation:"Extracting labels from the log line using json parser."},{label:"regexp",insertText:'regexp ""',documentation:"Extracting labels from the log line using regexp parser.",move:-1},{label:"logfmt",insertText:"logfmt",documentation:"Extracting labels from the log line using logfmt parser."},{label:"pattern",insertText:"pattern",documentation:"Extracting labels from the log line using pattern parser. Only available in Loki 2.3+."},{label:"unpack",insertText:"unpack",detail:"unpack identifier",documentation:'Parses a JSON log line, unpacking all embedded labels in the pack stage. A special property "_entry" will also be used to replace the original log line. Only available in Loki 2.2+.'}],i=[{label:"unwrap",insertText:"unwrap",detail:"unwrap identifier",documentation:"Take labels and use the values as sample data for metric aggregations."},{label:"label_format",insertText:"label_format",documentation:"Use to rename, modify or add labels. For example, | label_format foo=bar ."},{label:"line_format",insertText:"line_format",documentation:'Rewrites log line content. For example, | line_format "{{.query}} {{.duration}}" .'}],K=[{insertText:"avg_over_time",label:"avg_over_time",detail:"avg_over_time(range-vector)",documentation:"The average of all values in the specified interval."},{insertText:"bytes_over_time",label:"bytes_over_time",detail:"bytes_over_time(range-vector)",documentation:"Counts the amount of bytes used by each log stream for a given range"},{insertText:"bytes_rate",label:"bytes_rate",detail:"bytes_rate(range-vector)",documentation:"Calculates the number of bytes per second for each stream."},{insertText:"first_over_time",label:"first_over_time",detail:"first_over_time(range-vector)",documentation:"The first of all values in the specified interval. Only available in Loki 2.3+."},{insertText:"last_over_time",label:"last_over_time",detail:"last_over_time(range-vector)",documentation:"The last of all values in the specified interval. Only available in Loki 2.3+."},{insertText:"sum_over_time",label:"sum_over_time",detail:"sum_over_time(range-vector)",documentation:"The sum of all values in the specified interval."},{insertText:"count_over_time",label:"count_over_time",detail:"count_over_time(range-vector)",documentation:"The count of all values in the specified interval."},{insertText:"max_over_time",label:"max_over_time",detail:"max_over_time(range-vector)",documentation:"The maximum of all values in the specified interval."},{insertText:"min_over_time",label:"min_over_time",detail:"min_over_time(range-vector)",documentation:"The minimum of all values in the specified interval."},{insertText:"quantile_over_time",label:"quantile_over_time",detail:"quantile_over_time(scalar, range-vector)",documentation:"The \u03C6-quantile (0 \u2264 \u03C6 \u2264 1) of the values in the specified interval."},{insertText:"rate",label:"rate",detail:"rate(v range-vector)",documentation:"Calculates the number of entries per second."},{insertText:"stddev_over_time",label:"stddev_over_time",detail:"stddev_over_time(range-vector)",documentation:"The population standard deviation of the values in the specified interval."},{insertText:"stdvar_over_time",label:"stdvar_over_time",detail:"stdvar_over_time(range-vector)",documentation:"The population standard variance of the values in the specified interval."}],c=[...T,...K],V=[...c,...i,...g].map(ee=>ee.label),k={comment:{pattern:/#.*/},"context-aggregation":{pattern:/((without|by)\s*)\([^)]*\)/,lookbehind:!0,inside:{"label-key":{pattern:/[^(),\s][^,)]*[^),\s]*/,alias:"attr-name"},punctuation:/[()]/}},"context-labels":{pattern:/\{[^}]*(?=}?)/,greedy:!0,inside:{comment:{pattern:/#.*/},"label-key":{pattern:/[a-zA-Z_]\w*(?=\s*(=|!=|=~|!~))/,alias:"attr-name",greedy:!0},"label-value":{pattern:/"(?:\\.|[^\\"])*"/,greedy:!0,alias:"attr-value"},punctuation:/[{]/}},"context-pipe":{pattern:/\s\|[^=~]\s?\w*/i,inside:{"pipe-operator":{pattern:/\|/i,alias:"operator"},"pipe-operations":{pattern:new RegExp(`${[...g,...i].map(ee=>ee.label).join("|")}`,"i"),alias:"keyword"}}},function:new RegExp(`\\b(?:${c.map(ee=>ee.label).join("|")})(?=\\s*\\()`,"i"),"context-range":[{pattern:/\[[^\]]*(?=\])/,inside:{"range-duration":{pattern:/\b\d+[smhdwy]\b/i,alias:"number"}}},{pattern:/(offset\s+)\w+/,lookbehind:!0,inside:{"range-duration":{pattern:/\b\d+[smhdwy]\b/i,alias:"number"}}}],quote:{pattern:/"(?:\\.|[^\\"])*"/,alias:"string",greedy:!0},backticks:{pattern:/`(?:\\.|[^\\`])*`/,alias:"string",greedy:!0},number:/\b-?\d+((\.\d*)?([eE][+-]?\d+)?)?\b/,operator:/\s?(\|[=~]?|!=?|<(?:=>?|<|>)?|>[>=]?)\s?/i,punctuation:/[{}(),.]/},X=k},32920:(ce,H,o)=>{o.d(H,{C:()=>A,u:()=>oe});var T=o(40400),g=o(77274),i=o(93003),K=o(92624),c=o(58079),V=o(72881),k=o(93716),X=o(24666),ee=o(92555);const oe=({payload:{dashboardId:D,orgId:I,grafanaVersion:Y,queries:ne}})=>{try{const j=ne[k.id].filter(y=>!y.hide).map(y=>(0,X.Ib)(y));if(!j?.length)return;const x=j.filter(y=>(0,X.rE)(y.expr)),h=j.filter(y=>!(0,X.rE)(y.expr)),N=j.filter(y=>y.queryType===ee.EM.Instant),$=j.filter(y=>y.queryType===ee.EM.Range),q=j.filter(y=>y.editorMode===c.c.Builder),m=j.filter(y=>y.editorMode===c.c.Code),f=j.filter(J),Q=j.filter(te),L=j.filter(z),P=j.filter(u),d={grafana_version:Y,dashboard_id:D,org_id:I,queries_count:j.length,logs_queries_count:x.length,metric_queries_count:h.length,instant_queries_count:N.length,range_queries_count:$.length,builder_mode_queries_count:q.length,code_mode_queries_count:m.length,queries_with_template_variables_count:f.length,queries_with_changed_resolution_count:Q.length,queries_with_changed_line_limit_count:L.length,queries_with_changed_legend_count:P.length};(0,g.ff)("grafana_loki_dashboard_loaded",d)}catch(j){console.error("error in loki tracking handler",j)}},J=D=>K.J7.test(D.expr),te=D=>D.resolution?D.resolution!==1:!1,z=D=>D.maxLines!==null&&D.maxLines!==void 0,u=D=>D.legendFormat?D.legendFormat!=="":!1,U=D=>{const I=[V.xf,V.NZ,V.V8];return!!(D===V.Ic||I.some(Y=>D.startsWith(Y)))};function A(D,I,Y){const{app:ne,targets:j}=I;if(ne===T.zj.Dashboard||ne===T.zj.PanelViewer)return;let x=0;for(const h of D.data){const N=h.meta?.custom?.lokiQueryStatKey;N&&(x+=h.meta?.stats?.find($=>$.displayName===N)?.value??0)}for(const h of j){if(U(h.refId))return;(0,g.ff)("grafana_loki_query_executed",{app:ne,grafana_version:i.v.buildInfo.version,editor_mode:h.editorMode,has_data:D.data.some(N=>N.length>0),has_error:D.error!==void 0,legend:h.legendFormat,line_limit:h.maxLines,parsed_query:(0,X.dQ)(h.expr).join(","),obfuscated_query:(0,X.H6)(h.expr),query_type:(0,X.rE)(h.expr)?"logs":"metric",query_vector_type:h.queryType,resolution:h.resolution,simultaneously_sent_query_count:j.length,time_range_from:I?.range?.from?.toISOString(),time_range_to:I?.range?.to?.toISOString(),time_taken:Date.now()-Y.getTime(),bytes_processed:x})}}},92555:(ce,H,o)=>{o.d(H,{EM:()=>g,Z3:()=>K,sb:()=>i});var T=(c=>(c.Stream="streams",c.Vector="vector",c.Matrix="matrix",c))(T||{}),g=(c=>(c.Range="range",c.Instant="instant",c.Stream="stream",c))(g||{}),i=(c=>(c.Backward="backward",c.Forward="forward",c))(i||{}),K=(c=>(c[c.LabelNames=0]="LabelNames",c[c.LabelValues=1]="LabelValues",c))(K||{})},58079:(ce,H,o)=>{o.d(H,{c:()=>T});var T=(g=>(g.Code="code",g.Builder="builder",g))(T||{})},78252:(ce,H,o)=>{o.d(H,{By:()=>fe,E2:()=>v,Fo:()=>ot,Ih:()=>at,Ip:()=>Ae,JX:()=>nt,Kz:()=>gt,Ld:()=>Vt,Li:()=>st,Lu:()=>ie,M0:()=>ht,Md:()=>re,Mr:()=>me,OC:()=>rt,On:()=>Ne,Or:()=>Xe,PQ:()=>Re,Ph:()=>F,Qf:()=>He,Tr:()=>ut,UN:()=>pt,Up:()=>vt,W8:()=>Le,WZ:()=>Ze,We:()=>Je,XT:()=>yt,Xt:()=>Ce,Z7:()=>we,ai:()=>lt,bL:()=>ze,cq:()=>ct,dh:()=>Lt,e6:()=>ft,gD:()=>je,gP:()=>ke,gQ:()=>be,h3:()=>Be,iP:()=>Ye,pQ:()=>Pt,pj:()=>it,tW:()=>Ie,uf:()=>bt,uw:()=>xe,wi:()=>Ge,wm:()=>et,wn:()=>Oe,xO:()=>qe,xb:()=>ge,yN:()=>Ke,yx:()=>tt,zV:()=>Te});var T=o(27765);const g=1,i=2,K=3,c=4,V=5,k=6,X=7,ee=8,oe=9,J=10,te=11,z=12,u=13,U=14,A=15,D=16,I=17,Y=18,ne=19,j=20,x=21,h=22,N=23,$=24,q=25,m=26,f=27,Q=28,L=29,P=30,d={json:g,logfmt:i,unpack:K,pattern:c,regexp:V,ip:X,label_format:ee,line_format:oe,label_replace:J,offset:te,bool:z,on:u,ignoring:U,group_left:A,group_right:D,unwrap:k},y=(ue,pe)=>d[ue.toLowerCase()]||-1,_={by:I,without:Y,and:ne,or:j,unless:x,sum:h,avg:N,count:$,max:q,min:m,stddev:f,stdvar:Q,bottomk:L,topk:P},C=(ue,pe)=>_[ue.toLowerCase()]||-1,M={__proto__:null,count_over_time:257,rate:259,rate_counter:261,bytes_over_time:263,bytes_rate:265,avg_over_time:267,sum_over_time:269,min_over_time:271,max_over_time:273,stddev_over_time:275,stdvar_over_time:277,quantile_over_time:279,first_over_time:281,last_over_time:283,absent_over_time:285,bytes:291,duration:293,duration_seconds:295},v=T.WQ.deserialize({version:14,states:"AYOYQPOOO#YQPO'#DPO$iQPO'#DOOYQPO'#DOOOQO'#D{'#D{O$vQPO'#DzOOQO'#Eh'#EhO${QPO'#EgQ%WQPOOOOQO'#Ev'#EvO&XQPO'#EvO&^QPO'#EwOOQO'#Dy'#DyOOQO'#C}'#C}OOQO'#D|'#D|OOQO'#D}'#D}OOQO'#EO'#EOOOQO'#EP'#EPOOQO'#EQ'#EQOOQO'#ER'#EROOQO'#ES'#ESOOQO'#ET'#ETOOQO'#EU'#EUOOQO'#EV'#EVOOQO'#EW'#EWOOQO'#EX'#EXOOQO'#EY'#EYOOQO'#EZ'#EZOOQO'#E['#E[O&cQPO'#DROOQO'#DQ'#DQO&qQPO,59kOOQO'#D^'#D^O&yQPO'#D]OOQO'#D['#D[O'RQPO'#DZO(lQPO'#DZOOQO'#DY'#DYO*eQPO,59jO+sQPO,59jO+zQPO,5:eO,RQPO,5:fO,^QPO'#EeO.`QPO,5;RO.gQPO,5;RO.lQPO,5;TO.lQPO,5;TO.lQPO,5;TO.lQPO,5;TO.lQPO,5;TO.lQPO,5;TOOQO,5;b,5;bOYQPO,5;cO0uQPO,59mO0zQPO1G/VOOQO1G/V1G/VOOQO'#Da'#DaOOQO,59w,59wO1SQPO,59wOOQO,59v,59vO1XQPO'#DRO1vQPO'#DcOOQO'#Dc'#DcO3dQPO'#DcOOQO'#Di'#DiOOQO'#Dg'#DgO)RQPO'#DgO3iQPO,59uO5SQPO'#DuO5XQPO'#DvOOQO,59u,59uOOQO,59t,59tOOQO1G/U1G/UOOQO1G0P1G0PO5^QPO'#E]O,UQPO'#E]O5rQPO1G0QO5wQPO1G0QO5|QPO,5;PO6UQPO1G0mO7aQPO1G0mO7hQPO1G0mO7oQPO'#EkO9tQPO'#EjO:OQPO'#EjOYQPO1G0oOYQPO1G0oOYQPO1G0oOYQPO1G0oOYQPO1G0oOYQPO1G0oO:YQPO1G0}OOQO1G/X1G/XOOQO1G/W1G/WOOQO7+$q7+$qO:aQPO1G/cO:fQPO,59mO:lQPO,5:UO:wQPO'#DfOOQO'#De'#DeO:|QPO,5:OOOQO,59},59}O<gQPO,5:RO)RQPO,5:RO)RQPO,5:ROOQO,5:a,5:aO<uQPO'#DxOOQO'#Dw'#DwO<zQPO,5:bO>eQPO'#DZO5^QPO,5:wO>lQPO'#E^O>qQPO,5:wO?[QPO,5:wO?fQPO,5:wO?mQPO,5:wO?rQPO7+%lO,UQPO7+%lOOQO'#Ef'#EfOASQPO1G0kOOQO1G0k1G0kOA[QPO7+&XOYQPO7+&XOBlQPO7+&XOBsQPO7+&XOBzQQO'#ElOOQO,5;V,5;VOEPQPO,5;UOEWQPO,5;UOFiQPO7+&ZOFpQPO7+&ZOOQO7+&Z7+&ZOF}QPO7+&ZOGUQPO7+&ZOHZQPO7+&ZOHkQPO7+&iOHpQPO7+$}OHuQPO1G/nOOQO1G/p1G/pOOQO1G/w1G/wOOQO1G/y1G/yOHzQPO,5:QOIPQPO,5:POOQO1G/m1G/mOIUQPO1G/mOJoQPO,5:dO5XQPO,5:cOJwQPO,5:zO>qQPO1G0cOKVQPO1G0cOK_QPO,5:xO)RQPO,5:zOKdQPO1G0cOKkQPO'#E_OKpQPO1G0cOKdQPO1G0cOKxQPO1G0cOLPQPO1G0cO5mQPO1G0cOOQO1G0c1G0cOOQO<<IW<<IWOL[QPO<<IWOLaQPO,5;QOOQO7+&V7+&VOOQO<<Is<<IsOLfQPO<<IsOYQPO<<IsOOQO'#En'#EnOLmQPO,5;WOOQO'#Em'#EmOOQO,5;W,5;WOOQO1G0p1G0pOLuQPO1G0pONuQPO<<JTOOQO<<Hi<<HiONzQPO7+%YOOQO1G/l1G/lOOQO1G/k1G/kOOQO1G0O1G0OOOQO1G/}1G/}OOQO'#Ea'#EaOOQO1G0f1G0fO! PQPO1G0fOOQO'#Eb'#EbOOQO'#Ec'#EcOOQO'#Ed'#EdOOQO7+%}7+%}OOQO1G0d1G0dO! UQPO1G0fO! jQPO7+%}OOQO,5:y,5:yO! rQPO7+%}O5mQPO7+%}O! yQPO7+%}O!!UQPOAN>rOOQO1G0l1G0lO!#fQPOAN?_O!$vQPOAN?_O!$}QQO1G0rOOQO1G0r1G0rOOQO7+&[7+&[O!%VQPOAN?oO!%[QPO<<HtO!%aQPO7+&QO!%fQPO<<IiO!%nQPO<<IiO!%vQPO<<IiO!&OQPO'#E`OOQO<<Ii<<IiOOQOG24^G24^OOQOG24yG24yOOQO1G0s1G0sOOQO7+&^7+&^O!&TQPOG25ZOOQOAN>`AN>`O!&YQPO<<IlOOQOAN?TAN?TO!&_QPOAN?TO!&gQPOLD*uOOQOAN?WAN?WOOQO,5:b,5:bO!&lQPO!$'NaO!&qQPO!)9C{O!&vQPO!.K9gOOQO!4//R!4//RO5XQPO'#DvO!&{QPO'#DZO!'jQPO,59jO!'tQPO'#DOOYQPO1G0oOYQPO1G0oOYQPO1G0oOYQPO1G0oOYQPO1G0oOYQPO1G0oO.lQPO,5;TO.lQPO,5;TO.lQPO,5;TO.lQPO,5;TO.lQPO,5;TO.lQPO,5;TO!)PQPO7+&ZO!)WQPO7+&ZO!)eQPO7+&ZO!*mQPO7+&ZO!*tQPO7+&ZO!)lQPO'#Ei",stateData:"!+R~O#nOSoOS~OYZOfUOgUOhUOiUOjUOkUOlUOmUOnUO!hXO#dYO#eYO#oPO#rRO#t^O#u_O#v`O#waO#xbO#ycO#zdO#{eO#|fO#}gO$OhO$PiO$QjO$RkO$SlO~OvmO~OypO{pO!RpO!SpOcrXdrXerX!_rX!arX!brX!crX!drX#drX#erX#frX#grX#hrX#irX~O!UtO#lrX#srX~P#_O#ryO~OazObzO#r{O~Oc!OOd}Oe!OOy!SO!_!SO!a!SO!b!SO!c!SO!d!SO#d!PO#e!PO#f!QO#g!QO#h!QO#i!RO~O!h!TO~O#r!UO~Ow!VOy!VOz!VO{!VO~O#p!WO#q!XO~OV!YOx!ZO~OypO{pO!RpO!SpOc}Xd}Xe}X!U}X!_}X!a}X!b}X!c}X!d}X#d}X#e}X#f}X#g}X#h}X#i}X#l}X#s}X$T}X#p}X~OP!_OQ!`OR!`OS!aOT!aOW!gOX!fOv!^O#r!dO~OypO{pO!RpO!SpOcradraera!_ra!ara!bra!cra!dra#dra#era#fra#gra#hra#ira~O!UtO#lra#sra~P)ZOcqXdqXeqXyqX!_qX!aqX!bqX!cqX!dqX#dqX#eqX#fqX#gqX#hqX#iqX~O#s!jO~P*rO#s!kO~P*rO!h!oO#oPO#r!mO~O#r!pO~OYZOfUOgUOhUOiUOjUOkUOlUOmUOnUO#dYO#eYO#oPO#rRO#t^O#u_O#v`O#waO#xbO#ycO#zdO#{eO#|fO#}gO$OhO$PiO$QjO$RkO$SlO~O!h!rO~P,cO#r!sO~O[!vO]!tO^!tOY#^Pf#^Pg#^Ph#^Pi#^Pj#^Pk#^Pl#^Pm#^Pn#^P!h#^P#d#^P#e#^P#o#^P#r#^P#t#^P#u#^P#v#^P#w#^P#x#^P#y#^P#z#^P#{#^P#|#^P#}#^P$O#^P$P#^P$Q#^P$R#^P$S#^P~Ox#OO~OvmO#q#QO~O#r#RO~Ow#SOy#SOz!VO{!VO!_#TO!a#TO!b#TO!c#TO!d#TO~Ov#UOc!VXd!VXe!VXy!VX{!VX!R!VX!S!VX!U!VX!_!VX!a!VX!b!VX!c!VX!d!VX#d!VX#e!VX#f!VX#g!VX#h!VX#i!VX#l!VX#s!VX$T!VX#p!VX~Ox#XO~Oc#ZOd#[O#p#ZOe}ay}a{}a!R}a!S}a!U}a!_}a!a}a!b}a!c}a!d}a#d}a#e}a#f}a#g}a#h}a#i}a#l}a#s}a$T}a~Ox#]O~Ov#^O~OypO{pO!RpO!SpO!U#aO$T#cO~O#s#hO~O#p#iO~Ov#jO#s#lO~O#s#mO~P*rOc#jXd#jXe#jXy#jX!_#jX!a#jX!b#jX!c#jX!d#jX#d#jX#e#jX#f#jX#g#jX#h#jX#i#jX#s#jX~O#p#nO~P6]O!h#pO~P,cO#r#qO~OY#^Xf#^Xg#^Xh#^Xi#^Xj#^Xk#^Xl#^Xm#^Xn#^X!h#^X#d#^X#e#^X#o#^X#r#^X#t#^X#u#^X#v#^X#w#^X#x#^X#y#^X#z#^X#{#^X#|#^X#}#^X$O#^X$P#^X$Q#^X$R#^X$S#^X~O_#sO`#sO~P7tO]!tO^!tO~P7tO#p#{O~P*rOx#|O~OV#}Ox#OO!`$OO!f$PO!h$QO~Ow$RO~O#p$SOc!Wad!Wae!Way!Wa{!Wa!R!Wa!S!Wa!U!Wa!_!Wa!a!Wa!b!Wa!c!Wa!d!Wa#d!Wa#e!Wa#f!Wa#g!Wa#h!Wa#i!Wa#l!Wa#s!Wa$T!Wa~Oc#ZOd#[O#p#ZO#s$TO~Ow$VO~O#p$WOc!jad!jae!jay!ja{!ja!R!ja!S!ja!U!ja!_!ja!a!ja!b!ja!c!ja!d!ja#d!ja#e!ja#f!ja#g!ja#h!ja#i!ja#l!ja#s!ja$T!ja~OU$XO~P(lO!`$[O~O!U$]O$T#cO~OypO{pO!RpO!SpO!U#aO~OZ$_O#s#Pa~P>yO#s$dO~P5^O#s$eO~OazObzOc!nqd!nqe!nqy!nq!_!nq!a!nq!b!nq!c!nq!d!nq#d!nq#e!nq#f!nq#g!nq#h!nq#i!nq#l!nq#s!nq#p!nq~O#p$hO#s$iO~OazObzOc#Zqd#Zqe#Zqy#Zq!_#Zq!a#Zq!b#Zq!c#Zq!d#Zq#d#Zq#e#Zq#f#Zq#g#Zq#h#Zq#i#Zq#l#Zq#s#Zq#p#Zq~O#s$jO~P*rO#p$lO~P6]O#c$mO#s$pO~OY#^af#^ag#^ah#^ai#^aj#^ak#^al#^am#^an#^a!h#^a#d#^a#e#^a#o#^a#t#^a#u#^a#v#^a#w#^a#x#^a#y#^a#z#^a#{#^a#|#^a#}#^a$O#^a$P#^a$Q#^a$R#^a$S#^a~O#r#qO~PCSO_$rO`$rO#r#^a~PCSOc!OOe!OOy!SO!_!SO!a!SO!b!SO!c!SO!d!SO#d!PO#e!PO#f#]q#g#]q#h#]q#i#]q#l#]q#s#]q~Od#]q~PEeOc#]qd#]qe#]q~PEkOd}O~PEeO#l#]q#s#]q~P%WOc#]qd#]qe#]qy#]q!_#]q!a#]q!b#]q!c#]q!d#]q#f#]q#g#]q#h#]q#i#]q~O#d!PO#e!PO#l#]q#s#]q~PG`Ox$sO~O#s$tO~O#r$uO~Ox$vO~Ov#UO~Oc#ZO#p#ZOd!Zie!Ziy!Zi{!Zi!R!Zi!S!Zi!U!Zi!_!Zi!a!Zi!b!Zi!c!Zi!d!Zi#d!Zi#e!Zi#f!Zi#g!Zi#h!Zi#i!Zi#l!Zi#s!Zi$T!Zi~Ov$xOx$xO~Ov${O$V$}O$W%OO$X%PO~OZ$_O#s#Pi~O$U%RO~O#s#Pi~P>yO!`%UO~O!U$]O#s#Pi~O#s%WO~P5^O!U$]O#s%WO$T#cO~O#s%YO~Ov%ZO~O#s%[O~P*rO#p%^O#s%_O~O#r#qOY#^if#^ig#^ih#^ii#^ij#^ik#^il#^im#^in#^i!h#^i#d#^i#e#^i#o#^i#t#^i#u#^i#v#^i#w#^i#x#^i#y#^i#z#^i#{#^i#|#^i#}#^i$O#^i$P#^i$Q#^i$R#^i$S#^i~O#p%aO~Ox%bO~O#r%cO~Oc#ZOd#[O#p#ZO!U#Si$T#Si#s#Si~O!U$]O#s#Pq~O#s#Pq~P>yOZ%fO!U%gO#s#Pq~OazObzOc!n!Rd!n!Re!n!Ry!n!R!_!n!R!a!n!R!b!n!R!c!n!R!d!n!R#d!n!R#e!n!R#f!n!R#g!n!R#h!n!R#i!n!R#l!n!R#s!n!R#p!n!R~OazObzOc#Z!Rd#Z!Re#Z!Ry#Z!R!_#Z!R!a#Z!R!b#Z!R!c#Z!R!d#Z!R#d#Z!R#e#Z!R#f#Z!R#g#Z!R#h#Z!R#i#Z!R#l#Z!R#s#Z!R#p#Z!R~O#s%jO~P*rO#c$mO#s%lO~Ox%mO~O#s%nO~Ov%oO~O!U$]O#s#Py~OZ$_O#s#Py~O!U%gO!`%UO~OU$XO~O#p%rO~O#s%sO~O!U$]O#s#P!R~Ox%uO~O#p%vO~Ox%wO~O#s%xO~OP!_OQ!`OR!`OS!aOT!aOW%yOX!fOv!^O#r!dO~O!U%zO#pra~P)ZO!U%zO#prX~P#_Oc&UOe&UOy&YO!_&YO!a&YO!b&YO!c&YO!d&YO#d&VO#e&VO#f#]q#g#]q#h#]q#i#]q#p#]q~Od#]q~P!(OOc#]qd#]qe#]q~P!(UOd&TO~P!(OOc&UOd&TOe&UOy&YO!_&YO!a&YO!b&YO!c&YO!d&YO#d&VO#e&VO#f&WO#g&WO#h&WO#i&XO~O#p#]q~P!)lO#d&VO#e&VO#p#]q~PG`O",goto:"/^#lPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP#m$l%T%s%vPPPPPP&V&i&y'X'jPP'yP'|'|(R(U([(m(m(vPPPPPP(vP(mP'|'|)P)V)^*P*f*{*{*{*{*{*{*{*{*{*{*{*{*{*{*{+b+k,O,[,t,w,w,w,z-Z*P-^*P-s.i.z/T/WPPPPPPP*P*P[WOR{!s#n$lQ#u!wQ#v!xS#w!y&PQ#x!zQ#y!{Q#z!|Q&Z%}Q&[&OQ&]&QQ&^&RQ&_&SR&`!Ut]O{!U!s!w!x!y!z!{!|#n$l%}&O&P&Q&R&SRwRjQOR{!U!s!w!x!y!z!{!|#n$lS!ly#iQ#f!m]%|%}&O&P&Q&R&SRoPQnP^!ct!d#Z#[#a$]%zR#P!WQvQQ#b!lQ$^#eQ$b#fQ%V$aR%{%|[uQ!l#e#f$a%|]!iv#b$^$b%V%{isQv!l#b#e#f$^$a$b%V%{%|hrQv!l#b#e#f$^$a$b%V%{%|R!]skqQsv!l#b#e#f$^$a$b%V%{%|R![qV!ht#a%zR#W!_Q#V!_R$w$SU!et#a%zQ#Y!dQ$T#ZQ$U#[R%S$]_!ct!d#Z#[#a$]%z_!bt!d#Z#[#a$]%zQ#`!gR%t%yS#_!g%yR$y$Wj]O!w!x!y!z!{!|%}&O&P&Q&R&SQxRQ!q{Q!}!UQ#o!sQ$k#nR%]$lw[OR{!U!s!w!x!y!z!{!|#n$l%}&O&P&Q&R&SwTOR{!U!s!w!x!y!z!{!|#n$l%}&O&P&Q&R&SwSOR{!U!s!w!x!y!z!{!|#n$l%}&O&P&Q&R&SQ!nyQ#g!mR$g#iS#e!l#fW$Z#b#d$b$cQ%Q$YQ%X$dR%e%WQ$a#eQ%Q$ZQ%h%XR%p%eQ#d!lS$Y#b$bQ$`#eQ$c#fS%T$^$aS%d%V%XR%q%fR$|$XR$z$XQ|VQ$f#hQ$j#mQ%i%YR%j%[R#k!pwVOR{!U!s!w!x!y!z!{!|#n$l%}&O&P&Q&R&SQ!w}Q!x!OQ!y!PQ!z!QQ!{!RQ!|!SQ%}&TQ&O&UQ&P&VQ&Q&WQ&R&XR&S&Yh!u}!O!P!Q!R!S&T&U&V&W&X&YR#t!vQ#r!tQ$q#sR%`$rR$n#qQ$o#qR%k%^",nodeNames:"\u26A0 Json Logfmt Unpack Pattern Regexp Unwrap Ip LabelFormat LineFormat LabelReplace Offset Bool On Ignoring GroupLeft GroupRight By Without And Or Unless Sum Avg Count Max Min Stddev Stdvar Bottomk Topk LineComment LogQL Expr LogExpr Selector Matchers Matcher Identifier Eq String Neq Re Nre PipelineExpr PipelineStage LineFilters LineFilter Filter PipeExact PipeMatch FilterOp Pipe LabelParser JsonExpressionParser JsonExpressionList JsonExpression LabelFilter IpLabelFilter UnitFilter DurationFilter Gtr Duration Gte Lss Lte Eql BytesFilter Bytes NumberFilter Number LineFormatExpr LabelFormatExpr LabelsFormat LabelFormatMatcher MetricExpr RangeAggregationExpr RangeOp CountOverTime Rate RateCounter BytesOverTime BytesRate AvgOverTime SumOverTime MinOverTime MaxOverTime StddevOverTime StdvarOverTime QuantileOverTime FirstOverTime LastOverTime AbsentOverTime LogRangeExpr Range OffsetExpr UnwrapExpr ConvOp BytesConv DurationConv DurationSecondsConv Grouping Labels VectorAggregationExpr VectorOp BinOpExpr BinOpModifier OnOrIgnoringModifier GroupingLabels GroupingLabelList GroupingLabel LabelName Add Sub Mul Div Mod Pow LiteralExpr LabelReplaceExpr",maxTerm:147,skippedNodes:[0,31],repeatNodeCount:0,tokenData:"3X~RvX^#ipq#iqr$^rs$qst%cuv%nxy%syz%xz{%}{|&S|}&X}!O&^!O!P&c!P!Q'c!Q!R'h!R![)O![!]0O!^!_0d!_!`0q!`!a1W!c!}1e!}#O1{#P#Q2Q#Q#R2V#R#S1e#S#T2[#T#o1e#o#p2h#p#q2m#q#r3S#y#z#i$f$g#i#BY#BZ#i$IS$I_#i$I|$JO#i$JT$JU#i$KV$KW#i&FU&FV#i~#nY#n~X^#ipq#i#y#z#i$f$g#i#BY#BZ#i$IS$I_#i$I|$JO#i$JT$JU#i$KV$KW#i&FU&FV#i~$aQ!_!`$g#r#s$l~$lOy~~$qO{~~$tUOY$qZr$qrs%Ws#O$q#O#P%]#P~$q~%]Ox~~%`PO~$q~%hQo~OY%cZ~%c~%sO#h~~%xO#r~~%}O#s~~&SO#f~~&XO#d~~&^O#p~~&cO#e~~&fP!Q![&i~&nR!h~!Q![&i!g!h&w#X#Y&w~&zR{|'T}!O'T!Q!['Z~'WP!Q!['Z~'`P!h~!Q!['Z~'hO#g~~'me!h~!O!P&i!Q![)O!g!h*c!i!j+Q!m!n+Q!o!p+Q!r!s+Q!v!w+Q#U#V*u#W#X+Z#X#Y-]#Z#[-o#[#]+r#_#`-o#a#b-x#d#e-o#g#h,z#h#i-o#k#l.Z#l#m/d#m#n.u~)Td!h~!O!P&i!Q![)O!g!h*c!i!j+Q!m!n+Q!o!p+Q!r!s+Q!v!w+Q#U#V*u#W#X+Z#X#Y-]#Z#[-o#[#]+r#_#`-o#a#b-x#d#e-o#g#h,z#h#i-o#k#l.Z#m#n.u~*fT{|'T}!O'T!Q!['Z!d!e*u#]#^*z~*zO!f~~*}P#U#V*u~+TQ!d!e*u#]#^*z~+`P!`~!Q![+c~+fS!Q![+c#[#]+r#a#b,W#g#h,z~+wP!`~!Q![+z~+}R!Q![+z#a#b,W#g#h,z~,]Q!`~!Q![,c#g#h,u~,fR!Q![,c#a#b,o#g#h,z~,rP#g#h,u~,zO!`~~-PP!`~!Q![-S~-VQ!Q![-S#a#b,o~-`T{|'T}!O'T!Q!['Z#U#V*u#]#^*z~-rQ#U#V*u#]#^*z~-}S!`~!Q![,c#U#V*u#]#^*z#g#h,u~.`P!`~!Q![.c~.fT!Q![.c#W#X+Z#[#]+r#a#b,W#g#h,z~.zP!`~!Q![.}~/QU!Q![.}#W#X+Z#[#]+r#a#b,W#g#h,z#k#l.Z~/gR!Q![/p!c!i/p#T#Z/p~/uR!h~!Q![/p!c!i/p#T#Z/pP0TTvP!Q![0O![!]0O!c!}0O#R#S0O#T#o0O~0iP!b~!_!`0l~0qO!c~~0vQw~!_!`0|#r#s1R~1RO!d~~1WOz~~1]P!_~!_!`1`~1eO!a~R1lTvP#cQ!Q![1e![!]0O!c!}1e#R#S1e#T#o1e~2QO$T~~2VO$U~~2[O#i~~2_RO#S2[#S#T%W#T~2[~2mO#o~~2rQ!U~!_!`2x#r#s2}~2}O!R~~3SO!S~~3XO#q~",tokenizers:[0,1],topRules:{LogQL:[0,32]},specialized:[{term:38,get:(ue,pe)=>y(ue)<<1,external:y},{term:38,get:(ue,pe)=>C(ue)<<1|1,external:C,extend:!0},{term:38,get:ue=>M[ue]||-1}],tokenPrec:0}),F=1,R=2,le=3,Pe=4,Tt=5,we=6,Ae=7,_t=8,Qe=9,St=10,Ft=11,Ie=12,Ne=13,We=14,$t=15,Ve=16,fe=17,Ke=18,Le=19,Xe=20,Ee=21,Ct=22,Bt=23,Dt=24,Mt=25,Ut=26,wt=27,At=28,It=29,Nt=30,je=31,Ze=32,Ge=33,ze=34,He=35,ke=36,qe=37,ge=38,Wt=39,Vt=40,Er=41,Kt=42,Xt=43,Ye=44,Je=45,et=46,tt=47,Oe=48,rt=49,at=50,nt=51,jt=52,st=53,ie=54,Zt=55,xe=56,it=57,ot=58,lt=59,Gt=60,zt=61,Ht=62,kt=63,G=64,he=65,ve=66,qt=67,Yt=68,Jt=69,me=70,Re=71,Te=72,er=73,re=74,ct=75,ut=76,be=77,dt=78,tr=79,rr=80,ar=81,_e=82,nr=83,Se=84,mt=85,sr=86,ir=87,Fe=88,or=89,$e=90,Ot=91,lr=92,pt=93,ft=94,cr=95,Ce=96,Be=97,ur=98,dr=99,mr=100,gt=101,Or=102,ht=103,vt=104,bt=105,pr=106,fr=107,yt=108,Pt=109,gr=110,hr=111,De=112,Qt=113,vr=114,br=115,yr=116,Pr=117,Lt=118,xr=119}}]);

//# sourceMappingURL=3348.43ce93b8c8a085e9813f.js.map