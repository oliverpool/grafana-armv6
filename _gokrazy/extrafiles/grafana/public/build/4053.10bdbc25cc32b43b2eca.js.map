{"version":3,"file":"4053.10bdbc25cc32b43b2eca.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/NodeGraphSettings.tsx","webpack://grafana/./public/app/core/components/TraceToMetrics/TraceToMetricsSettings.tsx","webpack://grafana/./public/app/core/utils/tracing.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/CheatSheet.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/components/ConfigEditor.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/util.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/SearchForm.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/components/QueryEditor.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/graphTransform.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/datasource.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/module.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/responseTransform.ts","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/body_parser.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/body_parser_stream.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/logfmt_parser.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/logger.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/request_logger.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/streaming.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/stringify.js","webpack://grafana/../../opt/drone/yarncache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/logfmt.js","webpack://grafana/../../opt/drone/yarncache/split-npm-0.2.10-a950dc8c82-9eb1195608.zip/node_modules/split/index.js","webpack://grafana/../../opt/drone/yarncache/through-npm-2.3.8-df5f72a16e-a38c3e0598.zip/node_modules/through/index.js"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport {\n  DataSourceJsonData,\n  DataSourcePluginOptionsEditorProps,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { InlineField, InlineFieldRow, InlineSwitch } from '@grafana/ui';\n\nexport interface NodeGraphOptions {\n  enabled?: boolean;\n}\n\nexport interface NodeGraphData extends DataSourceJsonData {\n  nodeGraph?: NodeGraphOptions;\n}\n\ninterface Props extends DataSourcePluginOptionsEditorProps<NodeGraphData> {}\n\nexport function NodeGraphSettings({ options, onOptionsChange }: Props) {\n  return (\n    <div className={styles.container}>\n      <h3 className=\"page-heading\">Node Graph</h3>\n      <InlineFieldRow className={styles.row}>\n        <InlineField\n          tooltip=\"Enables the Node Graph visualization in the trace viewer.\"\n          label=\"Enable Node Graph\"\n          labelWidth={26}\n        >\n          <InlineSwitch\n            id=\"enableNodeGraph\"\n            value={options.jsonData.nodeGraph?.enabled}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'nodeGraph', {\n                ...options.jsonData.nodeGraph,\n                enabled: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n}\n\nconst styles = {\n  container: css`\n    label: container;\n    width: 100%;\n  `,\n  row: css`\n    label: row;\n    align-items: baseline;\n  `,\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport {\n  DataSourceJsonData,\n  DataSourcePluginOptionsEditorProps,\n  GrafanaTheme2,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { Button, InlineField, InlineFieldRow, Input, useStyles2 } from '@grafana/ui';\n\nimport { TagMappingInput } from '../TraceToLogs/TagMappingInput';\n\nexport interface TraceToMetricsOptions {\n  datasourceUid?: string;\n  tags?: Array<{ key: string; value: string }>;\n  queries: TraceToMetricQuery[];\n  spanStartTimeShift?: string;\n  spanEndTimeShift?: string;\n}\n\nexport interface TraceToMetricQuery {\n  name?: string;\n  query?: string;\n}\n\nexport interface TraceToMetricsData extends DataSourceJsonData {\n  tracesToMetrics?: TraceToMetricsOptions;\n}\n\ninterface Props extends DataSourcePluginOptionsEditorProps<TraceToMetricsData> {}\n\nexport function TraceToMetricsSettings({ options, onOptionsChange }: Props) {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={css({ width: '100%' })}>\n      <h3 className=\"page-heading\">Trace to metrics</h3>\n\n      <div className={styles.infoText}>\n        Trace to metrics lets you navigate from a trace span to the selected data source.\n      </div>\n\n      <InlineFieldRow className={styles.row}>\n        <InlineField tooltip=\"The data source the trace is going to navigate to\" label=\"Data source\" labelWidth={26}>\n          <DataSourcePicker\n            inputId=\"trace-to-metrics-data-source-picker\"\n            pluginId=\"prometheus\"\n            current={options.jsonData.tracesToMetrics?.datasourceUid}\n            noDefault={true}\n            width={40}\n            onChange={(ds) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToMetrics', {\n                ...options.jsonData.tracesToMetrics,\n                datasourceUid: ds.uid,\n              })\n            }\n          />\n        </InlineField>\n        {options.jsonData.tracesToMetrics?.datasourceUid ? (\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            size=\"sm\"\n            fill=\"text\"\n            onClick={() => {\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToMetrics', {\n                ...options.jsonData.tracesToMetrics,\n                datasourceUid: undefined,\n              });\n            }}\n          >\n            Clear\n          </Button>\n        ) : null}\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField tooltip=\"Tags that will be used in the metrics query.\" label=\"Tags\" labelWidth={26}>\n          <TagMappingInput\n            values={options.jsonData.tracesToMetrics?.tags ?? []}\n            onChange={(v) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToMetrics', {\n                ...options.jsonData.tracesToMetrics,\n                tags: v,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Span start time shift\"\n          labelWidth={26}\n          grow\n          tooltip=\"Shifts the start time of the span. Default 0 (Time units can be used here, for example: 5s, 1m, 3h)\"\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"-1h\"\n            width={40}\n            onChange={(v) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToMetrics', {\n                ...options.jsonData.tracesToMetrics,\n                spanStartTimeShift: v.currentTarget.value,\n              })\n            }\n            value={options.jsonData.tracesToMetrics?.spanStartTimeShift || ''}\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Span end time shift\"\n          labelWidth={26}\n          grow\n          tooltip=\"Shifts the end time of the span. Default 0 Time units can be used here, for example: 5s, 1m, 3h\"\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"1h\"\n            width={40}\n            onChange={(v) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToMetrics', {\n                ...options.jsonData.tracesToMetrics,\n                spanEndTimeShift: v.currentTarget.value,\n              })\n            }\n            value={options.jsonData.tracesToMetrics?.spanEndTimeShift || ''}\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      {options.jsonData.tracesToMetrics?.queries?.map((query, i) => (\n        <div key={i} className={styles.queryRow}>\n          <InlineField label=\"Link Label\" labelWidth={10}>\n            <Input\n              label=\"Link Label\"\n              type=\"text\"\n              allowFullScreen\n              value={query.name}\n              onChange={(e) => {\n                let newQueries = options.jsonData.tracesToMetrics?.queries.slice() ?? [];\n                newQueries[i].name = e.currentTarget.value;\n                updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToMetrics', {\n                  ...options.jsonData.tracesToMetrics,\n                  queries: newQueries,\n                });\n              }}\n            />\n          </InlineField>\n          <InlineField\n            label=\"Query\"\n            labelWidth={10}\n            tooltip=\"The Prometheus query that will run when navigating from a trace to metrics. Interpolate tags using the `$__tags` keyword.\"\n            grow\n          >\n            <Input\n              label=\"Query\"\n              type=\"text\"\n              allowFullScreen\n              value={query.query}\n              onChange={(e) => {\n                let newQueries = options.jsonData.tracesToMetrics?.queries.slice() ?? [];\n                newQueries[i].query = e.currentTarget.value;\n                updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToMetrics', {\n                  ...options.jsonData.tracesToMetrics,\n                  queries: newQueries,\n                });\n              }}\n            />\n          </InlineField>\n\n          <Button\n            variant=\"destructive\"\n            title=\"Remove query\"\n            icon=\"times\"\n            type=\"button\"\n            onClick={() => {\n              let newQueries = options.jsonData.tracesToMetrics?.queries.slice();\n              newQueries?.splice(i, 1);\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToMetrics', {\n                ...options.jsonData.tracesToMetrics,\n                queries: newQueries,\n              });\n            }}\n          />\n        </div>\n      ))}\n\n      <Button\n        variant=\"secondary\"\n        title=\"Add query\"\n        icon=\"plus\"\n        type=\"button\"\n        onClick={() => {\n          updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToMetrics', {\n            ...options.jsonData.tracesToMetrics,\n            queries: [...(options.jsonData.tracesToMetrics?.queries ?? []), { query: '' }],\n          });\n        }}\n      >\n        Add query\n      </Button>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  infoText: css`\n    padding-bottom: ${theme.spacing(2)};\n    color: ${theme.colors.text.secondary};\n  `,\n  row: css`\n    label: row;\n    align-items: baseline;\n  `,\n  queryRow: css`\n    display: flex;\n  `,\n});\n","/**\n * Get non overlapping duration of the ranges as they can overlap or have gaps.\n */\nimport { FieldType, MutableDataFrame, NodeGraphDataFrameFieldNames as Fields } from '@grafana/data';\n\nexport function getNonOverlappingDuration(ranges: Array<[number, number]>): number {\n  ranges.sort((a, b) => a[0] - b[0]);\n  const mergedRanges = ranges.reduce((acc, range) => {\n    if (!acc.length) {\n      return [range];\n    }\n    const tail = acc.slice(-1)[0];\n    const [prevStart, prevEnd] = tail;\n    const [start, end] = range;\n    if (end < prevEnd) {\n      // In this case the range is completely inside the prev range so we can just ignore it.\n      return acc;\n    }\n\n    if (start > prevEnd) {\n      // There is no overlap so we can just add it to stack\n      return [...acc, range];\n    }\n\n    // We know there is overlap and current range ends later than previous so we can just extend the range\n    return [...acc.slice(0, -1), [prevStart, end]] as Array<[number, number]>;\n  }, [] as Array<[number, number]>);\n\n  return mergedRanges.reduce((acc, range) => {\n    return acc + (range[1] - range[0]);\n  }, 0);\n}\n\n/**\n * Returns a map of the spans with children array for easier processing. It will also contain empty spans in case\n * span is missing but other spans are its children. This is more generic because it needs to allow iterating over\n * both arrays and dataframe views.\n */\nexport function makeSpanMap<T>(getSpan: (index: number) => { span: T; id: string; parentIds: string[] } | undefined): {\n  [id: string]: { span: T; children: string[] };\n} {\n  const spanMap: { [id: string]: { span?: T; children: string[] } } = {};\n\n  let span;\n  for (let index = 0; (span = getSpan(index)), !!span; index++) {\n    if (!spanMap[span.id]) {\n      spanMap[span.id] = {\n        span: span.span,\n        children: [],\n      };\n    } else {\n      spanMap[span.id].span = span.span;\n    }\n\n    for (const parentId of span.parentIds) {\n      if (parentId) {\n        if (!spanMap[parentId]) {\n          spanMap[parentId] = {\n            span: undefined,\n            children: [span.id],\n          };\n        } else {\n          spanMap[parentId].children.push(span.id);\n        }\n      }\n    }\n  }\n  return spanMap as { [id: string]: { span: T; children: string[] } };\n}\n\nexport function getStats(duration: number, traceDuration: number, selfDuration: number) {\n  return {\n    main: `${toFixedNoTrailingZeros(duration)}ms (${toFixedNoTrailingZeros((duration / traceDuration) * 100)}%)`,\n    secondary: `${toFixedNoTrailingZeros(selfDuration)}ms (${toFixedNoTrailingZeros(\n      (selfDuration / duration) * 100\n    )}%)`,\n  };\n}\n\nfunction toFixedNoTrailingZeros(n: number) {\n  return parseFloat(n.toFixed(2));\n}\n\n/**\n * Create default frames used when returning data for node graph.\n */\nexport function makeFrames() {\n  const nodesFrame = new MutableDataFrame({\n    fields: [\n      { name: Fields.id, type: FieldType.string },\n      { name: Fields.title, type: FieldType.string },\n      { name: Fields.subTitle, type: FieldType.string },\n      { name: Fields.mainStat, type: FieldType.string, config: { displayName: 'Total time (% of trace)' } },\n      { name: Fields.secondaryStat, type: FieldType.string, config: { displayName: 'Self time (% of total)' } },\n      {\n        name: Fields.color,\n        type: FieldType.number,\n        config: { color: { mode: 'continuous-GrYlRd' }, displayName: 'Self time / Trace duration' },\n      },\n    ],\n    meta: {\n      preferredVisualisationType: 'nodeGraph',\n    },\n  });\n\n  const edgesFrame = new MutableDataFrame({\n    fields: [\n      { name: Fields.id, type: FieldType.string },\n      { name: Fields.target, type: FieldType.string },\n      { name: Fields.source, type: FieldType.string },\n    ],\n    meta: {\n      preferredVisualisationType: 'nodeGraph',\n    },\n  });\n\n  return [nodesFrame, edgesFrame];\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nexport default function CheatSheet() {\n  const styles = useStyles2(getStyles);\n  return (\n    <>\n      <h2 id=\"jaeger-cheat-sheet\">Jaeger Cheat Sheet</h2>\n      <p>\n        This cheat sheet provides a quick overview of the query types that are available. For more details about the\n        Jaeger data source, check out{' '}\n        <a\n          href=\"https://grafana.com/docs/grafana/latest/datasources/jaeger\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className={styles.anchorTag}\n        >\n          the documentation\n        </a>\n        .\n      </p>\n\n      <hr />\n      <ul className={styles.unorderedList}>\n        <li>\n          Search - filter traces by service name. Addtionally, you can filter by tags or min/max duration, as well as\n          limit the number of traces that are returned.\n        </li>\n        <li>TraceID - if you have a trace ID, simply enter the trace ID to see the trace.</li>\n        <li>\n          JSON File - you can upload a JSON file that contains a single trace to visualize it. If the file has multiple\n          traces then the first trace is used for visualization. An example of a valid JSON file can be found in{' '}\n          <a\n            href=\"https://grafana.com/docs/grafana/latest/datasources/jaeger/#upload-json-trace-file\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className={styles.anchorTag}\n          >\n            this section\n          </a>{' '}\n          of the documentation.\n        </li>\n      </ul>\n    </>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  anchorTag: css`\n    color: ${theme.colors.text.link};\n  `,\n  unorderedList: css`\n    list-style-type: none;\n  `,\n});\n","import React from 'react';\n\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { DataSourceHttpSettings, SecureSocksProxySettings } from '@grafana/ui';\nimport { SpanBarSettings } from '@jaegertracing/jaeger-ui-components';\nimport { NodeGraphSettings } from 'app/core/components/NodeGraphSettings';\nimport { TraceToLogsSettings } from 'app/core/components/TraceToLogs/TraceToLogsSettings';\nimport { TraceToMetricsSettings } from 'app/core/components/TraceToMetrics/TraceToMetricsSettings';\n\nexport type Props = DataSourcePluginOptionsEditorProps;\n\nexport const ConfigEditor = ({ options, onOptionsChange }: Props) => {\n  return (\n    <>\n      <DataSourceHttpSettings\n        defaultUrl=\"http://localhost:16686\"\n        dataSourceConfig={options}\n        showAccessOptions={false}\n        onChange={onOptionsChange}\n      />\n\n      {config.featureToggles.secureSocksDatasourceProxy && (\n        <SecureSocksProxySettings options={options} onOptionsChange={onOptionsChange} />\n      )}\n\n      <div className=\"gf-form-group\">\n        <TraceToLogsSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n\n      {config.featureToggles.traceToMetrics ? (\n        <div className=\"gf-form-group\">\n          <TraceToMetricsSettings options={options} onOptionsChange={onOptionsChange} />\n        </div>\n      ) : null}\n\n      <div className=\"gf-form-group\">\n        <NodeGraphSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n\n      <div className=\"gf-form-group\">\n        <SpanBarSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n    </>\n  );\n};\n","import logfmt from 'logfmt';\n\nexport function convertTagsLogfmt(tags: string | undefined) {\n  if (!tags) {\n    return '';\n  }\n  const data: any = logfmt.parse(tags);\n  Object.keys(data).forEach((key) => {\n    const value = data[key];\n    if (typeof value !== 'string') {\n      data[key] = String(value);\n    }\n  });\n  return JSON.stringify(data);\n}\n\nexport function transformToLogfmt(tags: string | undefined) {\n  if (!tags) {\n    return '';\n  }\n  try {\n    return logfmt.stringify(JSON.parse(tags));\n  } catch {\n    return tags;\n  }\n}\n","import { css } from '@emotion/css';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { SelectableValue, toOption } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { fuzzyMatch, InlineField, InlineFieldRow, Input, Select } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport { createErrorNotification } from 'app/core/copy/appNotification';\nimport { dispatch } from 'app/store/store';\n\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery } from '../types';\nimport { transformToLogfmt } from '../util';\n\nconst durationPlaceholder = 'e.g. 1.2s, 100ms, 500us';\n\ntype Props = {\n  datasource: JaegerDatasource;\n  query: JaegerQuery;\n  onChange: (value: JaegerQuery) => void;\n};\n\nexport const ALL_OPERATIONS_KEY = 'All';\nconst allOperationsOption: SelectableValue<string> = {\n  label: ALL_OPERATIONS_KEY,\n  value: undefined,\n};\n\nexport function SearchForm({ datasource, query, onChange }: Props) {\n  const [serviceOptions, setServiceOptions] = useState<Array<SelectableValue<string>>>();\n  const [operationOptions, setOperationOptions] = useState<Array<SelectableValue<string>>>();\n  const [isLoading, setIsLoading] = useState<{\n    services: boolean;\n    operations: boolean;\n  }>({\n    services: false,\n    operations: false,\n  });\n\n  const loadOptions = useCallback(\n    async (url: string, loaderOfType: string, query = ''): Promise<Array<SelectableValue<string>>> => {\n      setIsLoading((prevValue) => ({ ...prevValue, [loaderOfType]: true }));\n\n      try {\n        const values: string[] | null = await datasource.metadataRequest(url);\n        if (!values) {\n          return [{ label: `No ${loaderOfType} found`, value: `No ${loaderOfType} found` }];\n        }\n\n        const options: SelectableValue[] = values.sort().map((option) => ({\n          label: option,\n          value: option,\n        }));\n\n        const filteredOptions = options.filter((item) => (item.value ? fuzzyMatch(item.value, query).found : false));\n        return filteredOptions;\n      } catch (error) {\n        if (error instanceof Error) {\n          dispatch(notifyApp(createErrorNotification('Error', error)));\n        }\n        return [];\n      } finally {\n        setIsLoading((prevValue) => ({ ...prevValue, [loaderOfType]: false }));\n      }\n    },\n    [datasource]\n  );\n\n  useEffect(() => {\n    const getServices = async () => {\n      const services = await loadOptions('/api/services', 'services');\n      if (query.service && getTemplateSrv().containsTemplate(query.service)) {\n        services.push(toOption(query.service));\n      }\n      setServiceOptions(services);\n    };\n    getServices();\n  }, [datasource, loadOptions, query.service]);\n\n  useEffect(() => {\n    const getOperations = async () => {\n      const operations = await loadOptions(\n        `/api/services/${encodeURIComponent(getTemplateSrv().replace(query.service!))}/operations`,\n        'operations'\n      );\n      if (query.operation && getTemplateSrv().containsTemplate(query.operation)) {\n        operations.push(toOption(query.operation));\n      }\n      setOperationOptions([allOperationsOption, ...operations]);\n    };\n    if (query.service) {\n      getOperations();\n    }\n  }, [datasource, query.service, loadOptions, query.operation]);\n\n  return (\n    <div className={css({ maxWidth: '500px' })}>\n      <InlineFieldRow>\n        <InlineField label=\"Service Name\" labelWidth={14} grow>\n          <Select\n            inputId=\"service\"\n            options={serviceOptions}\n            onOpenMenu={() => loadOptions('/api/services', 'services')}\n            isLoading={isLoading.services}\n            value={serviceOptions?.find((v) => v?.value === query.service) || undefined}\n            placeholder=\"Select a service\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                service: v?.value!,\n                operation: query.service !== v?.value ? undefined : query.operation,\n              })\n            }\n            menuPlacement=\"bottom\"\n            isClearable\n            aria-label={'select-service-name'}\n            allowCustomValue={true}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Operation Name\" labelWidth={14} grow disabled={!query.service}>\n          <Select\n            inputId=\"operation\"\n            options={operationOptions}\n            onOpenMenu={() =>\n              loadOptions(\n                `/api/services/${encodeURIComponent(getTemplateSrv().replace(query.service!))}/operations`,\n                'operations'\n              )\n            }\n            isLoading={isLoading.operations}\n            value={operationOptions?.find((v) => v.value === query.operation) || null}\n            placeholder=\"Select an operation\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                operation: v?.value! || undefined,\n              })\n            }\n            menuPlacement=\"bottom\"\n            isClearable\n            aria-label={'select-operation-name'}\n            allowCustomValue={true}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Tags\" labelWidth={14} grow tooltip=\"Values should be in logfmt.\">\n          <Input\n            id=\"tags\"\n            value={transformToLogfmt(query.tags)}\n            placeholder=\"http.status_code=200 error=true\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                tags: v.currentTarget.value,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Min Duration\" labelWidth={14} grow>\n          <Input\n            id=\"minDuration\"\n            name=\"minDuration\"\n            value={query.minDuration || ''}\n            placeholder={durationPlaceholder}\n            onChange={(v) =>\n              onChange({\n                ...query,\n                minDuration: v.currentTarget.value,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Max Duration\" labelWidth={14} grow>\n          <Input\n            id=\"maxDuration\"\n            name=\"maxDuration\"\n            value={query.maxDuration || ''}\n            placeholder={durationPlaceholder}\n            onChange={(v) =>\n              onChange({\n                ...query,\n                maxDuration: v.currentTarget.value,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Limit\" labelWidth={14} grow tooltip=\"Maximum number of returned results\">\n          <Input\n            id=\"limit\"\n            name=\"limit\"\n            value={query.limit || ''}\n            type=\"number\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                limit: v.currentTarget.value ? parseInt(v.currentTarget.value, 10) : undefined,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n}\n\nexport default SearchForm;\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, QueryEditorProps } from '@grafana/data';\nimport { FileDropzone, InlineField, InlineFieldRow, QueryField, RadioButtonGroup, useStyles2 } from '@grafana/ui';\n\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery, JaegerQueryType } from '../types';\n\nimport { SearchForm } from './SearchForm';\n\ntype Props = QueryEditorProps<JaegerDatasource, JaegerQuery>;\n\nexport function QueryEditor({ datasource, query, onChange, onRunQuery }: Props) {\n  const styles = useStyles2(getStyles);\n\n  const onChangeQuery = (value: string) => {\n    const nextQuery: JaegerQuery = { ...query, query: value };\n    onChange(nextQuery);\n  };\n\n  const renderEditorBody = () => {\n    switch (query.queryType) {\n      case 'search':\n        return <SearchForm datasource={datasource} query={query} onChange={onChange} />;\n      case 'upload':\n        return (\n          <div className={styles.fileDropzoneContainer}>\n            <FileDropzone\n              options={{ multiple: false }}\n              onLoad={(result) => {\n                datasource.uploadedJson = result;\n                onRunQuery();\n              }}\n            />\n          </div>\n        );\n      default:\n        return (\n          <InlineFieldRow>\n            <InlineField label=\"Trace ID\" labelWidth={14} grow>\n              <QueryField\n                query={query.query}\n                onChange={onChangeQuery}\n                onRunQuery={onRunQuery}\n                onBlur={() => {}}\n                placeholder={'Enter a Trace ID (run with Shift+Enter)'}\n                portalOrigin=\"jaeger\"\n              />\n            </InlineField>\n          </InlineFieldRow>\n        );\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <InlineFieldRow>\n          <InlineField label=\"Query type\">\n            <RadioButtonGroup<JaegerQueryType>\n              options={[\n                { value: 'search', label: 'Search' },\n                { value: undefined, label: 'TraceID' },\n                { value: 'upload', label: 'JSON File' },\n              ]}\n              value={query.queryType}\n              onChange={(v) =>\n                onChange({\n                  ...query,\n                  queryType: v,\n                })\n              }\n              size=\"md\"\n            />\n          </InlineField>\n        </InlineFieldRow>\n        {renderEditorBody()}\n      </div>\n    </>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    width: 100%;\n  `,\n  fileDropzoneContainer: css`\n    padding: ${theme.spacing(2)};\n  `,\n});\n","import { DataFrame, NodeGraphDataFrameFieldNames as Fields } from '@grafana/data';\n\nimport { getNonOverlappingDuration, getStats, makeFrames, makeSpanMap } from '../../../core/utils/tracing';\n\nimport { Span, TraceResponse } from './types';\n\ninterface Node {\n  [Fields.id]: string;\n  [Fields.title]: string;\n  [Fields.subTitle]: string;\n  [Fields.mainStat]: string;\n  [Fields.secondaryStat]: string;\n  [Fields.color]: number;\n}\n\ninterface Edge {\n  [Fields.id]: string;\n  [Fields.target]: string;\n  [Fields.source]: string;\n}\n\nexport function createGraphFrames(data: TraceResponse): DataFrame[] {\n  const { nodes, edges } = convertTraceToGraph(data);\n  const [nodesFrame, edgesFrame] = makeFrames();\n\n  for (const node of nodes) {\n    nodesFrame.add(node);\n  }\n\n  for (const edge of edges) {\n    edgesFrame.add(edge);\n  }\n\n  return [nodesFrame, edgesFrame];\n}\n\nfunction convertTraceToGraph(data: TraceResponse): { nodes: Node[]; edges: Edge[] } {\n  const nodes: Node[] = [];\n  const edges: Edge[] = [];\n\n  const traceDuration = findTraceDuration(data.spans);\n\n  const spanMap = makeSpanMap((index) => {\n    if (index >= data.spans.length) {\n      return undefined;\n    }\n    const span = data.spans[index];\n    return {\n      span,\n      id: span.spanID,\n      parentIds: span.references?.filter((r) => r.refType === 'CHILD_OF').map((r) => r.spanID) || [],\n    };\n  });\n\n  for (const span of data.spans) {\n    const process = data.processes[span.processID];\n\n    const ranges: Array<[number, number]> = spanMap[span.spanID].children.map((c) => {\n      const span = spanMap[c].span;\n      return [span.startTime, span.startTime + span.duration];\n    });\n    const childrenDuration = getNonOverlappingDuration(ranges);\n    const selfDuration = span.duration - childrenDuration;\n    const stats = getStats(span.duration / 1000, traceDuration / 1000, selfDuration / 1000);\n\n    nodes.push({\n      [Fields.id]: span.spanID,\n      [Fields.title]: process?.serviceName ?? '',\n      [Fields.subTitle]: span.operationName,\n      [Fields.mainStat]: stats.main,\n      [Fields.secondaryStat]: stats.secondary,\n      [Fields.color]: selfDuration / traceDuration,\n    });\n\n    const parentSpanID = span.references?.find((r) => r.refType === 'CHILD_OF')?.spanID;\n    // Sometimes some span can be missing. Don't add edges for those.\n    if (parentSpanID && spanMap[parentSpanID].span) {\n      edges.push({\n        [Fields.id]: parentSpanID + '--' + span.spanID,\n        [Fields.target]: span.spanID,\n        [Fields.source]: parentSpanID,\n      });\n    }\n  }\n\n  return { nodes, edges };\n}\n\n/**\n * Get the duration of the whole trace as it isn't a part of the response data.\n * Note: Seems like this should be the same as just longest span, but this is probably safer.\n */\nfunction findTraceDuration(spans: Span[]): number {\n  let traceEndTime = 0;\n  let traceStartTime = Infinity;\n\n  for (const span of spans) {\n    if (span.startTime < traceStartTime) {\n      traceStartTime = span.startTime;\n    }\n\n    if (span.startTime + span.duration > traceEndTime) {\n      traceEndTime = span.startTime + span.duration;\n    }\n  }\n\n  return traceEndTime - traceStartTime;\n}\n","import { identity, omit, pick, pickBy } from 'lodash';\nimport { lastValueFrom, Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  DataSourceJsonData,\n  dateMath,\n  DateTime,\n  FieldType,\n  MutableDataFrame,\n  ScopedVars,\n} from '@grafana/data';\nimport { BackendSrvRequest, getBackendSrv, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\nimport { SpanBarOptions } from '@jaegertracing/jaeger-ui-components';\nimport { NodeGraphOptions } from 'app/core/components/NodeGraphSettings';\nimport { serializeParams } from 'app/core/utils/fetch';\nimport { getTimeSrv, TimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\nimport { ALL_OPERATIONS_KEY } from './components/SearchForm';\nimport { createGraphFrames } from './graphTransform';\nimport { createTableFrame, createTraceFrame } from './responseTransform';\nimport { JaegerQuery } from './types';\nimport { convertTagsLogfmt } from './util';\n\nexport interface JaegerJsonData extends DataSourceJsonData {\n  nodeGraph?: NodeGraphOptions;\n}\n\nexport class JaegerDatasource extends DataSourceApi<JaegerQuery, JaegerJsonData> {\n  uploadedJson: string | ArrayBuffer | null = null;\n  nodeGraph?: NodeGraphOptions;\n  spanBar?: SpanBarOptions;\n  constructor(\n    private instanceSettings: DataSourceInstanceSettings<JaegerJsonData>,\n    private readonly timeSrv: TimeSrv = getTimeSrv(),\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n    this.nodeGraph = instanceSettings.jsonData.nodeGraph;\n  }\n\n  async metadataRequest(url: string, params?: Record<string, any>): Promise<any> {\n    const res = await lastValueFrom(this._request(url, params, { hideFromInspector: true }));\n    return res.data.data;\n  }\n\n  isSearchFormValid(query: JaegerQuery): boolean {\n    return !!query.service;\n  }\n\n  query(options: DataQueryRequest<JaegerQuery>): Observable<DataQueryResponse> {\n    // At this moment we expect only one target. In case we somehow change the UI to be able to show multiple\n    // traces at one we need to change this.\n    const target: JaegerQuery = options.targets[0];\n\n    if (!target) {\n      return of({ data: [emptyTraceDataFrame] });\n    }\n\n    if (target.queryType === 'search' && !this.isSearchFormValid(target)) {\n      return of({ error: { message: 'You must select a service.' }, data: [] });\n    }\n\n    if (target.queryType !== 'search' && target.query) {\n      return this._request(\n        `/api/traces/${encodeURIComponent(this.templateSrv.replace(target.query, options.scopedVars))}`\n      ).pipe(\n        map((response) => {\n          const traceData = response?.data?.data?.[0];\n          if (!traceData) {\n            return { data: [emptyTraceDataFrame] };\n          }\n          let data = [createTraceFrame(traceData)];\n          if (this.nodeGraph?.enabled) {\n            data.push(...createGraphFrames(traceData));\n          }\n          return {\n            data,\n          };\n        })\n      );\n    }\n\n    if (target.queryType === 'upload') {\n      if (!this.uploadedJson) {\n        return of({ data: [] });\n      }\n\n      try {\n        const traceData = JSON.parse(this.uploadedJson as string).data[0];\n        let data = [createTraceFrame(traceData)];\n        if (this.nodeGraph?.enabled) {\n          data.push(...createGraphFrames(traceData));\n        }\n        return of({ data });\n      } catch (error) {\n        return of({ error: { message: 'The JSON file uploaded is not in a valid Jaeger format' }, data: [] });\n      }\n    }\n\n    let jaegerInterpolated = pick(this.applyVariables(target, options.scopedVars), [\n      'service',\n      'operation',\n      'tags',\n      'minDuration',\n      'maxDuration',\n      'limit',\n    ]);\n    // remove empty properties\n    let jaegerQuery = pickBy(jaegerInterpolated, identity);\n\n    if (jaegerQuery.operation === ALL_OPERATIONS_KEY) {\n      jaegerQuery = omit(jaegerQuery, 'operation');\n    }\n\n    if (jaegerQuery.tags) {\n      jaegerQuery = {\n        ...jaegerQuery,\n        tags: convertTagsLogfmt(jaegerQuery.tags.toString()),\n      };\n    }\n\n    // TODO: this api is internal, used in jaeger ui. Officially they have gRPC api that should be used.\n    return this._request(`/api/traces`, {\n      ...jaegerQuery,\n      ...this.getTimeRange(),\n      lookback: 'custom',\n    }).pipe(\n      map((response) => {\n        return {\n          data: [createTableFrame(response.data.data, this.instanceSettings)],\n        };\n      })\n    );\n  }\n\n  interpolateVariablesInQueries(queries: JaegerQuery[], scopedVars: ScopedVars): JaegerQuery[] {\n    if (!queries || queries.length === 0) {\n      return [];\n    }\n\n    return queries.map((query) => {\n      return {\n        ...query,\n        datasource: this.getRef(),\n        ...this.applyVariables(query, scopedVars),\n      };\n    });\n  }\n\n  applyVariables(query: JaegerQuery, scopedVars: ScopedVars) {\n    let expandedQuery = { ...query };\n\n    if (query.tags && this.templateSrv.containsTemplate(query.tags)) {\n      expandedQuery = {\n        ...query,\n        tags: this.templateSrv.replace(query.tags, scopedVars),\n      };\n    }\n\n    return {\n      ...expandedQuery,\n      service: this.templateSrv.replace(query.service ?? '', scopedVars),\n      operation: this.templateSrv.replace(query.operation ?? '', scopedVars),\n      minDuration: this.templateSrv.replace(query.minDuration ?? '', scopedVars),\n      maxDuration: this.templateSrv.replace(query.maxDuration ?? '', scopedVars),\n    };\n  }\n\n  async testDatasource(): Promise<any> {\n    return lastValueFrom(\n      this._request('/api/services').pipe(\n        map((res) => {\n          const values: any[] = res?.data?.data || [];\n          const testResult =\n            values.length > 0\n              ? { status: 'success', message: 'Data source connected and services found.' }\n              : {\n                  status: 'error',\n                  message:\n                    'Data source connected, but no services received. Verify that Jaeger is configured properly.',\n                };\n          return testResult;\n        }),\n        catchError((err: any) => {\n          let message = 'Jaeger: ';\n          if (err.statusText) {\n            message += err.statusText;\n          } else {\n            message += 'Cannot connect to Jaeger';\n          }\n\n          if (err.status) {\n            message += `. ${err.status}`;\n          }\n\n          if (err.data && err.data.message) {\n            message += `. ${err.data.message}`;\n          } else if (err.data) {\n            message += `. ${JSON.stringify(err.data)}`;\n          }\n          return of({ status: 'error', message: message });\n        })\n      )\n    );\n  }\n\n  getTimeRange(): { start: number; end: number } {\n    const range = this.timeSrv.timeRange();\n    return {\n      start: getTime(range.from, false),\n      end: getTime(range.to, true),\n    };\n  }\n\n  getQueryDisplayText(query: JaegerQuery) {\n    return query.query || '';\n  }\n\n  private _request(apiUrl: string, data?: any, options?: Partial<BackendSrvRequest>): Observable<Record<string, any>> {\n    const params = data ? serializeParams(data) : '';\n    const url = `${this.instanceSettings.url}${apiUrl}${params.length ? `?${params}` : ''}`;\n    const req = {\n      ...options,\n      url,\n    };\n\n    return getBackendSrv().fetch(req);\n  }\n}\n\nfunction getTime(date: string | DateTime, roundUp: boolean) {\n  if (typeof date === 'string') {\n    date = dateMath.parse(date, roundUp)!;\n  }\n  return date.valueOf() * 1000;\n}\n\nconst emptyTraceDataFrame = new MutableDataFrame({\n  fields: [\n    {\n      name: 'trace',\n      type: FieldType.trace,\n      values: [],\n    },\n  ],\n  meta: {\n    preferredVisualisationType: 'trace',\n    custom: {\n      traceFormat: 'jaeger',\n    },\n  },\n});\n","import { DataSourcePlugin } from '@grafana/data';\n\nimport CheatSheet from './CheatSheet';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { JaegerDatasource } from './datasource';\n\nexport const plugin = new DataSourcePlugin(JaegerDatasource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor)\n  .setQueryEditorHelp(CheatSheet);\n","import {\n  DataFrame,\n  DataSourceInstanceSettings,\n  FieldType,\n  MutableDataFrame,\n  TraceLog,\n  TraceSpanRow,\n} from '@grafana/data';\nimport { transformTraceData } from '@jaegertracing/jaeger-ui-components';\n\nimport { JaegerResponse, Span, TraceProcess, TraceResponse } from './types';\n\nexport function createTraceFrame(data: TraceResponse): DataFrame {\n  const spans = data.spans.map((s) => toSpanRow(s, data.processes));\n\n  const frame = new MutableDataFrame({\n    fields: [\n      { name: 'traceID', type: FieldType.string },\n      { name: 'spanID', type: FieldType.string },\n      { name: 'parentSpanID', type: FieldType.string },\n      { name: 'operationName', type: FieldType.string },\n      { name: 'serviceName', type: FieldType.string },\n      { name: 'serviceTags', type: FieldType.other },\n      { name: 'startTime', type: FieldType.number },\n      { name: 'duration', type: FieldType.number },\n      { name: 'logs', type: FieldType.other },\n      { name: 'tags', type: FieldType.other },\n      { name: 'warnings', type: FieldType.other },\n      { name: 'stackTraces', type: FieldType.other },\n    ],\n    meta: {\n      preferredVisualisationType: 'trace',\n      custom: {\n        traceFormat: 'jaeger',\n      },\n    },\n  });\n\n  for (const span of spans) {\n    frame.add(span);\n  }\n\n  return frame;\n}\n\nfunction toSpanRow(span: Span, processes: Record<string, TraceProcess>): TraceSpanRow {\n  return {\n    spanID: span.spanID,\n    traceID: span.traceID,\n    parentSpanID: span.references?.find((r) => r.refType === 'CHILD_OF')?.spanID,\n    operationName: span.operationName,\n    // from micro to millis\n    startTime: span.startTime / 1000,\n    duration: span.duration / 1000,\n    logs: span.logs.map((l) => ({\n      ...l,\n      timestamp: l.timestamp / 1000,\n    })),\n    tags: span.tags,\n    warnings: span.warnings ?? undefined,\n    stackTraces: span.stackTraces,\n    serviceName: processes[span.processID].serviceName,\n    serviceTags: processes[span.processID].tags,\n  };\n}\n\nexport function createTableFrame(data: TraceResponse[], instanceSettings: DataSourceInstanceSettings): DataFrame {\n  const frame = new MutableDataFrame({\n    fields: [\n      {\n        name: 'traceID',\n        type: FieldType.string,\n        config: {\n          unit: 'string',\n          displayNameFromDS: 'Trace ID',\n          links: [\n            {\n              title: 'Trace: ${__value.raw}',\n              url: '',\n              internal: {\n                datasourceUid: instanceSettings.uid,\n                datasourceName: instanceSettings.name,\n                query: {\n                  query: '${__value.raw}',\n                },\n              },\n            },\n          ],\n        },\n      },\n      { name: 'traceName', type: FieldType.string, config: { displayNameFromDS: 'Trace name' } },\n      { name: 'startTime', type: FieldType.time, config: { displayNameFromDS: 'Start time' } },\n      { name: 'duration', type: FieldType.number, config: { displayNameFromDS: 'Duration', unit: 'µs' } },\n    ],\n    meta: {\n      preferredVisualisationType: 'table',\n    },\n  });\n  // Show the most recent traces\n  const traceData = data.map(transformToTraceData).sort((a, b) => b?.startTime! - a?.startTime!);\n\n  for (const trace of traceData) {\n    frame.add(trace);\n  }\n\n  return frame;\n}\n\nfunction transformToTraceData(data: TraceResponse) {\n  const traceData = transformTraceData(data);\n  if (!traceData) {\n    return;\n  }\n\n  return {\n    traceID: traceData.traceID,\n    startTime: traceData.startTime / 1000,\n    duration: traceData.duration,\n    traceName: traceData.traceName,\n  };\n}\n\nexport function transformToJaeger(data: MutableDataFrame): JaegerResponse {\n  let traceResponse: TraceResponse = {\n    traceID: '',\n    spans: [],\n    processes: {},\n    warnings: null,\n  };\n  let processes: string[] = [];\n\n  for (let i = 0; i < data.length; i++) {\n    const span = data.get(i);\n\n    // Set traceID\n    if (!traceResponse.traceID) {\n      traceResponse.traceID = span.traceID;\n    }\n\n    // Create process if doesn't exist\n    if (!processes.find((p) => p === span.serviceName)) {\n      processes.push(span.serviceName);\n      traceResponse.processes[`p${processes.length}`] = {\n        serviceName: span.serviceName,\n        tags: span.serviceTags,\n      };\n    }\n\n    // Create span\n    traceResponse.spans.push({\n      traceID: span.traceID,\n      spanID: span.spanID,\n      duration: span.duration * 1000,\n      references: span.parentSpanID\n        ? [\n            {\n              refType: 'CHILD_OF',\n              spanID: span.parentSpanID,\n              traceID: span.traceID,\n            },\n          ]\n        : [],\n      flags: 0,\n      logs: span.logs.map((l: TraceLog) => ({\n        ...l,\n        timestamp: l.timestamp * 1000,\n      })),\n      operationName: span.operationName,\n      processID:\n        Object.keys(traceResponse.processes).find(\n          (key) => traceResponse.processes[key].serviceName === span.serviceName\n        ) || '',\n      startTime: span.startTime * 1000,\n      tags: span.tags,\n      warnings: span.warnings ? span.warnings : null,\n    });\n  }\n\n  return { data: [traceResponse], total: 0, limit: 0, offset: 0, errors: null };\n}\n","\n/*\nModule dependencies.\n*/\n\n/*\nJSON:\n\nParse logplex request bodies, providing the\nparsed object as `req.body`.\n\nOptions: none\n\n@param content_type {String} use when Content-Type matches this string\n@param parser {Function} parsing function takes String body and returns new body\n@return {Function}\n@api public\n*/\n\nexports = module.exports = function(options) {\n  var limit;\n  if (options == null) options = {};\n\n  return function(req, res, next) {\n    if (req._body) return next();\n    var is_mime = req.header('content-type') === options.contentType;\n    if (!is_mime) return next();\n    req._body = true;\n    req.body = req.body || {};\n    var buf;\n    buf = \"\";\n    req.setEncoding(\"utf8\");\n    req.on(\"data\", function(chunk) {\n      return buf += chunk;\n    });\n    req.on(\"end\", function() {\n      try {\n        var lines = []\n        buf.trim().split(\"\\n\").forEach(function(line){\n          lines.push(options.parser(line))\n        })\n        req.body = lines;\n      } catch (err) {\n        err.body = buf;\n        err.status = 400;\n        return next(err);\n      }\n      return next();\n    });\n  };\n};\n","var split = require('split');\nvar through = require('through');\nvar Readable = require('stream').Readable;\nvar PassThrough = require('stream').PassThrough;\nvar logfmt   = require('../logfmt');\n\nexports = module.exports = function(options){\n  if(options == null) options = {};\n  var mime = options.contentType || \"application/logplex-1\";\n\n  return function(req, res, next) {\n\n    //honor already parsed bodies\n    if (req._body) return next();\n\n    //mime-type check\n    var is_mime = req.header('content-type') === mime;\n    if (!is_mime) return next();\n    req._body = true;\n    req.body = new PassThrough({objectMode: true});\n    req.pipe(logfmt.streamParser()).pipe(req.body);\n\n    return next();\n  }\n}\n\n","exports.debug = false;\n\nexports.parse = function(line) {\n  var key = '';\n  var value = '';\n  var is_number = true;\n  var in_key    = false;\n  var in_value  = false;\n  var in_quote  = false;\n  var had_quote = false;\n  var object    = {};\n  var debug     = exports.debug;\n\n  if(line[line.length - 1] == '\\n'){\n    line = line.slice(0,line.length - 1)\n  }\n\n  for(var i=0; i <= line.length; i++){\n\n    if((line[i] == ' ' && !in_quote) || i == line.length){\n      if(in_key && key.length > 0){\n        object[key] = true;\n      }else if(in_value){\n        if(value == 'true') value = true;\n        else if(value == 'false') value = false;\n        else if(value === '' && !had_quote) value = null;\n        object[key] = value;\n        value = '';\n      }\n\n      if(i == line.length) break;\n      else {\n        in_key   = false;\n        in_value = false;\n        in_quote = false;\n        had_quote = false;\n      }\n    }\n\n    if(line[i] == '=' && !in_quote){\n      if(debug) console.log('split')\n      //split\n      in_key = false;\n      in_value = true;\n    }\n    else if(line[i] == '\\\\'){\n      i ++ ;\n      value += line[i];\n      if(debug) console.log('escape: ' + line[i])\n    }\n    else if(line[i] == '\"'){\n      had_quote = true;\n      in_quote = !in_quote;\n      if(debug) console.log('in quote: ' + in_quote)\n    }\n    else if(line[i] != ' ' && !in_value && !in_key){\n      if(debug) console.log('start key with: ' + line[i])\n      in_key = true;\n      key = line[i];\n    }\n    else if(in_key){\n      if(debug) console.log('add to key: ' + line[i])\n      key += line[i]\n    }\n    else if(in_value){\n      if(debug) console.log('add to value: ' + line[i])\n      value += line[i];\n    }\n  }\n\n  return object;\n}\n","exports.log = function(data, stream) {\n  this.stream = this.stream || process.stdout;\n  if(stream == undefined) stream = this.stream;\n\n  var logData = Object.assign({}, this.defaultData, data);\n\n  if(this.timers){\n    for(var key in this.timers){\n      var now = (new Date()).getTime()\n      logData[key] = (now - this.timers[key]).toString() + 'ms' ;\n    }\n  }\n\n  stream.write(this.stringify(logData) + \"\\n\");\n}\n\nexports.time = function(label) {\n  var logfmt = require('../logfmt');\n  var startTime = (new Date()).getTime();\n  var label  = label || 'elapsed';\n  var timer  = new logfmt();\n  timer.stream = this.stream;\n  timer.defaultData = this.defaultData;\n  timer.timers = Object.assign({}, this.timers)\n  timer.timers[label] = startTime;\n  return timer;\n}\n\nexports.namespace = function(object) {\n  var logfmt = require('../logfmt');\n  var namespaced = new logfmt()\n  var namespace  = Object.assign({}, this.defaultData, object);\n  namespaced.stream = this.stream;\n  namespaced.defaultData = namespace\n  namespaced.timers = this.timers;\n  return namespaced;\n}\n\nexports.error = function(err, id) {\n  this.maxErrorLines = this.maxErrorLines || 10;\n  if (id === undefined) {\n    id = Math.random().toString().slice(2, 12);\n  }\n  var errorLogger = this.namespace({\n    error: true,\n    id:id,\n    now: (new Date()).toISOString()\n  })\n  errorLogger.log({ message:err.message });\n  if (err.stack) {\n    var stack = err.stack.split('\\n');\n    for (var line in stack) {\n      if (line >= this.maxErrorLines) break;\n      errorLogger.log({ line:line, trace:stack[line] });\n    }\n  }\n}\n","var commonFormatter = function(req, res){\n  if((typeof req.path) == 'function'){\n    //in restify path is a function\n    var path = req.path();\n  }\n  else{\n    //in express it is an attribute\n    var path = req.originalUrl || req.path || req.url;\n  }\n\n  var httpHeader = req.header && req.header('x-forwarded-for')\n  var requestID  = req.header && req.header('x-request-id')\n\n  var ip = req.ip || httpHeader\n                  || req.connection.remoteAddress;\n\n  var requestData =  {\n    ip: ip,\n    time: (new Date()).toISOString(),\n    method: req.method,\n    path: path,\n    \"status\": res.statusCode,\n  }\n\n  if (requestID) {\n    requestData.request_id = requestID;\n  }\n\n  if(res.get){\n    requestData.content_length = res.get('content-length');\n    requestData.content_type = res.get('content-type');\n  }\n  return requestData;\n}\n\nvar immediateLogger = function(logger, options, formatter){\n  return function(req, res, next){\n    var data = formatter(req, res);\n    logger.log(data);\n    next();\n  }\n}\n\nvar timingLogger = function(logger, options, formatter){\n  return function(req, res, next){\n    var elapsed = options.elapsed || 'elapsed';\n    var timer   = logger.time(elapsed);\n    var end = res.end;\n    res.end = function(chunk, encoding) {\n      var data = formatter(req, res);\n      res.end = end;\n      res.end(chunk, encoding);\n      timer.log(data);\n    };\n    next();\n  }\n}\n\nexports.init = function(logger, options, formatter) {\n  this.logger = logger;\n\n  if(!formatter && !options){\n    formatter = commonFormatter;\n    options = {};\n  }\n  else if(!formatter){\n    if(typeof options == 'function'){\n      formatter = options;\n      options = {};\n    }else{\n      formatter = commonFormatter;\n    }\n  }\n  options = options || {};\n\n  if(options.immediate){\n    return immediateLogger(logger, options, formatter);\n  }else{\n    return timingLogger(logger, options, formatter);\n  }\n}\n\nexports.commonFormatter = commonFormatter;\n","var split       = require('split')\nvar through     = require('through');\nvar PassThrough = require('stream').PassThrough;\n\n//returns a stream that splits and parses logfmt into objects\nexports.streamParser = function(options){\n  var options = options || {};\n\n  var streamParser = new PassThrough();\n  var self = this;\n\n  var logfmtStream = through(function(line){\n    if(line !== '') this.queue(self.parse(line))\n  })\n\n  // When a source stream is piped to us, undo that pipe, and save\n  // off the source stream piped into our internally managed streams.\n  streamParser.on('pipe', function(source) {\n    if(source.unpipe) source.unpipe(this);\n    this.transformStream = source.pipe(split()).pipe(logfmtStream);\n  });\n\n  // When we're piped to another stream, instead pipe our internal\n  // transform stream to that destination.\n  streamParser.pipe = function(destination, options) {\n    return this.transformStream.pipe(destination, options);\n  };\n\n  return streamParser;\n}\n\n// returns a stream that stringifies objects\nexports.streamStringify = function(options){\n  var self = this;\n  var options = options || {};\n  if(options.hasOwnProperty('delimiter')){\n    var delim = options.delimiter;\n  }else{\n    var delim = \"\\n\";\n  }\n\n  return through(function(data){\n    this.queue(self.stringify(data) + delim)\n  }, function(){\n    this.queue(null)\n  })\n}\n","exports.stringify = function(data){\n  var line = '';\n\n  for(var key in data) {\n    var value = data[key];\n    var is_null = false;\n    if(value == null) {\n      is_null = true;\n      value = '';\n    }\n    else value = value.toString();\n\n    var needs_quoting  = value.indexOf(' ') > -1 || value.indexOf('=') > -1;\n    var needs_escaping = value.indexOf('\"') > -1 || value.indexOf(\"\\\\\") > -1;\n\n    if(needs_escaping) value = value.replace(/[\"\\\\]/g, '\\\\$&');\n    if(needs_quoting) value = '\"' + value + '\"';\n    if(value === '' && !is_null) value = '\"\"';\n\n    line += key + '=' + value + ' ';\n  }\n\n  //trim traling space\n  return line.substring(0,line.length-1);\n}\n\n","//constructor\nfunction logfmt() {\n}\nmodule.exports = logfmt;\n\nvar streaming        = require('./lib/streaming');\nvar bodyParser       = require('./lib/body_parser');\nvar bodyParserStream = require('./lib/body_parser_stream');\nvar logfmtParser     = require('./lib/logfmt_parser');\nvar logger           = require('./lib/logger');\nvar requestLogger    = require('./lib/request_logger');\nvar serializer       = require('./lib/stringify');\n\n//Build up logfmt prototype\nObject.assign(logfmt.prototype, logger);\nObject.assign(logfmt.prototype, streaming);\n\nlogfmt.prototype.stringify = serializer.stringify;\nlogfmt.prototype.parse = logfmtParser.parse;\n\n// Synchronous body parser\nlogfmt.prototype.bodyParser = function(options) {\n  options || (options = {});\n  var mime = options.contentType || \"application/logplex-1\";\n  return bodyParser({ contentType: mime, parser: this.parse });\n};\n\n// Stream parser\nlogfmt.prototype.bodyParserStream = function(options) {\n  options || (options = {});\n  var mime = options.contentType || \"application/logplex-1\";\n  return bodyParserStream({ contentType: mime });\n};\n\nlogfmt.prototype.requestLogger = function(options, formatter) {\n  return requestLogger.init(this, options, formatter);\n};\n\nlogfmt.prototype.requestLogger.commonFormatter = requestLogger.commonFormatter;\n\nObject.assign(logfmt, logfmt.prototype);\n","//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\n\nvar through = require('through')\nvar Decoder = require('string_decoder').StringDecoder\n\nmodule.exports = split\n\n//TODO pass in a function to map across the lines.\n\nfunction split (matcher, mapper) {\n  var decoder = new Decoder()\n  var soFar = ''\n  if('function' === typeof matcher)\n    mapper = matcher, matcher = null\n  if (!matcher)\n    matcher = /\\r?\\n/\n\n  function emit(stream, piece) {\n    if(mapper) {\n      try {\n        piece = mapper(piece)\n      }\n      catch (err) {\n        return stream.emit('error', err)\n      }\n      if('undefined' !== typeof piece)\n        stream.queue(piece)\n    }\n    else\n      stream.queue(piece)\n  }\n\n  function next (stream, buffer) { \n    var pieces = (soFar + buffer).split(matcher)\n    soFar = pieces.pop()\n\n    for (var i = 0; i < pieces.length; i++) {\n      var piece = pieces[i]\n      emit(stream, piece)\n    }\n  }\n\n  return through(function (b) {\n    next(this, decoder.write(b))\n  },\n  function () {\n    if(decoder.end) \n      next(this, decoder.end())\n    if(soFar != null)\n      emit(this, soFar)\n    this.queue(null)\n  })\n}\n\n","var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n"],"names":["NodeGraphSettings","options","onOptionsChange","styles","event","TraceToMetricsSettings","getStyles","ds","v","query","i","e","newQueries","theme","getNonOverlappingDuration","ranges","a","b","acc","range","tail","prevStart","prevEnd","start","end","makeSpanMap","getSpan","spanMap","span","index","parentId","getStats","duration","traceDuration","selfDuration","toFixedNoTrailingZeros","n","makeFrames","nodesFrame","edgesFrame","CheatSheet","ConfigEditor","DataSourceHttpSettings","config","SecureSocksProxySettings","TraceToLogsSettings","convertTagsLogfmt","tags","data","key","value","transformToLogfmt","durationPlaceholder","ALL_OPERATIONS_KEY","allOperationsOption","SearchForm","datasource","onChange","serviceOptions","setServiceOptions","operationOptions","setOperationOptions","isLoading","setIsLoading","loadOptions","url","loaderOfType","prevValue","values","option","item","fuzzy","error","services","getOperations","operations","InlineFieldRow","InlineField","Select","Input","QueryEditor","onRunQuery","onChangeQuery","nextQuery","renderEditorBody","FileDropzone","result","QueryField","RadioButtonGroup","createGraphFrames","nodes","edges","convertTraceToGraph","node","edge","findTraceDuration","r","process","c","childrenDuration","stats","parentSpanID","spans","traceEndTime","traceStartTime","JaegerDatasource","instanceSettings","timeSrv","templateSrv","params","lastValueFrom","target","of","emptyTraceDataFrame","map","response","traceData","jaegerInterpolated","jaegerQuery","queries","scopedVars","expandedQuery","res","catchError","err","message","getTime","apiUrl","req","date","roundUp","MutableDataFrame","createTraceFrame","s","toSpanRow","frame","processes","l","createTableFrame","transformToTraceData","trace","transformToJaeger","traceResponse","p","exports","module","limit","next","is_mime","buf","chunk","lines","line","split","through","Readable","PassThrough","logfmt","mime","is_number","in_key","in_value","in_quote","had_quote","object","debug","stream","logData","now","label","startTime","timer","namespaced","namespace","id","errorLogger","stack","commonFormatter","path","httpHeader","requestID","ip","requestData","immediateLogger","logger","formatter","timingLogger","elapsed","encoding","streamParser","self","logfmtStream","source","destination","delim","is_null","needs_quoting","needs_escaping","streaming","bodyParser","bodyParserStream","logfmtParser","requestLogger","serializer","Decoder","matcher","mapper","decoder","soFar","emit","piece","buffer","pieces","Stream","write","opts","ended","destroyed","_ended","drain","_end"],"sourceRoot":""}