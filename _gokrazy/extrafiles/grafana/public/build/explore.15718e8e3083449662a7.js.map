{"version":3,"file":"explore.15718e8e3083449662a7.js","mappings":"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","sources":["webpack://grafana/./public/app/features/dashboard/dashgrid/SeriesVisibilityConfigFactory.ts","webpack://grafana/./.yarn/__virtual__/react-use-virtual-00326e70ba/3/opt/drone/yarncache/react-use-npm-17.3.2-a032cbeb01-7379460f51.zip/node_modules/react-use/esm/useInterval.js","webpack://grafana/./public/app/features/explore/Time.tsx","webpack://grafana/./public/app/features/explore/ElapsedTime.tsx","webpack://grafana/./public/app/features/explore/LiveLogs.tsx","webpack://grafana/./public/app/features/explore/MetaInfoText.tsx","webpack://grafana/./public/app/features/explore/LogsMetaRow.tsx","webpack://grafana/./public/app/features/explore/LogsNavigationPages.tsx","webpack://grafana/./public/app/features/explore/LogsNavigation.tsx","webpack://grafana/./public/app/features/explore/ExploreGraph.tsx","webpack://grafana/./public/app/features/explore/exploreGraphStyleUtils.ts","webpack://grafana/./public/app/features/explore/Logs.tsx","webpack://grafana/./public/app/features/explore/utils/LogsCrossFadeTransition.tsx","webpack://grafana/./public/app/features/explore/useLiveTailControls.ts","webpack://grafana/./public/app/features/explore/LogsContainer.tsx","webpack://grafana/./public/app/features/explore/QueryRows.tsx","webpack://grafana/./public/app/features/explore/TableContainer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistorySettings.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistory.tsx","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-820bbedce8/3/opt/drone/yarncache/re-resizable-npm-6.9.5-33d584b1c1-cd82a1baff.zip/node_modules/re-resizable/lib/resizer.js","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-820bbedce8/3/opt/drone/yarncache/re-resizable-npm-6.9.5-33d584b1c1-cd82a1baff.zip/node_modules/re-resizable/lib/index.js","webpack://grafana/./public/app/features/explore/ExploreDrawer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack://grafana/./public/app/features/explore/ExploreQueryInspector.tsx","webpack://grafana/./public/app/features/explore/TimeSyncButton.tsx","webpack://grafana/./public/app/features/explore/ExploreTimeControls.tsx","webpack://grafana/./public/app/features/explore/LiveTailButton.tsx","webpack://grafana/./public/app/features/explore/RunButton.tsx","webpack://grafana/./public/app/features/explore/ExploreToolbar.tsx","webpack://grafana/./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack://grafana/./public/app/features/explore/SecondaryActions.tsx","webpack://grafana/./public/app/features/explore/NodeGraphContainer.tsx","webpack://grafana/./public/app/core/components/Animations/FadeIn.tsx","webpack://grafana/./public/app/features/explore/ErrorContainer.tsx","webpack://grafana/./public/app/features/explore/ResponseErrorContainer.tsx","webpack://grafana/./public/app/features/explore/TraceView/createSpanLink.tsx","webpack://grafana/./public/app/features/explore/TraceView/useDetailState.ts","webpack://grafana/./public/app/features/explore/TraceView/TraceView.tsx","webpack://grafana/./public/app/features/explore/TraceView/useHoverIndentGuide.ts","webpack://grafana/./public/app/features/explore/TraceView/useViewRange.ts","webpack://grafana/./packages/jaeger-ui-components/src/common/UiFindInput.tsx","webpack://grafana/./packages/jaeger-ui-components/src/TracePageHeader/TracePageSearchBar.tsx","webpack://grafana/./packages/jaeger-ui-components/src/TracePageHeader/TracePageSearchBar.markers.tsx","webpack://grafana/./public/app/features/explore/TraceView/utils/transform.ts","webpack://grafana/./public/app/features/explore/TraceView/useChildrenState.ts","webpack://grafana/./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack://grafana/./public/app/features/explore/TraceView/useSearch.ts","webpack://grafana/./public/app/features/explore/LogsVolumePanel.tsx","webpack://grafana/./public/app/features/explore/ExploreGraphLabel.tsx","webpack://grafana/./public/app/features/explore/Explore.tsx","webpack://grafana/./public/app/features/explore/ExplorePaneContainer.tsx","webpack://grafana/./public/app/features/explore/Wrapper.tsx","webpack://grafana/./public/app/features/explore/state/selectors.ts","webpack://grafana/./.yarn/__virtual__/react-use-virtual-00326e70ba/3/opt/drone/yarncache/react-use-npm-17.3.2-a032cbeb01-7379460f51.zip/node_modules/react-use/esm/usePrevious.js","webpack://grafana/../../opt/drone/yarncache/fast-memoize-npm-2.5.2-f42a7c6940-79fa759719.zip/node_modules/fast-memoize/src/index.js","webpack://grafana/../../opt/drone/yarncache/immer-npm-9.0.12-e8cd7358fa-bcbec6d76d.zip/node_modules/immer/dist/immer.esm.js"],"sourcesContent":["import {\n  ByNamesMatcherMode,\n  DataFrame,\n  DynamicConfigValue,\n  FieldConfigSource,\n  FieldMatcherID,\n  FieldType,\n  getFieldDisplayName,\n  isSystemOverrideWithRef,\n  SystemConfigOverrideRule,\n} from '@grafana/data';\nimport { SeriesVisibilityChangeMode } from '@grafana/ui';\n\nconst displayOverrideRef = 'hideSeriesFrom';\nconst isHideSeriesOverride = isSystemOverrideWithRef(displayOverrideRef);\n\nexport function seriesVisibilityConfigFactory(\n  label: string,\n  mode: SeriesVisibilityChangeMode,\n  fieldConfig: FieldConfigSource,\n  data: DataFrame[]\n) {\n  const { overrides } = fieldConfig;\n\n  const displayName = label;\n  const currentIndex = overrides.findIndex(isHideSeriesOverride);\n\n  if (currentIndex < 0) {\n    if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n      const override = createOverride([displayName]);\n\n      return {\n        ...fieldConfig,\n        overrides: [...fieldConfig.overrides, override],\n      };\n    }\n\n    const displayNames = getDisplayNames(data, displayName);\n    const override = createOverride(displayNames);\n\n    return {\n      ...fieldConfig,\n      overrides: [...fieldConfig.overrides, override],\n    };\n  }\n\n  const overridesCopy = Array.from(overrides);\n  const [current] = overridesCopy.splice(currentIndex, 1) as SystemConfigOverrideRule[];\n\n  if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n    const existing = getExistingDisplayNames(current);\n\n    if (existing[0] === displayName && existing.length === 1) {\n      return {\n        ...fieldConfig,\n        overrides: overridesCopy,\n      };\n    }\n\n    const override = createOverride([displayName]);\n\n    return {\n      ...fieldConfig,\n      overrides: [...overridesCopy, override],\n    };\n  }\n\n  const override = createExtendedOverride(current, displayName);\n\n  if (allFieldsAreExcluded(override, data)) {\n    return {\n      ...fieldConfig,\n      overrides: overridesCopy,\n    };\n  }\n\n  return {\n    ...fieldConfig,\n    overrides: [...overridesCopy, override],\n  };\n}\n\nfunction createOverride(\n  names: string[],\n  mode = ByNamesMatcherMode.exclude,\n  property?: DynamicConfigValue\n): SystemConfigOverrideRule {\n  property = property ?? {\n    id: 'custom.hideFrom',\n    value: {\n      viz: true,\n      legend: false,\n      tooltip: false,\n    },\n  };\n\n  return {\n    __systemRef: displayOverrideRef,\n    matcher: {\n      id: FieldMatcherID.byNames,\n      options: {\n        mode: mode,\n        names: names,\n        prefix: mode === ByNamesMatcherMode.exclude ? 'All except:' : undefined,\n        readOnly: true,\n      },\n    },\n    properties: [\n      {\n        ...property,\n        value: {\n          viz: true,\n          legend: false,\n          tooltip: false,\n        },\n      },\n    ],\n  };\n}\n\nconst createExtendedOverride = (\n  current: SystemConfigOverrideRule,\n  displayName: string,\n  mode = ByNamesMatcherMode.exclude\n): SystemConfigOverrideRule => {\n  const property = current.properties.find((p) => p.id === 'custom.hideFrom');\n  const existing = getExistingDisplayNames(current);\n  const index = existing.findIndex((name) => name === displayName);\n\n  if (index < 0) {\n    existing.push(displayName);\n  } else {\n    existing.splice(index, 1);\n  }\n\n  return createOverride(existing, mode, property);\n};\n\nconst getExistingDisplayNames = (rule: SystemConfigOverrideRule): string[] => {\n  const names = rule.matcher.options?.names;\n  if (!Array.isArray(names)) {\n    return [];\n  }\n  return names;\n};\n\nconst allFieldsAreExcluded = (override: SystemConfigOverrideRule, data: DataFrame[]): boolean => {\n  return getExistingDisplayNames(override).length === getDisplayNames(data).length;\n};\n\nconst getDisplayNames = (data: DataFrame[], excludeName?: string): string[] => {\n  const unique = new Set<string>();\n\n  for (const frame of data) {\n    for (const field of frame.fields) {\n      if (field.type !== FieldType.number) {\n        continue;\n      }\n\n      const name = getFieldDisplayName(field, frame, data);\n\n      if (name === excludeName) {\n        continue;\n      }\n\n      unique.add(name);\n    }\n  }\n\n  return Array.from(unique);\n};\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n","import React, { FC } from 'react';\nimport { toDuration } from '@grafana/data';\n\nexport interface TimeProps {\n  timeInMs: number;\n  className?: string;\n  humanize?: boolean;\n}\n\nexport const Time: FC<TimeProps> = ({ timeInMs, className, humanize }) => {\n  return <span className={`elapsed-time ${className}`}>{formatTime(timeInMs, humanize)}</span>;\n};\n\nconst formatTime = (timeInMs: number, humanize = false): string => {\n  const inSeconds = timeInMs / 1000;\n\n  if (!humanize) {\n    return `${inSeconds.toFixed(1)}s`;\n  }\n\n  const duration = toDuration(inSeconds, 'seconds');\n  const hours = duration.hours();\n  const minutes = duration.minutes();\n  const seconds = duration.seconds();\n\n  if (hours) {\n    return `${hours}h ${minutes}m ${seconds}s`;\n  }\n\n  if (minutes) {\n    return `${minutes}m ${seconds}s`;\n  }\n\n  return `${seconds}s`;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: any;\n}\n\nexport const ElapsedTime: FC<ElapsedTimeProps> = ({ resetKey, humanize, className }) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import React, { PureComponent } from 'react';\nimport { css, cx } from '@emotion/css';\nimport tinycolor from 'tinycolor2';\n\nimport { LogMessageAnsi, getLogRowStyles, Icon, Button, Themeable2, withTheme2 } from '@grafana/ui';\nimport { LogRowModel, TimeZone, dateTimeFormat, GrafanaTheme2 } from '@grafana/data';\n\nimport { ElapsedTime } from './ElapsedTime';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.h6.fontSize};\n    padding-top: ${theme.spacing(1)};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing(1)};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable2 {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (!nextProps.isPaused) {\n      return {\n        // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n        // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n        // without creating a gap in the log results.\n        logRowsToRender: nextProps.logRows,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = rowsToRender.slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={cx(['logs-rows', styles.logsRowsLive])}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={cx(logsRowLocalTime)}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={cx(logsRowMessage)}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                if (this.liveEndDiv && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button variant=\"secondary\" onClick={isPaused ? onResume : onPause} className={styles.button}>\n            <Icon name={isPaused ? 'play' : 'pause'} />\n            &nbsp;\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            <Icon name=\"square-shape\" size=\"lg\" type=\"mono\" />\n            &nbsp; Exit live mode\n          </Button>\n          {isPaused || (\n            <span>\n              Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme2(LiveLogs);\n","import React, { memo } from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metaContainer: css`\n    flex: 1;\n    color: ${theme.colors.text.secondary};\n    margin-bottom: ${theme.spacing(2)};\n    min-width: 30%;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  metaItem: css`\n    margin-right: ${theme.spacing(2)};\n    margin-top: ${theme.spacing(0.5)};\n    display: flex;\n    align-items: baseline;\n\n    .logs-meta-item__error {\n      color: ${theme.colors.error.text};\n    }\n  `,\n  metaLabel: css`\n    margin-right: calc(${theme.spacing(2)} / 2);\n    font-size: ${theme.typography.bodySmall.fontSize};\n    font-weight: ${theme.typography.fontWeightMedium};\n  `,\n  metaValue: css`\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n  `,\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nconst MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles2(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div data-testid=\"meta-info-text-item\" className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\ninterface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles2(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer} data-testid=\"meta-info-text\">\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n","import React from 'react';\nimport { LogsDedupStrategy, LogsMetaItem, LogsMetaKind, LogRowModel } from '@grafana/data';\nimport { Button, Tooltip, Icon, LogLabels } from '@grafana/ui';\nimport { MAX_CHARACTERS } from '@grafana/ui/src/components/Logs/LogRowMessage';\nimport { MetaInfoText, MetaItemProps } from './MetaInfoText';\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  showDetectedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nexport const LogsMetaRow: React.FC<Props> = React.memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    showDetectedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }) => {\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Dedup count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (showDetectedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only detected fields',\n          value: renderMetaItem(showDetectedFields, LogsMetaKind.LabelsMap),\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show all detected fields\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"Fix incorrectly escaped newline and tab sequences in log lines. Manually review the results to confirm that the replacements are correct.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              <span>{forceEscape ? 'Remove escaping' : 'Escape newlines'}&nbsp;</span>\n              <Icon name=\"exclamation-triangle\" className=\"muted\" size=\"sm\" />\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n\n    return (\n      <>\n        {logsMetaItem && (\n          <MetaInfoText\n            metaItems={logsMetaItem.map((item) => {\n              return {\n                label: item.label,\n                value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n              };\n            })}\n          />\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return (\n      <span className=\"logs-meta-item__labels\">\n        <LogLabels labels={value} />\n      </span>\n    );\n  } else if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value}</span>;\n  }\n  return value;\n}\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { dateTimeFormat, systemDateFormats, TimeZone, AbsoluteTimeRange, GrafanaTheme2 } from '@grafana/data';\nimport { CustomScrollbar, Spinner, useTheme2 } from '@grafana/ui';\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  changeTime: (range: AbsoluteTimeRange) => void;\n};\n\nexport function LogsNavigationPages({\n  pages,\n  currentPageIndex,\n  oldestLogsFirst,\n  timeZone,\n  loading,\n  changeTime,\n}: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <div\n              data-testid={`page${index + 1}`}\n              className={styles.page}\n              key={page.queryRange.to}\n              onClick={() => !loading && changeTime({ from: page.queryRange.from, to: page.queryRange.to })}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `,\n  };\n};\n","import React, { memo, useState, useEffect, useRef } from 'react';\nimport { isEqual } from 'lodash';\nimport { css } from '@emotion/css';\nimport { LogsSortOrder, AbsoluteTimeRange, TimeZone, DataQuery, GrafanaTheme2 } from '@grafana/data';\nimport { Button, Icon, Spinner, useTheme2 } from '@grafana/ui';\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = oldestLogsFirst ? currentPageIndex === pages.length - 1 : currentPageIndex === 0;\n  const onLastPage = oldestLogsFirst ? currentPageIndex === 0 : currentPageIndex === pages.length - 1;\n  const theme = useTheme2();\n  const styles = getStyles(theme, oldestLogsFirst, loading);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      setCurrentPageIndex(0);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        // Set new pages\n\n        return newPages;\n      });\n\n      // Set current page index\n      const index = newPages.findIndex((page) => page.queryRange.to === absoluteRange.to);\n      setCurrentPageIndex(index);\n    }\n    addResultsToCache();\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  useEffect(() => {\n    clearCache();\n    // We can't enforce the eslint rule here because we only want to run when component is mounted.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const changeTime = ({ from, to }: AbsoluteTimeRange) => {\n    expectedRangeRef.current = { from, to };\n    onChangeTime({ from, to });\n  };\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        if (!onLastPage) {\n          const indexChange = oldestLogsFirst ? -1 : 1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          const indexChange = oldestLogsFirst ? 1 : -1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        }\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  return (\n    <div className={styles.navContainer}>\n      {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n      <LogsNavigationPages\n        pages={pages}\n        currentPageIndex={currentPageIndex}\n        oldestLogsFirst={oldestLogsFirst}\n        timeZone={timeZone}\n        loading={loading}\n        changeTime={changeTime}\n      />\n      {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={scrollToTopLogs}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = (theme: GrafanaTheme2, oldestLogsFirst: boolean, loading: boolean) => {\n  return {\n    navContainer: css`\n      max-height: 95vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};\n      position: sticky;\n      top: ${theme.spacing(2)};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport {\n  AbsoluteTimeRange,\n  applyFieldOverrides,\n  compareArrayValues,\n  compareDataFrameStructures,\n  createFieldConfigRegistry,\n  DataFrame,\n  dateTime,\n  FieldColorModeId,\n  FieldConfigSource,\n  getFrameDisplayName,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n} from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { GraphDrawStyle, LegendDisplayMode, TooltipDisplayMode, SortOrder } from '@grafana/schema';\nimport {\n  Icon,\n  PanelContext,\n  PanelContextProvider,\n  SeriesVisibilityChangeMode,\n  useStyles2,\n  useTheme2,\n} from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { defaultGraphConfig, getGraphFieldConfig } from 'app/plugins/panel/timeseries/config';\nimport { TimeSeriesOptions } from 'app/plugins/panel/timeseries/types';\nimport { identity } from 'lodash';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { usePrevious } from 'react-use';\nimport { seriesVisibilityConfigFactory } from '../dashboard/dashgrid/SeriesVisibilityConfigFactory';\nimport { applyGraphStyle } from './exploreGraphStyleUtils';\nimport { ExploreGraphStyle } from '../../types';\n\nconst MAX_NUMBER_OF_TIME_SERIES = 20;\n\ninterface Props {\n  data: DataFrame[];\n  height: number;\n  width: number;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  loadingState: LoadingState;\n  annotations?: DataFrame[];\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n  tooltipDisplayMode?: TooltipDisplayMode;\n  splitOpenFn?: SplitOpen;\n  onChangeTime: (timeRange: AbsoluteTimeRange) => void;\n  graphStyle: ExploreGraphStyle;\n}\n\nexport function ExploreGraph({\n  data,\n  height,\n  width,\n  timeZone,\n  absoluteRange,\n  onChangeTime,\n  loadingState,\n  annotations,\n  onHiddenSeriesChanged,\n  splitOpenFn,\n  graphStyle,\n  tooltipDisplayMode = TooltipDisplayMode.Single,\n}: Props) {\n  const theme = useTheme2();\n  const [showAllTimeSeries, setShowAllTimeSeries] = useState(false);\n  const [baseStructureRev, setBaseStructureRev] = useState(1);\n\n  const previousData = usePrevious(data);\n  const structureChangesRef = useRef(0);\n\n  if (data && previousData && !compareArrayValues(previousData, data, compareDataFrameStructures)) {\n    structureChangesRef.current++;\n  }\n\n  const structureRev = baseStructureRev + structureChangesRef.current;\n\n  const [fieldConfig, setFieldConfig] = useState<FieldConfigSource>({\n    defaults: {\n      color: {\n        mode: FieldColorModeId.PaletteClassic,\n      },\n      custom: {\n        drawStyle: GraphDrawStyle.Line,\n        fillOpacity: 0,\n        pointSize: 5,\n      },\n    },\n    overrides: [],\n  });\n\n  const style = useStyles2(getStyles);\n  const timeRange = {\n    from: dateTime(absoluteRange.from),\n    to: dateTime(absoluteRange.to),\n    raw: {\n      from: dateTime(absoluteRange.from),\n      to: dateTime(absoluteRange.to),\n    },\n  };\n\n  const dataWithConfig = useMemo(() => {\n    const registry = createFieldConfigRegistry(getGraphFieldConfig(defaultGraphConfig), 'Explore');\n    const styledFieldConfig = applyGraphStyle(fieldConfig, graphStyle);\n    return applyFieldOverrides({\n      fieldConfig: styledFieldConfig,\n      data,\n      timeZone,\n      replaceVariables: (value) => value, // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n      theme,\n      fieldConfigRegistry: registry,\n    });\n  }, [fieldConfig, graphStyle, data, timeZone, theme]);\n\n  useEffect(() => {\n    if (onHiddenSeriesChanged) {\n      const hiddenFrames: string[] = [];\n      dataWithConfig.forEach((frame) => {\n        const allFieldsHidden = frame.fields.map((field) => field.config?.custom?.hideFrom?.viz).every(identity);\n        if (allFieldsHidden) {\n          hiddenFrames.push(getFrameDisplayName(frame));\n        }\n      });\n      onHiddenSeriesChanged(hiddenFrames);\n    }\n  }, [dataWithConfig, onHiddenSeriesChanged]);\n\n  const seriesToShow = showAllTimeSeries ? dataWithConfig : dataWithConfig.slice(0, MAX_NUMBER_OF_TIME_SERIES);\n\n  const panelContext: PanelContext = {\n    eventBus: appEvents,\n    onSplitOpen: splitOpenFn,\n    onToggleSeriesVisibility(label: string, mode: SeriesVisibilityChangeMode) {\n      setBaseStructureRev((r) => r + 1);\n      setFieldConfig(seriesVisibilityConfigFactory(label, mode, fieldConfig, data));\n    },\n  };\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      {dataWithConfig.length > MAX_NUMBER_OF_TIME_SERIES && !showAllTimeSeries && (\n        <div className={cx([style.timeSeriesDisclaimer])}>\n          <Icon className={style.disclaimerIcon} name=\"exclamation-triangle\" />\n          {`Showing only ${MAX_NUMBER_OF_TIME_SERIES} time series. `}\n          <span\n            className={cx([style.showAllTimeSeries])}\n            onClick={() => {\n              structureChangesRef.current++;\n              setShowAllTimeSeries(true);\n            }}\n          >{`Show all ${dataWithConfig.length}`}</span>\n        </div>\n      )}\n      <PanelRenderer\n        data={{ series: seriesToShow, timeRange, structureRev, state: loadingState, annotations }}\n        pluginId=\"timeseries\"\n        title=\"\"\n        width={width}\n        height={height}\n        onChangeTimeRange={onChangeTime}\n        timeZone={timeZone}\n        options={\n          {\n            tooltip: { mode: tooltipDisplayMode, sort: SortOrder.None },\n            legend: { displayMode: LegendDisplayMode.List, placement: 'bottom', calcs: [] },\n          } as TimeSeriesOptions\n        }\n      />\n    </PanelContextProvider>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  timeSeriesDisclaimer: css`\n    label: time-series-disclaimer;\n    width: 300px;\n    margin: ${theme.spacing(1)} auto;\n    padding: 10px 0;\n    border-radius: ${theme.spacing(2)};\n    text-align: center;\n    background-color: ${theme.colors.background.primary};\n  `,\n  disclaimerIcon: css`\n    label: disclaimer-icon;\n    color: ${theme.colors.warning.main};\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  showAllTimeSeries: css`\n    label: show-all-time-series;\n    cursor: pointer;\n    color: ${theme.colors.text.link};\n  `,\n});\n","import produce from 'immer';\nimport { FieldConfigSource } from '@grafana/data';\nimport { GraphDrawStyle, GraphFieldConfig, StackingMode } from '@grafana/schema';\nimport { ExploreGraphStyle } from '../../types';\n\nexport type FieldConfig = FieldConfigSource<GraphFieldConfig>;\n\nexport function applyGraphStyle(config: FieldConfig, style: ExploreGraphStyle): FieldConfig {\n  return produce(config, (draft) => {\n    if (draft.defaults.custom === undefined) {\n      draft.defaults.custom = {};\n    }\n\n    const { custom } = draft.defaults;\n\n    if (custom.stacking === undefined) {\n      custom.stacking = { group: 'A' };\n    }\n\n    switch (style) {\n      case 'lines':\n        custom.drawStyle = GraphDrawStyle.Line;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 0;\n        break;\n      case 'bars':\n        custom.drawStyle = GraphDrawStyle.Bars;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 100;\n        break;\n      case 'points':\n        custom.drawStyle = GraphDrawStyle.Points;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 0;\n        break;\n      case 'stacked_lines':\n        custom.drawStyle = GraphDrawStyle.Line;\n        custom.stacking.mode = StackingMode.Normal;\n        custom.fillOpacity = 100;\n        break;\n      case 'stacked_bars':\n        custom.drawStyle = GraphDrawStyle.Bars;\n        custom.stacking.mode = StackingMode.Normal;\n        custom.fillOpacity = 100;\n        break;\n      default: {\n        // should never happen\n        // NOTE: casting to `never` will cause typescript\n        // to verify that the switch statement checks every possible\n        // enum-value\n        const invalidValue: never = style;\n        throw new Error(`Invalid graph-style: ${invalidValue}`);\n      }\n    }\n  });\n}\n","import React, { PureComponent, createRef } from 'react';\nimport { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { TooltipDisplayMode } from '@grafana/schema';\nimport {\n  rangeUtil,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogsDedupStrategy,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsMetaItem,\n  LogsSortOrder,\n  LinkModel,\n  Field,\n  DataQuery,\n  DataFrame,\n  GrafanaTheme2,\n  LoadingState,\n} from '@grafana/data';\nimport {\n  RadioButtonGroup,\n  LogRows,\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  withTheme2,\n  Themeable2,\n} from '@grafana/ui';\nimport store from 'app/core/store';\nimport { dedupLogRows, filterLogLevels } from 'app/core/logs_model';\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { RowContextOptions } from '@grafana/ui/src/components/Logs/LogRowContextProvider';\nimport { ExploreGraph } from './ExploreGraph';\n\nconst SETTINGS_KEYS = {\n  showLabels: 'grafana.explore.logs.showLabels',\n  showTime: 'grafana.explore.logs.showTime',\n  wrapLogMessage: 'grafana.explore.logs.wrapLogMessage',\n  prettifyLogMessage: 'grafana.explore.logs.prettifyLogMessage',\n  logsSortOrder: 'grafana.explore.logs.sortOrder',\n};\n\ninterface Props extends Themeable2 {\n  width: number;\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme2;\n  loading: boolean;\n  loadingState: LoadingState;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, options?: RowContextOptions) => Promise<any>;\n  getFieldLinks: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n}\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  dedupStrategy: LogsDedupStrategy;\n  hiddenLogLevels: LogLevel[];\n  logsSortOrder: LogsSortOrder | null;\n  isFlipping: boolean;\n  showDetectedFields: string[];\n  forceEscape: boolean;\n}\n\nclass UnthemedLogs extends PureComponent<Props, State> {\n  flipOrderTimer?: number;\n  cancelFlippingTimer?: number;\n  topLogsRef = createRef<HTMLDivElement>();\n\n  state: State = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n    prettifyLogMessage: store.getBool(SETTINGS_KEYS.prettifyLogMessage, false),\n    dedupStrategy: LogsDedupStrategy.none,\n    hiddenLogLevels: [],\n    logsSortOrder: store.get(SETTINGS_KEYS.logsSortOrder) || LogsSortOrder.Descending,\n    isFlipping: false,\n    showDetectedFields: [],\n    forceEscape: false,\n  };\n\n  componentWillUnmount() {\n    if (this.flipOrderTimer) {\n      window.clearTimeout(this.flipOrderTimer);\n    }\n\n    if (this.cancelFlippingTimer) {\n      window.clearTimeout(this.cancelFlippingTimer);\n    }\n  }\n\n  onChangeLogsSortOrder = () => {\n    this.setState({ isFlipping: true });\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    this.flipOrderTimer = window.setTimeout(() => {\n      this.setState((prevState) => {\n        const newSortOrder =\n          prevState.logsSortOrder === LogsSortOrder.Descending ? LogsSortOrder.Ascending : LogsSortOrder.Descending;\n        store.set(SETTINGS_KEYS.logsSortOrder, newSortOrder);\n        return { logsSortOrder: newSortOrder };\n      });\n    }, 0);\n    this.cancelFlippingTimer = window.setTimeout(() => this.setState({ isFlipping: false }), 1000);\n  };\n\n  onEscapeNewlines = () => {\n    this.setState((prevState) => ({\n      forceEscape: !prevState.forceEscape,\n    }));\n  };\n\n  onChangeDedup = (dedupStrategy: LogsDedupStrategy) => {\n    this.setState({ dedupStrategy });\n  };\n\n  onChangeLabels = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangewrapLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onChangePrettifyLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const prettifyLogMessage = target.checked;\n      this.setState({\n        prettifyLogMessage,\n      });\n      store.set(SETTINGS_KEYS.prettifyLogMessage, prettifyLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => LogLevel[level as LogLevel]);\n    this.setState({ hiddenLogLevels });\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  showDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n\n    if (index === -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.concat(key),\n        };\n      });\n    }\n  };\n\n  hideDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n    if (index > -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.filter((k) => key !== k),\n        };\n      });\n    }\n  };\n\n  clearDetectedFields = () => {\n    this.setState((state) => {\n      return {\n        showDetectedFields: [],\n      };\n    });\n  };\n\n  checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n    return !!logRows.some((r) => r.hasUnescapedContent);\n  });\n\n  dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n    const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n    const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n    return { dedupedRows, dedupCount };\n  });\n\n  filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n    return filterLogLevels(logRows, new Set(hiddenLogLevels));\n  });\n\n  scrollToTopLogs = () => this.topLogsRef.current?.scrollIntoView();\n\n  render() {\n    const {\n      width,\n      logRows,\n      logsMeta,\n      logsSeries,\n      visibleRange,\n      loading = false,\n      loadingState,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      showContextToggle,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n      theme,\n      logsQueries,\n      clearCache,\n      addResultsToCache,\n    } = this.props;\n\n    const {\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      prettifyLogMessage,\n      dedupStrategy,\n      hiddenLogLevels,\n      logsSortOrder,\n      isFlipping,\n      showDetectedFields,\n      forceEscape,\n    } = this.state;\n\n    const styles = getStyles(theme, wrapLogMessage);\n    const hasData = logRows && logRows.length > 0;\n    const hasUnescapedContent = this.checkUnescapedContent(logRows);\n\n    const filteredLogs = this.filterRows(logRows, hiddenLogLevels);\n    const { dedupedRows, dedupCount } = this.dedupRows(filteredLogs, dedupStrategy);\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n    return (\n      <>\n        {logsSeries && logsSeries.length ? (\n          <>\n            <div className={styles.infoText}>\n              This datasource does not support full-range histograms. The graph is based on the logs seen in the\n              response.\n            </div>\n            <ExploreGraph\n              graphStyle=\"lines\"\n              data={logsSeries}\n              height={150}\n              width={width}\n              tooltipDisplayMode={TooltipDisplayMode.Multi}\n              absoluteRange={visibleRange || absoluteRange}\n              timeZone={timeZone}\n              loadingState={loadingState}\n              onChangeTime={onChangeTime}\n              onHiddenSeriesChanged={this.onToggleLogLevel}\n            />\n          </>\n        ) : undefined}\n        <div className={styles.logOptions} ref={this.topLogsRef}>\n          <InlineFieldRow>\n            <InlineField label=\"Time\" className={styles.horizontalInlineLabel} transparent>\n              <InlineSwitch\n                value={showTime}\n                onChange={this.onChangeTime}\n                className={styles.horizontalInlineSwitch}\n                transparent\n                id=\"show-time\"\n              />\n            </InlineField>\n            <InlineField label=\"Unique labels\" className={styles.horizontalInlineLabel} transparent>\n              <InlineSwitch\n                value={showLabels}\n                onChange={this.onChangeLabels}\n                className={styles.horizontalInlineSwitch}\n                transparent\n                id=\"unique-labels\"\n              />\n            </InlineField>\n            <InlineField label=\"Wrap lines\" className={styles.horizontalInlineLabel} transparent>\n              <InlineSwitch\n                value={wrapLogMessage}\n                onChange={this.onChangewrapLogMessage}\n                className={styles.horizontalInlineSwitch}\n                transparent\n                id=\"wrap-lines\"\n              />\n            </InlineField>\n            <InlineField label=\"Prettify JSON\" className={styles.horizontalInlineLabel} transparent>\n              <InlineSwitch\n                value={prettifyLogMessage}\n                onChange={this.onChangePrettifyLogMessage}\n                className={styles.horizontalInlineSwitch}\n                transparent\n                id=\"prettify\"\n              />\n            </InlineField>\n            <InlineField label=\"Dedup\" className={styles.horizontalInlineLabel} transparent>\n              <RadioButtonGroup\n                options={Object.values(LogsDedupStrategy).map((dedupType) => ({\n                  label: capitalize(dedupType),\n                  value: dedupType,\n                  description: LogsDedupDescription[dedupType],\n                }))}\n                value={dedupStrategy}\n                onChange={this.onChangeDedup}\n                className={styles.radioButtons}\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <div>\n            <InlineField label=\"Display results\" className={styles.horizontalInlineLabel} transparent>\n              <RadioButtonGroup\n                disabled={isFlipping}\n                options={[\n                  {\n                    label: 'Newest first',\n                    value: LogsSortOrder.Descending,\n                    description: 'Show results newest to oldest',\n                  },\n                  {\n                    label: 'Oldest first',\n                    value: LogsSortOrder.Ascending,\n                    description: 'Show results oldest to newest',\n                  },\n                ]}\n                value={logsSortOrder}\n                onChange={this.onChangeLogsSortOrder}\n                className={styles.radioButtons}\n              />\n            </InlineField>\n          </div>\n        </div>\n        <LogsMetaRow\n          logRows={logRows}\n          meta={logsMeta || []}\n          dedupStrategy={dedupStrategy}\n          dedupCount={dedupCount}\n          hasUnescapedContent={hasUnescapedContent}\n          forceEscape={forceEscape}\n          showDetectedFields={showDetectedFields}\n          onEscapeNewlines={this.onEscapeNewlines}\n          clearDetectedFields={this.clearDetectedFields}\n        />\n        <div className={styles.logsSection}>\n          <div className={styles.logRows} data-testid=\"logRows\">\n            <LogRows\n              logRows={logRows}\n              deduplicatedRows={dedupedRows}\n              dedupStrategy={dedupStrategy}\n              getRowContext={this.props.getRowContext}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              showContextToggle={showContextToggle}\n              showLabels={showLabels}\n              showTime={showTime}\n              enableLogDetails={true}\n              forceEscape={forceEscape}\n              wrapLogMessage={wrapLogMessage}\n              prettifyLogMessage={prettifyLogMessage}\n              timeZone={timeZone}\n              getFieldLinks={getFieldLinks}\n              logsSortOrder={logsSortOrder}\n              showDetectedFields={showDetectedFields}\n              onClickShowDetectedField={this.showDetectedField}\n              onClickHideDetectedField={this.hideDetectedField}\n            />\n          </div>\n          <LogsNavigation\n            logsSortOrder={logsSortOrder}\n            visibleRange={visibleRange ?? absoluteRange}\n            absoluteRange={absoluteRange}\n            timeZone={timeZone}\n            onChangeTime={onChangeTime}\n            loading={loading}\n            queries={logsQueries ?? []}\n            scrollToTopLogs={this.scrollToTopLogs}\n            addResultsToCache={addResultsToCache}\n            clearCache={clearCache}\n          />\n        </div>\n        {!loading && !hasData && !scanning && (\n          <div className={styles.noData}>\n            No logs found.\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickScan}>\n              Scan for older logs\n            </Button>\n          </div>\n        )}\n\n        {scanning && (\n          <div className={styles.noData}>\n            <span>{scanText}</span>\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickStopScan}>\n              Stop scan\n            </Button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const Logs = withTheme2(UnthemedLogs);\n\nconst getStyles = (theme: GrafanaTheme2, wrapLogMessage: boolean) => {\n  return {\n    noData: css`\n      > * {\n        margin-left: 0.5em;\n      }\n    `,\n    logOptions: css`\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n      flex-wrap: wrap;\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1, 2)};\n      border-radius: ${theme.shape.borderRadius()};\n      margin: ${theme.spacing(2, 0, 1)};\n      border: 1px solid ${theme.colors.border.medium};\n    `,\n    headerButton: css`\n      margin: ${theme.spacing(0.5, 0, 0, 1)};\n    `,\n    horizontalInlineLabel: css`\n      > label {\n        margin-right: 0;\n      }\n    `,\n    horizontalInlineSwitch: css`\n      padding: 0 ${theme.spacing(1)} 0 0;\n    `,\n    radioButtons: css`\n      margin: 0;\n    `,\n    logsSection: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    `,\n    logRows: css`\n      overflow-x: ${wrapLogMessage ? 'unset' : 'scroll'};\n      overflow-y: visible;\n      width: 100%;\n    `,\n    infoText: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n","import React from 'react';\nimport memoizeOne from 'memoize-one';\nimport { css } from '@emotion/css';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RefreshPicker } from '@grafana/ui';\n\nimport { changeRefreshInterval } from './state/time';\nimport { setPausedStateAction, runQueries } from './state/query';\nimport { ExploreId } from '../../types';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: ExploreId) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.offOption.value));\n    dispatch(runQueries(exploreId));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.liveOption.value));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n  };\n}\n\ntype Props = {\n  exploreId: ExploreId;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { css } from '@emotion/css';\nimport { Collapse } from '@grafana/ui';\nimport {\n  AbsoluteTimeRange,\n  Field,\n  hasLogsContextSupport,\n  LoadingState,\n  LogRowModel,\n  RawTimeRange,\n} from '@grafana/data';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { splitOpen } from './state/main';\nimport { addResultsToCache, clearCache } from './state/query';\nimport { updateTimeRange } from './state/time';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  width: number;\n  exploreId: ExploreId;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  loadingState: LoadingState;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n}\n\nclass LogsContainer extends PureComponent<LogsContainerProps> {\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  getLogRowContext = async (row: LogRowModel, options?: any): Promise<any> => {\n    const { datasourceInstance } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      return datasourceInstance.getLogRowContext(row, options);\n    }\n\n    return [];\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    const { datasourceInstance } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      return datasourceInstance.showContextToggle(row);\n    }\n\n    return false;\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number) => {\n    const { splitOpen: splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range });\n  };\n\n  render() {\n    const {\n      loading,\n      loadingState,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      width,\n      isLive,\n      exploreId,\n      addResultsToCache,\n      clearCache,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    // We need to override css overflow of divs in Collapse element to enable sticky Logs navigation\n    const styleOverridesForStickyNavigation = css`\n      & > div {\n        overflow: visible;\n        & > div {\n          overflow: visible;\n        }\n      }\n    `;\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Collapse label=\"Logs\" loading={loading} isOpen className={styleOverridesForStickyNavigation}>\n            <Logs\n              logRows={logRows}\n              logsMeta={logsMeta}\n              logsSeries={logsSeries}\n              logsQueries={logsQueries}\n              width={width}\n              loading={loading}\n              loadingState={loadingState}\n              onChangeTime={this.onChangeTime}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              onStartScanning={onStartScanning}\n              onStopScanning={onStopScanning}\n              absoluteRange={absoluteRange}\n              visibleRange={visibleRange}\n              timeZone={timeZone}\n              scanning={scanning}\n              scanRange={range.raw}\n              showContextToggle={this.showContextToggle}\n              getRowContext={this.getLogRowContext}\n              getFieldLinks={this.getFieldLinks}\n              addResultsToCache={() => addResultsToCache(exploreId)}\n              clearCache={() => clearCache(exploreId)}\n            />\n          </Collapse>\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const {\n    logsResult,\n    loading,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    logsVolumeDataProvider,\n    logsVolumeData,\n  } = item;\n  const timeZone = getTimeZone(state.user);\n\n  return {\n    loading,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    logsVolumeDataProvider,\n    logsVolumeData,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  splitOpen,\n  addResultsToCache,\n  clearCache,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(LogsContainer);\n","import React, { useCallback, useMemo } from 'react';\nimport { ExploreId } from 'app/types/explore';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { runQueries, changeQueriesAction } from './state/query';\nimport { CoreApp, DataQuery } from '@grafana/data';\nimport { getNextRefIdChar } from 'app/core/utils/query';\nimport { QueryEditorRows } from '../query/components/QueryEditorRows';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { getExploreItemSelector } from './state/selectors';\n\ninterface Props {\n  exploreId: ExploreId;\n}\n\nconst makeSelectors = (exploreId: ExploreId) => {\n  const exploreItemSelector = getExploreItemSelector(exploreId);\n  return {\n    getQueries: createSelector(exploreItemSelector, (s) => s!.queries),\n    getQueryResponse: createSelector(exploreItemSelector, (s) => s!.queryResponse),\n    getHistory: createSelector(exploreItemSelector, (s) => s!.history),\n    getEventBridge: createSelector(exploreItemSelector, (s) => s!.eventBridge),\n    getDatasourceInstanceSettings: createSelector(\n      exploreItemSelector,\n      (s) => getDatasourceSrv().getInstanceSettings(s!.datasourceInstance?.uid)!\n    ),\n  };\n};\n\nexport const QueryRows = ({ exploreId }: Props) => {\n  const dispatch = useDispatch();\n  const { getQueries, getDatasourceInstanceSettings, getQueryResponse, getHistory, getEventBridge } = useMemo(\n    () => makeSelectors(exploreId),\n    [exploreId]\n  );\n\n  const queries = useSelector(getQueries)!;\n  const dsSettings = useSelector(getDatasourceInstanceSettings)!;\n  const queryResponse = useSelector(getQueryResponse)!;\n  const history = useSelector(getHistory);\n  const eventBridge = useSelector(getEventBridge);\n\n  const onRunQueries = useCallback(() => {\n    dispatch(runQueries(exploreId));\n  }, [dispatch, exploreId]);\n\n  const onChange = useCallback(\n    (newQueries: DataQuery[]) => {\n      dispatch(changeQueriesAction({ queries: newQueries, exploreId }));\n\n      // if we are removing a query we want to run the remaining ones\n      if (newQueries.length < queries.length) {\n        onRunQueries();\n      }\n    },\n    [dispatch, exploreId, onRunQueries, queries]\n  );\n\n  const onAddQuery = useCallback(\n    (query: DataQuery) => {\n      onChange([...queries, { ...query, refId: getNextRefIdChar(queries) }]);\n    },\n    [onChange, queries]\n  );\n\n  return (\n    <QueryEditorRows\n      dsSettings={dsSettings}\n      queries={queries}\n      onQueriesChange={onChange}\n      onAddQuery={onAddQuery}\n      onRunQueries={onRunQueries}\n      data={queryResponse}\n      app={CoreApp.Explore}\n      history={history}\n      eventBus={eventBridge}\n    />\n  );\n};\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ValueLinkConfig, applyFieldOverrides, TimeZone } from '@grafana/data';\nimport { Collapse, Table } from '@grafana/ui';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { splitOpen } from './state/main';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { MetaInfoText } from './MetaInfoText';\nimport { FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface TableContainerProps {\n  ariaLabel?: string;\n  exploreId: ExploreId;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: FilterItem) => void;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: TableContainerProps) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { loading: loadingInState, tableResult, range } = item;\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst mapDispatchToProps = {\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = TableContainerProps & ConnectedProps<typeof connector>;\n\nexport class TableContainer extends PureComponent<Props> {\n  getTableHeight() {\n    const { tableResult } = this.props;\n\n    if (!tableResult || tableResult.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, tableResult.length * 35) + 35);\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpen, range, ariaLabel, timeZone } = this.props;\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n\n    let dataFrame = tableResult;\n\n    if (dataFrame?.length) {\n      dataFrame = applyFieldOverrides({\n        data: [dataFrame],\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: (v: string) => v,\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n      })[0];\n      // Bit of code smell here. We need to add links here to the frame modifying the frame on every render.\n      // Should work fine in essence but still not the ideal way to pass props. In logs container we do this\n      // differently and sidestep this getLinks API on a dataframe\n      for (const field of dataFrame.fields) {\n        field.getLinks = (config: ValueLinkConfig) => {\n          return getFieldLinksForExplore({\n            field,\n            rowIndex: config.valueRowIndex!,\n            splitOpenFn: splitOpen,\n            range,\n            dataFrame: dataFrame!,\n          });\n        };\n      }\n    }\n\n    return (\n      <Collapse label=\"Table\" loading={loading} isOpen>\n        {dataFrame?.length ? (\n          <Table\n            ariaLabel={ariaLabel}\n            data={dataFrame}\n            width={tableWidth}\n            height={height}\n            onCellFilterAdded={onCellFilterAdded}\n          />\n        ) : (\n          <MetaInfoText metaItems={[{ value: '0 series returned' }]} />\n        )}\n      </Collapse>\n    );\n  }\n}\n\nexport default connector(TableContainer);\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { stylesFactory, useTheme, Select, Button, Switch, Field } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport appEvents from 'app/core/app_events';\nimport { ShowConfirmModalEvent } from '../../../types/events';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { MAX_HISTORY_ITEMS } from 'app/core/history/RichHistoryLocalStorage';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: SelectableValue<number>) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    container: css`\n      font-size: ${theme.typography.size.sm};\n      .space-between {\n        margin-bottom: ${theme.spacing.lg};\n      }\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    switch: css`\n      display: flex;\n      align-items: center;\n    `,\n    label: css`\n      margin-left: ${theme.spacing.md};\n    `,\n  };\n});\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettings(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your query history?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <Field\n        label=\"History time span\"\n        description={`Select the period of time for which Grafana will save your query history. Up to ${MAX_HISTORY_ITEMS} entries will be stored.`}\n        className=\"space-between\"\n      >\n        <div className={styles.input}>\n          <Select\n            menuShouldPortal\n            value={selectedOption}\n            options={retentionPeriodOptions}\n            onChange={onChangeRetentionPeriod}\n          ></Select>\n        </div>\n      </Field>\n      <Field label=\"Default active tab\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Switch value={starredTabAsFirstTab} onChange={toggleStarredTabAsFirstTab}></Switch>\n          <div className={styles.label}>Change the default active tab from “Query history” to “Starred”</div>\n        </div>\n      </Field>\n      <Field label=\"Data source behaviour\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Switch value={activeDatasourceOnly} onChange={toggleactiveDatasourceOnly}></Switch>\n          <div className={styles.label}>Only show queries for data source currently active in Explore</div>\n        </div>\n      </Field>\n      <div\n        className={css`\n          font-weight: ${theme.typography.weight.bold};\n        `}\n      >\n        Clear query history\n      </div>\n      <div\n        className={css`\n          margin-bottom: ${theme.spacing.sm};\n        `}\n      >\n        Delete all of your query history, permanently.\n      </div>\n      <Button variant=\"destructive\" onClick={onDelete}>\n        Clear query history\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { css, cx } from '@emotion/css';\nimport { stylesFactory, useTheme, TextArea, Button, IconButton } from '@grafana/ui';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { GrafanaTheme, DataSourceApi, DataQuery } from '@grafana/data';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport appEvents from 'app/core/app_events';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { StoreState } from 'app/types';\n\nimport { starHistoryItem, commentHistoryItem, deleteHistoryItem } from '../state/history';\nimport { changeDatasource } from '../state/datasource';\nimport { setQueries } from '../state/query';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  deleteHistoryItem,\n  commentHistoryItem,\n  starHistoryItem,\n  setQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps<T extends DataQuery = DataQuery> {\n  query: RichHistoryQuery<T>;\n  dsImg: string;\n  isRemoved: boolean;\n}\n\nexport type Props<T extends DataQuery = DataQuery> = ConnectedProps<typeof connector> & OwnProps<T>;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, isRemoved: boolean) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rigtColumnWidth = '240px';\n  const rigtColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.bg2;\n\n  return {\n    queryCard: css`\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border1};\n      margin: ${theme.spacing.sm} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.border.radius.sm};\n      .starred {\n        color: ${theme.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing.sm};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border1};\n        padding: ${theme.spacing.xs} ${theme.spacing.sm};\n      }\n      img {\n        height: ${theme.typography.size.base};\n        max-width: ${theme.typography.size.base};\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    datasourceContainer: css`\n      display: flex;\n      align-items: center;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.semibold};\n    `,\n    queryActionButtons: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing.sm};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.weight.semibold};\n      width: calc(100% - ${rigtColumnWidth});\n    `,\n    queryRow: css`\n      border-top: 1px solid ${theme.colors.border1};\n      word-break: break-all;\n      padding: 4px 2px;\n      :first-child {\n        border-top: none;\n        padding: 0 0 4px 0;\n      }\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rigtColumnWidth});\n      margin-top: ${theme.spacing.sm};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-top: ${theme.spacing.xs};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing.xs} ${theme.spacing.md};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n  };\n});\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    query,\n    dsImg,\n    isRemoved,\n    commentHistoryItem,\n    starHistoryItem,\n    deleteHistoryItem,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n  const [queryDsInstance, setQueryDsInstance] = useState<DataSourceApi | undefined>(undefined);\n\n  useEffect(() => {\n    const getQueryDsInstance = async () => {\n      const ds = await getDataSourceSrv().get(query.datasourceName);\n      setQueryDsInstance(ds);\n    };\n\n    getQueryDsInstance();\n  }, [query.datasourceName]);\n\n  const theme = useTheme();\n  const styles = getStyles(theme, isRemoved);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    if (query.datasourceName !== datasourceInstance?.name) {\n      await changeDatasource(exploreId, query.datasourceName, { importQueries: true });\n      setQueries(exploreId, queriesToRun);\n    } else {\n      setQueries(exploreId, queriesToRun);\n    }\n  };\n\n  const onCopyQuery = () => {\n    const queriesToCopy = query.queries.map((q) => createQueryText(q, queryDsInstance)).join('\\n');\n    copyStringToClipboard(queriesToCopy);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (query.starred) {\n      appEvents.publish(\n        new ShowConfirmModalEvent({\n          title: 'Delete',\n          text: 'Are you sure you want to permanently delete your starred query?',\n          yesText: 'Delete',\n          icon: 'trash-alt',\n          onConfirm: () => {\n            deleteHistoryItem(query.id);\n            dispatch(notifyApp(createSuccessNotification('Query deleted')));\n          },\n        })\n      );\n    } else {\n      deleteHistoryItem(query.id);\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n    }\n  };\n\n  const onStarrQuery = () => {\n    starHistoryItem(query.id, !query.starred);\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    commentHistoryItem(query.id, comment);\n    setActiveUpdateComment(false);\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer} aria-label={comment ? 'Update comment form' : 'Add comment form'}>\n      <TextArea\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment} aria-label=\"Submit button\">\n          Save comment\n        </Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        title={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      />\n      <IconButton name=\"copy\" onClick={onCopyQuery} title=\"Copy query to clipboard\" />\n      {!isRemoved && (\n        <IconButton name=\"share-alt\" onClick={onCreateShortLink} title=\"Copy shortened link to clipboard\" />\n      )}\n      <IconButton name=\"trash-alt\" title={'Delete query'} onClick={onDeleteQuery} />\n      <IconButton\n        name={query.starred ? 'favorite' : 'star'}\n        iconType={query.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        title={query.starred ? 'Unstar query' : 'Star query'}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard} onKeyDown={onKeyDown}>\n      <div className={styles.cardRow}>\n        <div className={styles.datasourceContainer}>\n          <img src={dsImg} aria-label=\"Data source icon\" />\n          <div aria-label=\"Data source name\">\n            {isRemoved ? 'Data source does not exist anymore' : query.datasourceName}\n          </div>\n        </div>\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {query.queries.map((q, i) => {\n            const queryText = createQueryText(q, queryDsInstance);\n            return (\n              <div aria-label=\"Query text\" key={`${q}-${i}`} className={styles.queryRow}>\n                {queryText}\n              </div>\n            );\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button variant=\"secondary\" onClick={onRunQuery} disabled={isRemoved}>\n              {datasourceInstance?.name === query.datasourceName ? 'Run query' : 'Switch data source and run query'}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default connector(RichHistoryCard);\n","import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme, RangeSlider, MultiSelect, Select, FilterInput } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\n\nimport {\n  SortOrder,\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  createDatasourcesList,\n  filterAndSortQueries,\n} from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { useDebounce } from 'react-use';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n  retentionPeriod: number;\n  exploreId: ExploreId;\n  height: number;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[]) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, height: number) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n\n  /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n  const cardWidth = '100% - 134px';\n  const sliderHeight = `${height - 180}px`;\n  return {\n    container: css`\n      display: flex;\n      .label-slider {\n        font-size: ${theme.typography.size.sm};\n        &:last-of-type {\n          margin-top: ${theme.spacing.lg};\n        }\n        &:first-of-type {\n          font-weight: ${theme.typography.weight.semibold};\n          margin-bottom: ${theme.spacing.md};\n        }\n      }\n    `,\n    containerContent: css`\n      width: calc(${cardWidth});\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing.sm};\n      .slider {\n        bottom: 10px;\n        height: ${sliderHeight};\n        width: 129px;\n        padding: ${theme.spacing.sm} 0;\n      }\n    `,\n    slider: css`\n      position: fixed;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing.lg};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.heading.h4};\n      margin: ${theme.spacing.md} ${theme.spacing.xxs} ${theme.spacing.sm} ${theme.spacing.xxs};\n    `,\n    footer: css`\n      height: 60px;\n      margin: ${theme.spacing.lg} auto;\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-left: ${theme.spacing.xs};\n    `,\n  };\n});\n\nexport function RichHistoryQueriesTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    retentionPeriod,\n    exploreId,\n    height,\n  } = props;\n\n  const [timeFilter, setTimeFilter] = useState<[number, number]>([0, retentionPeriod]);\n  const [data, setData] = useState<[RichHistoryQuery[], ReturnType<typeof createDatasourcesList>]>([[], []]);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput, setDebouncedSearchInput] = useState('');\n\n  const theme = useTheme();\n  const styles = getStyles(theme, height);\n\n  useDebounce(\n    () => {\n      setDebouncedSearchInput(searchInput);\n    },\n    300,\n    [searchInput]\n  );\n\n  useEffect(() => {\n    const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map((d) => d.datasourceName);\n    const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n\n    setData([\n      filterAndSortQueries(\n        queries,\n        sortOrder,\n        datasourceFilters.map((d) => d.value),\n        debouncedSearchInput,\n        timeFilter\n      ),\n      listOfDatasources,\n    ]);\n  }, [timeFilter, queries, sortOrder, datasourceFilters, debouncedSearchInput]);\n\n  const [filteredQueries, listOfDatasources] = data;\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(filteredQueries, sortOrder);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.slider}>\n          <div className=\"label-slider\">Filter history</div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(timeFilter[0])}</div>\n          <div className=\"slider\">\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={retentionPeriod}\n              value={timeFilter}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={setTimeFilter as () => number[]}\n            />\n          </div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(timeFilter[1])}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <MultiSelect\n                menuShouldPortal\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={searchInput}\n              onChange={(value: string) => {\n                setSearchInput(value);\n              }}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              menuShouldPortal\n              value={sortOrderOptions.filter((order) => order.value === sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e) => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {Object.keys(mappedQueriesToHeadings).map((heading) => {\n          return (\n            <div key={heading}>\n              <div className={styles.heading}>\n                {heading} <span className={styles.queries}>{mappedQueriesToHeadings[heading].length} queries</span>\n              </div>\n              {mappedQueriesToHeadings[heading].map((q: RichHistoryQuery) => {\n                const idx = listOfDatasources.findIndex((d) => d.label === q.datasourceName);\n                return (\n                  <RichHistoryCard\n                    query={q}\n                    key={q.id}\n                    exploreId={exploreId}\n                    dsImg={listOfDatasources[idx].imgUrl}\n                    isRemoved={listOfDatasources[idx].isRemoved}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n        <div className={styles.footer}>The history is local to your browser and is not shared with others.</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme, Select, MultiSelect, FilterInput } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport { filterAndSortQueries, createDatasourcesList, SortOrder } from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { useDebounce } from 'react-use';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n  exploreId: ExploreId;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[]) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n  };\n});\n\nexport function RichHistoryStarredTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    exploreId,\n  } = props;\n\n  const [data, setData] = useState<[RichHistoryQuery[], ReturnType<typeof createDatasourcesList>]>([[], []]);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput, setDebouncedSearchInput] = useState('');\n\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  useDebounce(\n    () => {\n      setDebouncedSearchInput(searchInput);\n    },\n    300,\n    [searchInput]\n  );\n\n  useEffect(() => {\n    const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map((d) => d.datasourceName);\n    const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n    const starredQueries = queries.filter((q) => q.starred === true);\n    setData([\n      filterAndSortQueries(\n        starredQueries,\n        sortOrder,\n        datasourceFilters.map((d) => d.value),\n        debouncedSearchInput\n      ),\n      listOfDatasources,\n    ]);\n  }, [queries, sortOrder, datasourceFilters, debouncedSearchInput]);\n\n  const [filteredQueries, listOfDatasources] = data;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <MultiSelect\n                menuShouldPortal\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for specific data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={searchInput}\n              onChange={(value: string) => {\n                setSearchInput(value);\n              }}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              menuShouldPortal\n              options={sortOrderOptions}\n              value={sortOrderOptions.filter((order) => order.value === sortOrder)}\n              placeholder=\"Sort queries by\"\n              onChange={(e) => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {filteredQueries.map((q) => {\n          const idx = listOfDatasources.findIndex((d) => d.label === q.datasourceName);\n          return (\n            <RichHistoryCard\n              query={q}\n              key={q.id}\n              exploreId={exploreId}\n              dsImg={listOfDatasources[idx].imgUrl}\n              isRemoved={listOfDatasources[idx].isRemoved}\n            />\n          );\n        })}\n        <div className={styles.footer}>The history is local to your browser and is not shared with others.</div>\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\n\n//Services & Utils\nimport { SortOrder } from 'app/core/utils/richHistory';\nimport { RICH_HISTORY_SETTING_KEYS } from 'app/core/history/richHistoryLocalStorageUtils';\nimport store from 'app/core/store';\nimport { Themeable, withTheme, TabbedContainer, TabConfig } from '@grafana/ui';\n\n//Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { SelectableValue } from '@grafana/data';\n\n//Components\nimport { RichHistorySettings } from './RichHistorySettings';\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const sortOrderOptions = [\n  { label: 'Newest first', value: SortOrder.Descending },\n  { label: 'Oldest first', value: SortOrder.Ascending },\n  { label: 'Data source A-Z', value: SortOrder.DatasourceAZ },\n  { label: 'Data source Z-A', value: SortOrder.DatasourceZA },\n];\n\nexport interface RichHistoryProps extends Themeable {\n  richHistory: RichHistoryQuery[];\n  activeDatasourceInstance?: string;\n  firstTab: Tabs;\n  exploreId: ExploreId;\n  height: number;\n  deleteRichHistory: () => void;\n  onClose: () => void;\n}\n\ninterface RichHistoryState {\n  sortOrder: SortOrder;\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n}\n\nclass UnThemedRichHistory extends PureComponent<RichHistoryProps, RichHistoryState> {\n  constructor(props: RichHistoryProps) {\n    super(props);\n    this.state = {\n      sortOrder: SortOrder.Descending,\n      datasourceFilters: store.getObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, []),\n      retentionPeriod: store.getObject(RICH_HISTORY_SETTING_KEYS.retentionPeriod, 7),\n      starredTabAsFirstTab: store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false),\n      activeDatasourceOnly: store.getBool(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, true),\n    };\n  }\n\n  onChangeRetentionPeriod = (retentionPeriod: SelectableValue<number>) => {\n    if (retentionPeriod.value !== undefined) {\n      this.setState({\n        retentionPeriod: retentionPeriod.value,\n      });\n      store.set(RICH_HISTORY_SETTING_KEYS.retentionPeriod, retentionPeriod.value);\n    }\n  };\n\n  toggleStarredTabAsFirstTab = () => {\n    const starredTabAsFirstTab = !this.state.starredTabAsFirstTab;\n    this.setState({\n      starredTabAsFirstTab,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, starredTabAsFirstTab);\n  };\n\n  toggleActiveDatasourceOnly = () => {\n    const activeDatasourceOnly = !this.state.activeDatasourceOnly;\n    this.setState({\n      activeDatasourceOnly,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, activeDatasourceOnly);\n  };\n\n  onSelectDatasourceFilters = (value: SelectableValue[]) => {\n    try {\n      store.setObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, value);\n    } catch (error) {\n      console.error(error);\n    }\n    /* Set data source filters to state even though they were not successfully saved in\n     * localStorage to allow interaction and filtering.\n     **/\n    this.setState({ datasourceFilters: value });\n  };\n\n  onChangeSortOrder = (sortOrder: SortOrder) => this.setState({ sortOrder });\n\n  /* If user selects activeDatasourceOnly === true, set datasource filter to currently active datasource.\n   * Filtering based on datasource won't be available. Otherwise set to null, as filtering will be\n   * available for user.\n   */\n  updateFilters() {\n    this.state.activeDatasourceOnly && this.props.activeDatasourceInstance\n      ? this.onSelectDatasourceFilters([\n          { label: this.props.activeDatasourceInstance, value: this.props.activeDatasourceInstance },\n        ])\n      : this.onSelectDatasourceFilters(this.state.datasourceFilters);\n  }\n\n  componentDidMount() {\n    this.updateFilters();\n  }\n\n  componentDidUpdate(prevProps: RichHistoryProps, prevState: RichHistoryState) {\n    if (\n      this.props.activeDatasourceInstance !== prevProps.activeDatasourceInstance ||\n      this.state.activeDatasourceOnly !== prevState.activeDatasourceOnly\n    ) {\n      this.updateFilters();\n    }\n  }\n\n  render() {\n    const { datasourceFilters, sortOrder, activeDatasourceOnly, retentionPeriod } = this.state;\n    const { richHistory, height, exploreId, deleteRichHistory, onClose, firstTab } = this.props;\n\n    const QueriesTab: TabConfig = {\n      label: 'Query history',\n      value: Tabs.RichHistory,\n      content: (\n        <RichHistoryQueriesTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          retentionPeriod={retentionPeriod}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n          height={height}\n        />\n      ),\n      icon: 'history',\n    };\n\n    const StarredTab: TabConfig = {\n      label: 'Starred',\n      value: Tabs.Starred,\n      content: (\n        <RichHistoryStarredTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n        />\n      ),\n      icon: 'star',\n    };\n\n    const SettingsTab: TabConfig = {\n      label: 'Settings',\n      value: Tabs.Settings,\n      content: (\n        <RichHistorySettings\n          retentionPeriod={this.state.retentionPeriod}\n          starredTabAsFirstTab={this.state.starredTabAsFirstTab}\n          activeDatasourceOnly={this.state.activeDatasourceOnly}\n          onChangeRetentionPeriod={this.onChangeRetentionPeriod}\n          toggleStarredTabAsFirstTab={this.toggleStarredTabAsFirstTab}\n          toggleactiveDatasourceOnly={this.toggleActiveDatasourceOnly}\n          deleteRichHistory={deleteRichHistory}\n        />\n      ),\n      icon: 'sliders-v-alt',\n    };\n\n    let tabs = [QueriesTab, StarredTab, SettingsTab];\n    return (\n      <TabbedContainer tabs={tabs} onClose={onClose} defaultTab={firstTab} closeIconTooltip=\"Close query history\" />\n    );\n  }\n}\n\nexport const RichHistory = withTheme(UnThemedRichHistory);\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar styles = {\n    top: {\n        width: '100%',\n        height: '10px',\n        top: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    right: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        right: '-5px',\n        cursor: 'col-resize',\n    },\n    bottom: {\n        width: '100%',\n        height: '10px',\n        bottom: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    left: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        left: '-5px',\n        cursor: 'col-resize',\n    },\n    topRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        top: '-10px',\n        cursor: 'ne-resize',\n    },\n    bottomRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        bottom: '-10px',\n        cursor: 'se-resize',\n    },\n    bottomLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        bottom: '-10px',\n        cursor: 'sw-resize',\n    },\n    topLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        top: '-10px',\n        cursor: 'nw-resize',\n    },\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexport { Resizer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Resizer } from './resizer';\nimport memoize from 'fast-memoize';\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = memoize(function (n, min, max) { return Math.max(Math.min(n, max), min); });\nvar snap = memoize(function (n, size) { return Math.round(n / size) * size; });\nvar hasDirection = memoize(function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n});\n// INFO: In case of window is a Proxy and does not porxy Events correctly, use isTouchEvent & isMouseEvent to distinguish event type instead of `instanceof`.\nvar isTouchEvent = function (event) {\n    return Boolean(event.touches && event.touches.length);\n};\nvar isMouseEvent = function (event) {\n    return Boolean((event.clientX || event.clientX === 0) &&\n        (event.clientY || event.clientY === 0));\n};\nvar findClosestSnap = memoize(function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n});\nvar endsWith = memoize(function (str, searchStr) {\n    return str.substr(str.length - searchStr.length, searchStr.length) === searchStr;\n});\nvar getStringSize = memoize(function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (endsWith(n, 'px')) {\n        return n;\n    }\n    if (endsWith(n, '%')) {\n        return n;\n    }\n    if (endsWith(n, 'vh')) {\n        return n;\n    }\n    if (endsWith(n, 'vw')) {\n        return n;\n    }\n    if (endsWith(n, 'vmax')) {\n        return n;\n    }\n    if (endsWith(n, 'vmin')) {\n        return n;\n    }\n    return n + \"px\";\n});\nvar getPixelSize = function (size, parentSize, innerWidth, innerHeight) {\n    if (size && typeof size === 'string') {\n        if (endsWith(size, 'px')) {\n            return Number(size.replace('px', ''));\n        }\n        if (endsWith(size, '%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        if (endsWith(size, 'vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return innerWidth * ratio;\n        }\n        if (endsWith(size, 'vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = memoize(function (parentSize, innerWidth, innerHeight, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth, innerHeight);\n    maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth, innerHeight);\n    minWidth = getPixelSize(minWidth, parentSize.width, innerWidth, innerHeight);\n    minHeight = getPixelSize(minHeight, parentSize.height, innerWidth, innerHeight);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n});\nvar definedProps = [\n    'as',\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'boundsByDirection',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableRight = 0;\n        _this.resizableTop = 0;\n        _this.resizableBottom = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.appendBase = function () {\n            if (!_this.resizable || !_this.window) {\n                return null;\n            }\n            var parent = _this.parentNode;\n            if (!parent) {\n                return null;\n            }\n            var element = _this.window.document.createElement('div');\n            element.style.width = '100%';\n            element.style.height = '100%';\n            element.style.position = 'absolute';\n            element.style.transform = 'scale(0, 0)';\n            element.style.left = '0';\n            element.style.flex = '0 0 100%';\n            if (element.classList) {\n                element.classList.add(baseClassName);\n            }\n            else {\n                element.className += baseClassName;\n            }\n            parent.appendChild(element);\n            return element;\n        };\n        _this.removeBase = function (base) {\n            var parent = _this.parentNode;\n            if (!parent) {\n                return;\n            }\n            parent.removeChild(base);\n        };\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n            flexBasis: undefined,\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"window\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            if (!this.resizable.ownerDocument) {\n                return null;\n            }\n            return this.resizable.ownerDocument.defaultView;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (this.resizable && this.window) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && endsWith(_this.propsSize[key].toString(), '%')) {\n                    if (endsWith(_this.state[key].toString(), '%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.parentNode) {\n            if (!this.window) {\n                return { width: 0, height: 0 };\n            }\n            return { width: this.window.innerWidth, height: this.window.innerHeight };\n        }\n        var base = this.appendBase();\n        if (!base) {\n            return { width: 0, height: 0 };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        base.style.position = 'relative';\n        base.style.minWidth = '100%';\n        base.style.minHeight = '100%';\n        var size = {\n            width: base.offsetWidth,\n            height: base.offsetHeight,\n        };\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.removeBase(base);\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (this.window) {\n            this.window.addEventListener('mouseup', this.onMouseUp);\n            this.window.addEventListener('mousemove', this.onMouseMove);\n            this.window.addEventListener('mouseleave', this.onMouseUp);\n            this.window.addEventListener('touchmove', this.onMouseMove, {\n                capture: true,\n                passive: false,\n            });\n            this.window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (this.window) {\n            this.window.removeEventListener('mouseup', this.onMouseUp);\n            this.window.removeEventListener('mousemove', this.onMouseMove);\n            this.window.removeEventListener('mouseleave', this.onMouseUp);\n            this.window.removeEventListener('touchmove', this.onMouseMove, true);\n            this.window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (this.window) {\n            this.unbindEvents();\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        var boundsByDirection = this.props.boundsByDirection;\n        var direction = this.state.direction;\n        var widthByDirection = boundsByDirection && hasDirection('left', direction);\n        var heightByDirection = boundsByDirection && hasDirection('top', direction);\n        var boundWidth;\n        var boundHeight;\n        if (this.props.bounds === 'parent') {\n            var parent_1 = this.parentNode;\n            if (parent_1) {\n                boundWidth = widthByDirection\n                    ? this.resizableRight - this.parentLeft\n                    : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);\n                boundHeight = heightByDirection\n                    ? this.resizableBottom - this.parentTop\n                    : parent_1.offsetHeight + (this.parentTop - this.resizableTop);\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (this.window) {\n                boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;\n                boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;\n            }\n        }\n        else if (this.props.bounds) {\n            boundWidth = widthByDirection\n                ? this.resizableRight - this.targetLeft\n                : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            boundHeight = heightByDirection\n                ? this.resizableBottom - this.targetTop\n                : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n        }\n        if (boundWidth && Number.isFinite(boundWidth)) {\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n        }\n        if (boundHeight && Number.isFinite(boundHeight)) {\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2) {\n                var parentRect = parent_2.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds && typeof this.props.bounds !== 'string') {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top, right = _a.right, bottom = _a.bottom;\n            this.resizableLeft = left;\n            this.resizableRight = right;\n            this.resizableTop = top_1;\n            this.resizableBottom = bottom;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent && isMouseEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n        }\n        else if (event.nativeEvent && isTouchEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_3 = this.parentNode;\n            if (parent_3) {\n                var dir = this.window.getComputedStyle(parent_3).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        if (!this.state.isResizing || !this.resizable || !this.window) {\n            return;\n        }\n        if (this.window.TouchEvent && isTouchEvent(event)) {\n            try {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            catch (e) {\n                // Ignore on fail\n            }\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = isTouchEvent(event) ? event.touches[0].clientX : event.clientX;\n        var clientY = isTouchEvent(event) ? event.touches[0].clientY : event.clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (endsWith(width, '%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (endsWith(width, 'vw')) {\n                var vw = (newWidth / this.window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (endsWith(width, 'vh')) {\n                var vh = (newWidth / this.window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (endsWith(height, '%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (endsWith(height, 'vw')) {\n                var vw = (newHeight / this.window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (endsWith(height, 'vh')) {\n                var vh = (newHeight / this.window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        this.setState(newState);\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"div\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        var Wrapper = this.props.as || 'div';\n        return (React.createElement(Wrapper, __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        as: 'div',\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexport { Resizable };\n","// Libraries\nimport React from 'react';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport { css, cx, keyframes } from '@emotion/css';\n\n// Services & Utils\nimport { stylesFactory, useTheme2 } from '@grafana/ui';\n\n// Types\nimport { GrafanaTheme2 } from '@grafana/data';\n\nconst drawerSlide = keyframes`\n  0% {\n    transform: translateY(400px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: fixed !important;\n      bottom: 0;\n      background: ${theme.colors.background.primary};\n      border-top: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(0, -2, 0, -2)};\n      box-shadow: ${theme.shadows.z3};\n      z-index: ${theme.zIndex.sidemenu};\n    `,\n    drawerActive: css`\n      opacity: 1;\n      animation: 0.5s ease-out ${drawerSlide};\n    `,\n    rzHandle: css`\n      background: ${theme.colors.secondary.main};\n      transition: 0.3s background ease-in-out;\n      position: relative;\n      width: 200px !important;\n      height: 7px !important;\n      left: calc(50% - 100px) !important;\n      top: -4px !important;\n      cursor: grab;\n      border-radius: 4px;\n      &:hover {\n        background: ${theme.colors.secondary.shade};\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  width: number;\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { width, children, onResize } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.container, styles.drawerActive)}\n      defaultSize={{ width: drawerWidth, height: '400px' }}\n      handleClasses={{ top: styles.rzHandle }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n","// Libraries\nimport React, { useEffect, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\n// Services & Utils\nimport store from 'app/core/store';\nimport { RICH_HISTORY_SETTING_KEYS } from 'app/core/history/richHistoryLocalStorageUtils';\n\n// Types\nimport { ExploreItemState, StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\n// Components, enums\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\nimport { deleteRichHistory, loadRichHistory } from '../state/history';\nimport { ExploreDrawer } from '../ExploreDrawer';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { datasourceInstance } = item;\n  const firstTab = store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false)\n    ? Tabs.Starred\n    : Tabs.RichHistory;\n  const { richHistory } = item;\n  return {\n    richHistory,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance?.name,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadRichHistory,\n  deleteRichHistory,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  width: number;\n  exploreId: ExploreId;\n  onClose: () => void;\n}\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport function RichHistoryContainer(props: Props) {\n  const [height, setHeight] = useState(400);\n\n  const {\n    richHistory,\n    width,\n    firstTab,\n    activeDatasourceInstance,\n    exploreId,\n    deleteRichHistory,\n    loadRichHistory,\n    onClose,\n  } = props;\n\n  useEffect(() => {\n    loadRichHistory(exploreId);\n  }, [loadRichHistory, exploreId]);\n\n  return (\n    <ExploreDrawer\n      width={width}\n      onResize={(_e, _dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        deleteRichHistory={deleteRichHistory}\n        onClose={onClose}\n        height={height}\n      />\n    </ExploreDrawer>\n  );\n}\n\nexport default connector(RichHistoryContainer);\n","import React from 'react';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { TimeZone } from '@grafana/data';\nimport { runQueries } from './state/query';\nimport { StoreState, ExploreItemState, ExploreId } from 'app/types';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\n\ninterface DispatchProps {\n  width: number;\n  exploreId: ExploreId;\n  timeZone: TimeZone;\n  onClose: () => void;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { loading, width, onClose, queryResponse, timeZone } = props;\n  const dataFrames = queryResponse?.series || [];\n  const error = queryResponse?.error;\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone as TimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        isLoading={loading}\n        options={{ withTransforms: false, withFieldConfig: false }}\n        timeZone={timeZone}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: <QueryInspector data={dataFrames} onRefreshQuery={() => props.runQueries(props.exploreId)} />,\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (error) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab error={error} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width} onResize={() => {}}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { loading, queryResponse } = item;\n\n  return {\n    loading,\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(ExploreQueryInspector);\n","import React from 'react';\nimport { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'default'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","// Libaries\nimport React, { Component } from 'react';\n\n// Types\nimport { ExploreId } from 'app/types';\nimport { TimeRange, TimeZone, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\n\n// State\n\n// Components\nimport { TimeSyncButton } from './TimeSyncButton';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\n\n// Utils & Services\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\n\nexport interface Props {\n  exploreId: ExploreId;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  fiscalYearStartMonth: number;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth: (fiscalYearStartMonth: number) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const {\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      onChangeTimeSync,\n      hideText,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      fiscalYearStartMonth,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n        onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { CSSTransition } from 'react-transition-group';\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'default';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst styles = {\n  stopButtonEnter: css`\n    label: stopButtonEnter;\n    width: 0;\n    opacity: 0;\n    overflow: hidden;\n  `,\n  stopButtonEnterActive: css`\n    label: stopButtonEnterActive;\n    opacity: 1;\n    width: 32px;\n  `,\n  stopButtonExit: css`\n    label: stopButtonExit;\n    width: 32px;\n    opacity: 1;\n    overflow: hidden;\n  `,\n  stopButtonExitActive: css`\n    label: stopButtonExitActive;\n    opacity: 0;\n    width: 0;\n  `,\n};\n","import React from 'react';\nimport { RefreshPicker, defaultIntervals } from '@grafana/ui';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\nexport type Props = {\n  isSmall?: boolean;\n  loading: boolean;\n  isLive: boolean;\n  onRun: (loading: boolean) => void;\n  refreshInterval?: string;\n  onChangeRefreshInterval: (interval: string) => void;\n  showDropdown: boolean;\n};\n\nexport function RunButton(props: Props) {\n  const { isSmall, loading, onRun, onChangeRefreshInterval, refreshInterval, showDropdown, isLive } = props;\n  const intervals = getTimeSrv().getValidIntervals(defaultIntervals);\n  let text: string | undefined = loading ? 'Cancel' : 'Run query';\n  let tooltip = '';\n  let width = '108px';\n\n  if (isLive) {\n    return null;\n  }\n\n  if (isSmall) {\n    tooltip = text;\n    text = undefined;\n    width = '35px';\n  }\n\n  return (\n    <RefreshPicker\n      onIntervalChanged={onChangeRefreshInterval}\n      value={refreshInterval}\n      isLoading={loading}\n      text={text}\n      tooltip={tooltip}\n      intervals={intervals}\n      isLive={isLive}\n      onRefresh={() => onRun(loading)}\n      noIntervalPicker={!showDropdown}\n      primary={true}\n      width={width}\n    />\n  );\n}\n","import React, { lazy, PureComponent, RefObject, Suspense } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreId } from 'app/types/explore';\nimport { PageToolbar, SetInterval, ToolbarButton, ToolbarButtonRow } from '@grafana/ui';\nimport { DataSourceInstanceSettings, RawTimeRange } from '@grafana/data';\nimport { config, DataSourcePicker } from '@grafana/runtime';\nimport { StoreState } from 'app/types/store';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { changeDatasource } from './state/datasource';\nimport { splitClose, splitOpen } from './state/main';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\nimport { updateFiscalYearStartMonthForSession, updateTimeZoneForSession } from '../profile/state/reducers';\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { RunButton } from './RunButton';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { cancelQueries, runQueries } from './state/query';\nimport { isSplit } from './state/selectors';\nimport { DashNavButton } from '../dashboard/components/DashNav/DashNavButton';\n\nconst AddToDashboard = lazy(() =>\n  import('./AddToDashboard').then(({ AddToDashboard }) => ({ default: AddToDashboard }))\n);\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n  topOfExploreViewRef?: RefObject<HTMLDivElement>;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nclass UnConnectedExploreToolbar extends PureComponent<Props> {\n  onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    this.props.changeDatasource(this.props.exploreId, dsSettings.uid, { importQueries: true });\n  };\n\n  onRunQuery = (loading = false) => {\n    const { runQueries, cancelQueries, exploreId } = this.props;\n    if (loading) {\n      return cancelQueries(exploreId);\n    } else {\n      return runQueries(exploreId);\n    }\n  };\n\n  onChangeRefreshInterval = (item: string) => {\n    const { changeRefreshInterval, exploreId } = this.props;\n    changeRefreshInterval(exploreId, item);\n  };\n\n  onChangeTimeSync = () => {\n    const { syncTimes, exploreId } = this.props;\n    syncTimes(exploreId);\n  };\n\n  render() {\n    const {\n      datasourceMissing,\n      closeSplit,\n      exploreId,\n      loading,\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      refreshInterval,\n      onChangeTime,\n      split,\n      hasLiveOption,\n      isLive,\n      isPaused,\n      containerWidth,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n      topOfExploreViewRef,\n    } = this.props;\n\n    const showSmallDataSourcePicker = (splitted ? containerWidth < 700 : containerWidth < 800) || false;\n    const showSmallTimePicker = splitted || containerWidth < 1210;\n\n    return (\n      <div ref={topOfExploreViewRef}>\n        <PageToolbar\n          aria-label=\"Explore toolbar\"\n          title={exploreId === ExploreId.left ? 'Explore' : undefined}\n          pageIcon={exploreId === ExploreId.left ? 'compass' : undefined}\n          leftItems={[\n            exploreId === ExploreId.left && (\n              <DashNavButton\n                key=\"share\"\n                tooltip=\"Copy shortened link\"\n                icon=\"share-alt\"\n                onClick={() => createAndCopyShortLink(window.location.href)}\n                aria-label=\"Copy shortened link\"\n              />\n            ),\n            !datasourceMissing && (\n              <DataSourcePicker\n                key={`${exploreId}-ds-picker`}\n                onChange={this.onChangeDatasource}\n                current={this.props.datasourceName}\n                hideTextValue={showSmallDataSourcePicker}\n                width={showSmallDataSourcePicker ? 8 : undefined}\n              />\n            ),\n          ].filter(Boolean)}\n        >\n          <ToolbarButtonRow>\n            {!splitted ? (\n              <ToolbarButton title=\"Split\" onClick={() => split()} icon=\"columns\" disabled={isLive}>\n                Split\n              </ToolbarButton>\n            ) : (\n              <ToolbarButton title=\"Close split pane\" onClick={() => closeSplit(exploreId)} icon=\"times\">\n                Close\n              </ToolbarButton>\n            )}\n\n            {config.featureToggles.explore2Dashboard && (\n              <Suspense fallback={null}>\n                <AddToDashboard exploreId={exploreId} />\n              </Suspense>\n            )}\n\n            {!isLive && (\n              <ExploreTimeControls\n                exploreId={exploreId}\n                range={range}\n                timeZone={timeZone}\n                fiscalYearStartMonth={fiscalYearStartMonth}\n                onChangeTime={onChangeTime}\n                splitted={splitted}\n                syncedTimes={syncedTimes}\n                onChangeTimeSync={this.onChangeTimeSync}\n                hideText={showSmallTimePicker}\n                onChangeTimeZone={onChangeTimeZone}\n                onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n              />\n            )}\n\n            <RunButton\n              refreshInterval={refreshInterval}\n              onChangeRefreshInterval={this.onChangeRefreshInterval}\n              isSmall={splitted || showSmallTimePicker}\n              isLive={isLive}\n              loading={loading || (isLive && !isPaused)}\n              onRun={this.onRunQuery}\n              showDropdown={!isLive}\n            />\n\n            {refreshInterval && <SetInterval func={this.onRunQuery} interval={refreshInterval} loading={loading} />}\n\n            {hasLiveOption && (\n              <LiveTailControls exploreId={exploreId}>\n                {(controls) => (\n                  <LiveTailButton\n                    splitted={splitted}\n                    isLive={isLive}\n                    isPaused={isPaused}\n                    start={controls.start}\n                    pause={controls.pause}\n                    resume={controls.resume}\n                    stop={controls.stop}\n                  />\n                )}\n              </LiveTailControls>\n            )}\n          </ToolbarButtonRow>\n        </PageToolbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState, { exploreId }: OwnProps) => {\n  const { syncedTimes } = state.explore;\n  const exploreItem = state.explore[exploreId]!;\n  const { datasourceInstance, datasourceMissing, range, refreshInterval, loading, isLive, isPaused, containerWidth } =\n    exploreItem;\n\n  const hasLiveOption = !!datasourceInstance?.meta?.streaming;\n\n  return {\n    datasourceMissing,\n    datasourceName: datasourceInstance?.name,\n    loading,\n    range,\n    timeZone: getTimeZone(state.user),\n    fiscalYearStartMonth: getFiscalYearStartMonth(state.user),\n    splitted: isSplit(state),\n    refreshInterval,\n    hasLiveOption,\n    isLive,\n    isPaused,\n    syncedTimes,\n    containerWidth,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  changeRefreshInterval,\n  cancelQueries,\n  runQueries,\n  closeSplit: splitClose,\n  split: splitOpen,\n  syncTimes,\n  onChangeTimeZone: updateTimeZoneForSession,\n  onChangeFiscalYearStartMonth: updateFiscalYearStartMonthForSession,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExploreToolbar = connector(UnConnectedExploreToolbar);\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { LinkButton, CallToActionCard, Icon, useTheme2 } from '@grafana/ui';\n\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nexport const NoDataSourceCallToAction = () => {\n  const theme = useTheme2();\n\n  const canCreateDataSource =\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/#datasources?utm_source=explore\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\" disabled={!canCreateDataSource}>\n      Add data source\n    </LinkButton>\n  );\n\n  const cardClassName = css`\n    max-width: ${theme.breakpoints.values.lg}px;\n    margin-top: ${theme.spacing(2)};\n    align-self: center;\n  `;\n\n  return (\n    <CallToActionCard callToActionElement={ctaElement} className={cardClassName} footer={footer} message={message} />\n  );\n};\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, HorizontalGroup, useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryButtonActive?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickRichHistoryButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    containerMargin: css`\n      margin-top: ${theme.spacing(2)};\n    `,\n  };\n};\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return (\n    <div className={styles.containerMargin}>\n      <HorizontalGroup>\n        {!props.addQueryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Add row button\"\n            onClick={props.onClickAddQueryRowButton}\n            disabled={props.addQueryRowButtonDisabled}\n            icon=\"plus\"\n          >\n            Add query\n          </Button>\n        )}\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Rich history button\"\n          className={cx({ ['explore-active-button']: props.richHistoryButtonActive })}\n          onClick={props.onClickRichHistoryButton}\n          icon=\"history\"\n        >\n          Query history\n        </Button>\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Query inspector button\"\n          className={cx({ ['explore-active-button']: props.queryInspectorButtonActive })}\n          onClick={props.onClickQueryInspectorButton}\n          icon=\"info-circle\"\n        >\n          Inspector\n        </Button>\n      </HorizontalGroup>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useToggle } from 'react-use';\nimport { Badge, Collapse, useStyles2, useTheme2 } from '@grafana/ui';\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2 } from '@grafana/data';\nimport { css } from '@emotion/css';\nimport { ExploreId, StoreState } from '../../types';\nimport { splitOpen } from './state/main';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useLinks } from './utils/links';\nimport { NodeGraph } from '../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../plugins/panel/nodeGraph/useCategorizeFrames';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface OwnProps {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: ExploreId;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UnconnectedNodeGraphContainer(props: Props) {\n  const { dataFrames, range, splitOpen, withTraceView } = props;\n  const getLinks = useLinks(range, splitOpen);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [open, toggleOpen] = useToggle(false);\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <Collapse\n      label={\n        <span>\n          Node graph{countWarning}{' '}\n          <Badge text={'Beta'} color={'blue'} icon={'rocket'} tooltip={'This visualization is in beta'} />\n        </span>\n      }\n      collapsible={withTraceView}\n      // We allow collapsing this only when it is shown together with trace view.\n      isOpen={withTraceView ? open : true}\n      onToggle={withTraceView ? () => toggleOpen() : undefined}\n    >\n      <div style={{ height: withTraceView ? 500 : 600 }}>\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </Collapse>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: OwnProps) {\n  return {\n    range: state.explore[exploreId]!.range,\n  };\n}\n\nconst mapDispatchToProps = {\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import React, { FC, CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn: FC<Props> = (props) => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { DataQueryError } from '@grafana/data';\nimport { Alert, useTheme2 } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\nimport { css } from '@emotion/css';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer: FunctionComponent<ErrorContainerProps> = (props) => {\n  const { queryError } = props;\n  const theme = useTheme2();\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n  const alertWithTopMargin = css`\n    margin-top: ${theme.spacing(2)};\n  `;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} className={alertWithTopMargin}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ExploreId, StoreState } from '../../types';\nimport { LoadingState } from '@grafana/data';\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: ExploreId;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state: StoreState) => state.explore[props.exploreId]?.queryResponse);\n\n  const queryError = queryResponse?.state === LoadingState.Error ? queryResponse?.error : undefined;\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import {\n  DataFrame,\n  DataLink,\n  DataQuery,\n  DataSourceInstanceSettings,\n  dateTime,\n  Field,\n  KeyValue,\n  LinkModel,\n  mapInternalLinkToExplore,\n  rangeUtil,\n  SplitOpen,\n  TimeRange,\n} from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { Icon } from '@grafana/ui';\nimport { SpanLinkDef, SpanLinkFunc, TraceSpan } from '@jaegertracing/jaeger-ui-components';\nimport { TraceToLogsOptions } from 'app/core/components/TraceToLogs/TraceToLogsSettings';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport React from 'react';\nimport { LokiQuery } from '../../../plugins/datasource/loki/types';\nimport { getFieldLinksForExplore } from '../utils/links';\n\n/**\n * This is a factory for the link creator. It returns the function mainly so it can return undefined in which case\n * the trace view won't create any links and to capture the datasource and split function making it easier to memoize\n * with useMemo.\n */\nexport function createSpanLinkFactory({\n  splitOpenFn,\n  traceToLogsOptions,\n  dataFrame,\n}: {\n  splitOpenFn: SplitOpen;\n  traceToLogsOptions?: TraceToLogsOptions;\n  dataFrame?: DataFrame;\n}): SpanLinkFunc | undefined {\n  if (!dataFrame || dataFrame.fields.length === 1 || !dataFrame.fields.some((f) => Boolean(f.config.links?.length))) {\n    // if the dataframe contains just a single blob of data (legacy format) or does not have any links configured,\n    // let's try to use the old legacy path.\n    return legacyCreateSpanLinkFactory(splitOpenFn, traceToLogsOptions);\n  } else {\n    return function SpanLink(span: TraceSpan): SpanLinkDef | undefined {\n      // We should be here only if there are some links in the dataframe\n      const field = dataFrame.fields.find((f) => Boolean(f.config.links?.length))!;\n      try {\n        const links = getFieldLinksForExplore({\n          field,\n          rowIndex: span.dataFrameRowIndex!,\n          splitOpenFn,\n          range: getTimeRangeFromSpan(span),\n          dataFrame,\n        });\n\n        return {\n          href: links[0].href,\n          onClick: links[0].onClick,\n          content: <Icon name=\"gf-logs\" title=\"Explore the logs for this in split view\" />,\n        };\n      } catch (error) {\n        // It's fairly easy to crash here for example if data source defines wrong interpolation in the data link\n        console.error(error);\n        return undefined;\n      }\n    };\n  }\n}\n\nfunction legacyCreateSpanLinkFactory(splitOpenFn: SplitOpen, traceToLogsOptions?: TraceToLogsOptions) {\n  // We should return if dataSourceUid is undefined otherwise getInstanceSettings would return testDataSource.\n  if (!traceToLogsOptions?.datasourceUid) {\n    return undefined;\n  }\n\n  const dataSourceSettings = getDatasourceSrv().getInstanceSettings(traceToLogsOptions.datasourceUid);\n  const isSplunkDS = dataSourceSettings?.type === 'grafana-splunk-datasource';\n\n  if (!dataSourceSettings) {\n    return undefined;\n  }\n\n  return function SpanLink(span: TraceSpan): SpanLinkDef | undefined {\n    // This is reusing existing code from derived fields which may not be ideal match so some data is a bit faked at\n    // the moment. Issue is that the trace itself isn't clearly mapped to dataFrame (right now it's just a json blob\n    // inside a single field) so the dataLinks as config of that dataFrame abstraction breaks down a bit and we do\n    // it manually here instead of leaving it for the data source to supply the config.\n    let dataLink: DataLink<LokiQuery | DataQuery> | undefined = {} as DataLink<LokiQuery | DataQuery> | undefined;\n    let link: LinkModel<Field>;\n\n    switch (dataSourceSettings?.type) {\n      case 'loki':\n        dataLink = getLinkForLoki(span, traceToLogsOptions, dataSourceSettings);\n        if (!dataLink) {\n          return undefined;\n        }\n        break;\n      case 'grafana-splunk-datasource':\n        dataLink = getLinkForSplunk(span, traceToLogsOptions, dataSourceSettings);\n        break;\n      default:\n        return undefined;\n    }\n\n    link = mapInternalLinkToExplore({\n      link: dataLink,\n      internalLink: dataLink?.internal!,\n      scopedVars: {},\n      range: getTimeRangeFromSpan(\n        span,\n        {\n          startMs: traceToLogsOptions.spanStartTimeShift\n            ? rangeUtil.intervalToMs(traceToLogsOptions.spanStartTimeShift)\n            : 0,\n          endMs: traceToLogsOptions.spanEndTimeShift ? rangeUtil.intervalToMs(traceToLogsOptions.spanEndTimeShift) : 0,\n        },\n        isSplunkDS\n      ),\n      field: {} as Field,\n      onClickFn: splitOpenFn,\n      replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n    });\n\n    return {\n      href: link.href,\n      onClick: link.onClick,\n      content: <Icon name=\"gf-logs\" title=\"Explore the logs for this in split view\" />,\n    };\n  };\n}\n\n/**\n * Default keys to use when there are no configured tags.\n */\nconst defaultKeys = ['cluster', 'hostname', 'namespace', 'pod'];\nfunction getLinkForLoki(span: TraceSpan, options: TraceToLogsOptions, dataSourceSettings: DataSourceInstanceSettings) {\n  const { tags: keys, filterByTraceID, filterBySpanID, mapTagNamesEnabled, mappedTags } = options;\n\n  // In order, try to use mapped tags -> tags -> default tags\n  const keysToCheck = mapTagNamesEnabled && mappedTags?.length ? mappedTags : keys?.length ? keys : defaultKeys;\n  // Build tag portion of query\n  const tags = [...span.process.tags, ...span.tags].reduce((acc, tag) => {\n    if (mapTagNamesEnabled) {\n      const keyValue = (keysToCheck as KeyValue[]).find((keyValue: KeyValue) => keyValue.key === tag.key);\n      if (keyValue) {\n        acc.push(`${keyValue.value ? keyValue.value : keyValue.key}=\"${tag.value}\"`);\n      }\n    } else {\n      if ((keysToCheck as string[]).includes(tag.key)) {\n        acc.push(`${tag.key}=\"${tag.value}\"`);\n      }\n    }\n    return acc;\n  }, [] as string[]);\n\n  // If no tags found, return undefined to prevent an invalid Loki query\n  if (!tags.length) {\n    return undefined;\n  }\n  let expr = `{${tags.join(', ')}}`;\n  if (filterByTraceID && span.traceID) {\n    expr += ` |=\"${span.traceID}\"`;\n  }\n  if (filterBySpanID && span.spanID) {\n    expr += ` |=\"${span.spanID}\"`;\n  }\n\n  const dataLink: DataLink<LokiQuery> = {\n    title: dataSourceSettings.name,\n    url: '',\n    internal: {\n      datasourceUid: dataSourceSettings.uid,\n      datasourceName: dataSourceSettings.name,\n      query: {\n        expr: expr,\n        refId: '',\n      },\n    },\n  };\n\n  return dataLink;\n}\n\nfunction getLinkForSplunk(\n  span: TraceSpan,\n  options: TraceToLogsOptions,\n  dataSourceSettings: DataSourceInstanceSettings\n) {\n  const { tags: keys, filterByTraceID, filterBySpanID, mapTagNamesEnabled, mappedTags } = options;\n\n  // In order, try to use mapped tags -> tags -> default tags\n  const keysToCheck = mapTagNamesEnabled && mappedTags?.length ? mappedTags : keys?.length ? keys : defaultKeys;\n  // Build tag portion of query\n  const tags = [...span.process.tags, ...span.tags].reduce((acc, tag) => {\n    if (mapTagNamesEnabled) {\n      const keyValue = (keysToCheck as KeyValue[]).find((keyValue: KeyValue) => keyValue.key === tag.key);\n      if (keyValue) {\n        acc.push(`${keyValue.value ? keyValue.value : keyValue.key}=\"${tag.value}\"`);\n      }\n    } else {\n      if ((keysToCheck as string[]).includes(tag.key)) {\n        acc.push(`${tag.key}=\"${tag.value}\"`);\n      }\n    }\n    return acc;\n  }, [] as string[]);\n\n  let query = '';\n  if (tags.length > 0) {\n    query += `${tags.join(' ')}`;\n  }\n  if (filterByTraceID && span.traceID) {\n    query += ` \"${span.traceID}\"`;\n  }\n  if (filterBySpanID && span.spanID) {\n    query += ` \"${span.spanID}\"`;\n  }\n\n  const dataLink: DataLink<DataQuery> = {\n    title: dataSourceSettings.name,\n    url: '',\n    internal: {\n      datasourceUid: dataSourceSettings.uid,\n      datasourceName: dataSourceSettings.name,\n      query: {\n        query: query,\n        refId: '',\n      },\n    },\n  } as DataLink<DataQuery>;\n\n  return dataLink;\n}\n\n/**\n * Gets a time range from the span.\n */\nfunction getTimeRangeFromSpan(\n  span: TraceSpan,\n  timeShift: { startMs: number; endMs: number } = { startMs: 0, endMs: 0 },\n  isSplunkDS = false\n): TimeRange {\n  const adjustedStartTime = Math.floor(span.startTime / 1000 + timeShift.startMs);\n  const from = dateTime(adjustedStartTime);\n  const spanEndMs = (span.startTime + span.duration) / 1000;\n  let adjustedEndTime = Math.floor(spanEndMs + timeShift.endMs);\n\n  // Splunk requires a time interval of >= 1s, rather than >=1ms like Loki timerange in below elseif block\n  if (isSplunkDS && adjustedEndTime - adjustedStartTime < 1000) {\n    adjustedEndTime = adjustedStartTime + 1000;\n  } else if (adjustedStartTime === adjustedEndTime) {\n    // Because we can only pass milliseconds in the url we need to check if they equal.\n    // We need end time to be later than start time\n    adjustedEndTime++;\n  }\n\n  const to = dateTime(adjustedEndTime);\n\n  // Beware that public/app/features/explore/state/main.ts SplitOpen fn uses the range from here. No matter what is in the url.\n  return {\n    from,\n    to,\n    raw: {\n      from,\n      to,\n    },\n  };\n}\n","import { useCallback, useState, useEffect } from 'react';\nimport { DataFrame } from '@grafana/data';\nimport { DetailState } from '@jaegertracing/jaeger-ui-components';\nimport { TraceLog, TraceSpanReference } from '@jaegertracing/jaeger-ui-components/src/types/trace';\n\n/**\n * Keeps state of the span detail. This means whether span details are open but also state of each detail subitem\n * like logs or tags.\n */\nexport function useDetailState(frame: DataFrame) {\n  const [detailStates, setDetailStates] = useState(new Map<string, DetailState>());\n\n  // Clear detail state when new trace arrives\n  useEffect(() => {\n    setDetailStates(new Map<string, DetailState>());\n  }, [frame, setDetailStates]);\n\n  const toggleDetail = useCallback(\n    function toggleDetail(spanID: string) {\n      const newDetailStates = new Map(detailStates);\n      if (newDetailStates.has(spanID)) {\n        newDetailStates.delete(spanID);\n      } else {\n        newDetailStates.set(spanID, new DetailState());\n      }\n      setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  const detailLogItemToggle = useCallback(\n    function detailLogItemToggle(spanID: string, log: TraceLog) {\n      const old = detailStates.get(spanID);\n      if (!old) {\n        return;\n      }\n      const detailState = old.toggleLogItem(log);\n      const newDetailStates = new Map(detailStates);\n      newDetailStates.set(spanID, detailState);\n      return setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  const detailReferenceItemToggle = useCallback(\n    function detailReferenceItemToggle(spanID: string, reference: TraceSpanReference) {\n      const old = detailStates.get(spanID);\n      if (!old) {\n        return;\n      }\n      const detailState = old.toggleReferenceItem(reference);\n      const newDetailStates = new Map(detailStates);\n      newDetailStates.set(spanID, detailState);\n      return setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  return {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('logs', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailWarningsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('warnings', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailStackTracesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('stackTraces', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailReferenceItemToggle,\n    detailReferencesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('references', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailProcessToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('process', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailTagsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('tags', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n  };\n}\n\nfunction makeDetailSubsectionToggle(\n  subSection: 'tags' | 'process' | 'logs' | 'warnings' | 'references' | 'stackTraces',\n  detailStates: Map<string, DetailState>,\n  setDetailStates: (detailStates: Map<string, DetailState>) => void\n) {\n  return (spanID: string) => {\n    const old = detailStates.get(spanID);\n    if (!old) {\n      return;\n    }\n    let detailState;\n    if (subSection === 'tags') {\n      detailState = old.toggleTags();\n    } else if (subSection === 'process') {\n      detailState = old.toggleProcess();\n    } else if (subSection === 'warnings') {\n      detailState = old.toggleWarnings();\n    } else if (subSection === 'references') {\n      detailState = old.toggleReferences();\n    } else if (subSection === 'stackTraces') {\n      detailState = old.toggleStackTraces();\n    } else {\n      detailState = old.toggleLogs();\n    }\n    const newDetailStates = new Map(detailStates);\n    newDetailStates.set(spanID, detailState);\n    setDetailStates(newDetailStates);\n  };\n}\n","import {\n  DataFrame,\n  DataLink,\n  DataSourceApi,\n  Field,\n  LinkModel,\n  LoadingState,\n  mapInternalLinkToExplore,\n  PanelData,\n  SplitOpen,\n} from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport {\n  Trace,\n  TracePageHeader,\n  TraceSpan,\n  TraceTimelineViewer,\n  TTraceTimeline,\n} from '@jaegertracing/jaeger-ui-components';\nimport { TraceToLogsData } from 'app/core/components/TraceToLogs/TraceToLogsSettings';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { getTimeZone } from 'app/features/profile/state/selectors';\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\nimport React, { RefObject, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changePanelState } from '../state/explorePane';\nimport { createSpanLinkFactory } from './createSpanLink';\nimport { useDetailState } from './useDetailState';\nimport { useHoverIndentGuide } from './useHoverIndentGuide';\nimport { useViewRange } from './useViewRange';\n\nfunction noop(): {} {\n  return {};\n}\n\ntype Props = {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n  scrollElement?: Element;\n  topOfExploreViewRef?: RefObject<HTMLDivElement>;\n  traceProp: Trace;\n  spanFindMatches?: Set<string>;\n  search: string;\n  focusedSpanIdForSearch: string;\n  expandOne: (spans: TraceSpan[]) => void;\n  expandAll: () => void;\n  collapseOne: (spans: TraceSpan[]) => void;\n  collapseAll: (spans: TraceSpan[]) => void;\n  childrenToggle: (spanId: string) => void;\n  childrenHiddenIDs: Set<string>;\n  queryResponse: PanelData;\n};\n\nexport function TraceView(props: Props) {\n  const {\n    expandOne,\n    expandAll,\n    collapseOne,\n    collapseAll,\n    childrenToggle,\n    childrenHiddenIDs,\n    spanFindMatches,\n    traceProp,\n  } = props;\n\n  const {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle,\n    detailProcessToggle,\n    detailReferencesToggle,\n    detailReferenceItemToggle,\n    detailTagsToggle,\n    detailWarningsToggle,\n    detailStackTracesToggle,\n  } = useDetailState(props.dataFrames[0]);\n\n  const { removeHoverIndentGuideId, addHoverIndentGuideId, hoverIndentGuideIds } = useHoverIndentGuide();\n  const { viewRange, updateViewRangeTime, updateNextViewRangeTime } = useViewRange();\n\n  /**\n   * Keeps state of resizable name column width\n   */\n  const [spanNameColumnWidth, setSpanNameColumnWidth] = useState(0.25);\n  /**\n   * State of the top minimap, slim means it is collapsed.\n   */\n  const [slim, setSlim] = useState(false);\n\n  const datasource = useSelector(\n    (state: StoreState) => state.explore[props.exploreId]?.datasourceInstance ?? undefined\n  );\n\n  const [focusedSpanId, createFocusSpanLink] = useFocusSpanLink({\n    refId: props.dataFrames[0]?.refId,\n    exploreId: props.exploreId,\n    datasource,\n  });\n\n  const createLinkToExternalSpan = (traceId: string, spanId: string) => {\n    const link = createFocusSpanLink(traceId, spanId);\n    return link.href;\n  };\n\n  const traceTimeline: TTraceTimeline = useMemo(\n    () => ({\n      childrenHiddenIDs,\n      detailStates,\n      hoverIndentGuideIds,\n      shouldScrollToFirstUiFindMatch: false,\n      spanNameColumnWidth,\n      traceID: props.traceProp?.traceID,\n    }),\n    [childrenHiddenIDs, detailStates, hoverIndentGuideIds, spanNameColumnWidth, props.traceProp?.traceID]\n  );\n\n  useEffect(() => {\n    if (props.queryResponse.state === LoadingState.Done) {\n      props.topOfExploreViewRef?.current?.scrollIntoView();\n    }\n  }, [props.queryResponse, props.topOfExploreViewRef]);\n\n  const traceToLogsOptions = (getDatasourceSrv().getInstanceSettings(datasource?.name)?.jsonData as TraceToLogsData)\n    ?.tracesToLogs;\n  const createSpanLink = useMemo(\n    () => createSpanLinkFactory({ splitOpenFn: props.splitOpenFn, traceToLogsOptions, dataFrame: props.dataFrames[0] }),\n    [props.splitOpenFn, traceToLogsOptions, props.dataFrames]\n  );\n  const onSlimViewClicked = useCallback(() => setSlim(!slim), [slim]);\n  const timeZone = useSelector((state: StoreState) => getTimeZone(state.user));\n\n  if (!props.dataFrames?.length || !traceProp) {\n    return null;\n  }\n\n  return (\n    <>\n      <TracePageHeader\n        canCollapse={false}\n        hideMap={false}\n        hideSummary={false}\n        onSlimViewClicked={onSlimViewClicked}\n        onTraceGraphViewClicked={noop}\n        slimView={slim}\n        trace={traceProp}\n        updateNextViewRangeTime={updateNextViewRangeTime}\n        updateViewRangeTime={updateViewRangeTime}\n        viewRange={viewRange}\n        timeZone={timeZone}\n      />\n      <TraceTimelineViewer\n        registerAccessors={noop}\n        scrollToFirstVisibleSpan={noop}\n        findMatchesIDs={spanFindMatches}\n        trace={traceProp}\n        traceTimeline={traceTimeline}\n        updateNextViewRangeTime={updateNextViewRangeTime}\n        updateViewRangeTime={updateViewRangeTime}\n        viewRange={viewRange}\n        focusSpan={noop}\n        createLinkToExternalSpan={createLinkToExternalSpan}\n        setSpanNameColumnWidth={setSpanNameColumnWidth}\n        collapseAll={collapseAll}\n        collapseOne={collapseOne}\n        expandAll={expandAll}\n        expandOne={expandOne}\n        childrenToggle={childrenToggle}\n        clearShouldScrollToFirstUiFindMatch={noop}\n        detailLogItemToggle={detailLogItemToggle}\n        detailLogsToggle={detailLogsToggle}\n        detailWarningsToggle={detailWarningsToggle}\n        detailStackTracesToggle={detailStackTracesToggle}\n        detailReferencesToggle={detailReferencesToggle}\n        detailReferenceItemToggle={detailReferenceItemToggle}\n        detailProcessToggle={detailProcessToggle}\n        detailTagsToggle={detailTagsToggle}\n        detailToggle={toggleDetail}\n        setTrace={noop}\n        addHoverIndentGuideId={addHoverIndentGuideId}\n        removeHoverIndentGuideId={removeHoverIndentGuideId}\n        linksGetter={noop as any}\n        uiFind={props.search}\n        createSpanLink={createSpanLink}\n        scrollElement={props.scrollElement}\n        focusedSpanId={focusedSpanId}\n        focusedSpanIdForSearch={props.focusedSpanIdForSearch}\n        createFocusSpanLink={createFocusSpanLink}\n        topOfExploreViewRef={props.topOfExploreViewRef}\n      />\n    </>\n  );\n}\n\n/**\n * Handles focusing a span. Returns the span id to focus to based on what is in current explore state and also a\n * function to change the focused span id.\n * @param options\n */\nfunction useFocusSpanLink(options: {\n  exploreId: ExploreId;\n  refId?: string;\n  datasource?: DataSourceApi;\n}): [string | undefined, (traceId: string, spanId: string) => LinkModel<Field>] {\n  const panelState = useSelector((state: StoreState) => state.explore[options.exploreId]?.panelsState.trace);\n  const focusedSpanId = panelState?.spanId;\n\n  const dispatch = useDispatch();\n  const setFocusedSpanId = (spanId?: string) =>\n    dispatch(\n      changePanelState(options.exploreId, 'trace', {\n        ...panelState,\n        spanId,\n      })\n    );\n\n  const query = useSelector((state: StoreState) =>\n    state.explore[options.exploreId]?.queries.find((query) => query.refId === options.refId)\n  );\n\n  const createFocusSpanLink = (traceId: string, spanId: string) => {\n    const link: DataLink = {\n      title: 'Deep link to this span',\n      url: '',\n      internal: {\n        datasourceUid: options.datasource?.uid!,\n        datasourceName: options.datasource?.name!,\n        query: query,\n        panelsState: {\n          trace: {\n            spanId,\n          },\n        },\n      },\n    };\n\n    return mapInternalLinkToExplore({\n      link,\n      internalLink: link.internal!,\n      scopedVars: {},\n      range: {} as any,\n      field: {} as Field,\n      onClickFn: () => setFocusedSpanId(focusedSpanId === spanId ? undefined : spanId),\n      replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n    });\n  };\n\n  return [focusedSpanId, createFocusSpanLink];\n}\n","import { useCallback, useState } from 'react';\n\n/**\n * This is used internally to handle hover state of indent guide. As indent guides are separate\n * components per each row/span and you need to highlight all in multiple rows to make the effect of single line\n * they need this kind of common imperative state changes.\n *\n * Ideally would be changed to trace view internal state.\n */\nexport function useHoverIndentGuide() {\n  const [hoverIndentGuideIds, setHoverIndentGuideIds] = useState(new Set<string>());\n\n  const addHoverIndentGuideId = useCallback(function addHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.add(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  const removeHoverIndentGuideId = useCallback(function removeHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.delete(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  return { hoverIndentGuideIds, addHoverIndentGuideId, removeHoverIndentGuideId };\n}\n","import { useCallback, useState } from 'react';\nimport { ViewRangeTimeUpdate, ViewRange } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls state of the zoom function that can be used through minimap in header or on the timeline. ViewRange contains\n * state not only for current range that is showing but range that is currently being selected by the user.\n */\nexport function useViewRange() {\n  const [viewRange, setViewRange] = useState<ViewRange>({\n    time: {\n      current: [0, 1],\n    },\n  });\n\n  const updateNextViewRangeTime = useCallback(function updateNextViewRangeTime(update: ViewRangeTimeUpdate) {\n    setViewRange((prevRange): ViewRange => {\n      const time = { ...prevRange.time, ...update };\n      return { ...prevRange, time };\n    });\n  }, []);\n\n  const updateViewRangeTime = useCallback(function updateViewRangeTime(start: number, end: number) {\n    const current: [number, number] = [start, end];\n    const time = { current };\n    setViewRange((prevRange): ViewRange => {\n      return { ...prevRange, time };\n    });\n  }, []);\n\n  return { viewRange, updateViewRangeTime, updateNextViewRangeTime };\n}\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { IconButton, Input } from '@grafana/ui';\nimport * as React from 'react';\n\nimport { TNil } from '../types/index';\n\ntype Props = {\n  allowClear?: boolean;\n  inputProps: Record<string, any>;\n  location: Location;\n  match: any;\n  trackFindFunction?: (str: string | TNil) => void;\n  value: string | undefined;\n  onChange: (value: string) => void;\n};\n\nexport default class UiFindInput extends React.PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    inputProps: {},\n    trackFindFunction: undefined,\n    value: undefined,\n  };\n\n  clearUiFind = () => {\n    this.props.onChange('');\n  };\n\n  render() {\n    const { allowClear, inputProps, value } = this.props;\n\n    const suffix = (\n      <>\n        {inputProps.suffix}\n        {allowClear && value && value.length && <IconButton name=\"times\" onClick={this.clearUiFind} />}\n      </>\n    );\n\n    return (\n      <Input\n        placeholder=\"Find...\"\n        {...inputProps}\n        onChange={(e) => this.props.onChange(e.currentTarget.value)}\n        suffix={suffix}\n        value={value}\n      />\n    );\n  }\n}\n","// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { css } from '@emotion/css';\nimport { Button, useStyles2 } from '@grafana/ui';\n\nimport * as markers from './TracePageSearchBar.markers';\nimport UiFindInput from '../common/UiFindInput';\n\nimport { ubFlexAuto, ubJustifyEnd } from '../uberUtilityStyles';\n// eslint-disable-next-line no-duplicate-imports\nimport { memo } from 'react';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    TracePageSearchBar: css`\n      label: TracePageSearchBar;\n      float: right;\n      position: sticky;\n      top: 8px;\n      right: 0;\n      z-index: ${theme.zIndex.navbarFixed};\n      background: ${theme.colors.background.primary};\n      margin-top: 8px;\n      margin-bottom: -48px;\n      padding: 8px;\n      margin-right: 2px;\n      border-radius: 4px;\n      box-shadow: ${theme.shadows.z2};\n    `,\n    TracePageSearchBarBar: css`\n      label: TracePageSearchBarBar;\n      max-width: 20rem;\n      transition: max-width 0.5s;\n      &:focus-within {\n        max-width: 100%;\n      }\n    `,\n    TracePageSearchBarSuffix: css`\n      label: TracePageSearchBarSuffix;\n      opacity: 0.6;\n    `,\n    TracePageSearchBarBtn: css`\n      label: TracePageSearchBarBtn;\n      transition: 0.2s;\n      margin-left: 8px;\n    `,\n    TracePageSearchBarBtnDisabled: css`\n      label: TracePageSearchBarBtnDisabled;\n      opacity: 0.5;\n    `,\n    TracePageSearchBarLocateBtn: css`\n      label: TracePageSearchBarLocateBtn;\n      padding: 1px 8px 4px;\n    `,\n  };\n};\n\ntype TracePageSearchBarProps = {\n  prevResult: () => void;\n  nextResult: () => void;\n  navigable: boolean;\n  searchValue: string;\n  onSearchValueChange: (value: string) => void;\n  searchBarSuffix: string;\n};\n\nexport default memo(function TracePageSearchBar(props: TracePageSearchBarProps) {\n  const { navigable, nextResult, prevResult, onSearchValueChange, searchValue, searchBarSuffix } = props;\n  const styles = useStyles2(getStyles);\n\n  const suffix = searchValue ? (\n    <span className={styles.TracePageSearchBarSuffix} data-testid=\"trace-page-search-bar-suffix\">\n      {searchBarSuffix}\n    </span>\n  ) : null;\n\n  const btnClass = cx(styles.TracePageSearchBarBtn, { [styles.TracePageSearchBarBtnDisabled]: !searchValue });\n  const uiFindInputInputProps = {\n    'data-test': markers.IN_TRACE_SEARCH,\n    className: cx(styles.TracePageSearchBarBar, ubFlexAuto),\n    name: 'search',\n    suffix,\n  };\n\n  return (\n    <div className={styles.TracePageSearchBar}>\n      <span className={ubJustifyEnd} style={{ display: 'flex' }}>\n        <UiFindInput\n          onChange={onSearchValueChange}\n          value={searchValue}\n          inputProps={uiFindInputInputProps}\n          allowClear={true}\n        />\n        <>\n          {navigable && (\n            <>\n              <Button\n                className={btnClass}\n                variant=\"secondary\"\n                disabled={!searchValue}\n                type=\"button\"\n                icon=\"arrow-down\"\n                data-testid=\"trace-page-search-bar-next-result-button\"\n                onClick={nextResult}\n              />\n              <Button\n                className={btnClass}\n                variant=\"secondary\"\n                disabled={!searchValue}\n                type=\"button\"\n                icon=\"arrow-up\"\n                data-testid=\"trace-page-search-bar-prev-result-button\"\n                onClick={prevResult}\n              />\n            </>\n          )}\n        </>\n      </span>\n    </div>\n  );\n});\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport const IN_TRACE_SEARCH = 'in-trace-search';\n","import { DataFrame, DataFrameView, TraceSpanRow } from '@grafana/data';\nimport { Trace, TraceProcess, TraceResponse, transformTraceData } from '@jaegertracing/jaeger-ui-components';\n\nexport function transformDataFrames(frame?: DataFrame): Trace | null {\n  if (!frame) {\n    return null;\n  }\n  let data: TraceResponse =\n    frame.fields.length === 1\n      ? // For backward compatibility when we sent whole json response in a single field/value\n        frame.fields[0].values.get(0)\n      : transformTraceDataFrame(frame);\n  return transformTraceData(data);\n}\n\nfunction transformTraceDataFrame(frame: DataFrame): TraceResponse {\n  const view = new DataFrameView<TraceSpanRow>(frame);\n  const processes: Record<string, TraceProcess> = {};\n  for (let i = 0; i < view.length; i++) {\n    const span = view.get(i);\n    if (!processes[span.spanID]) {\n      processes[span.spanID] = {\n        serviceName: span.serviceName,\n        tags: span.serviceTags,\n      };\n    }\n  }\n\n  return {\n    traceID: view.get(0).traceID,\n    processes,\n    spans: view.toArray().map((s, index) => {\n      const references = [];\n      if (s.parentSpanID) {\n        references.push({ refType: 'CHILD_OF' as const, spanID: s.parentSpanID, traceID: s.traceID });\n      }\n      if (s.references) {\n        references.push(...s.references.map((reference) => ({ refType: 'FOLLOWS_FROM' as const, ...reference })));\n      }\n      return {\n        ...s,\n        duration: s.duration * 1000,\n        startTime: s.startTime * 1000,\n        processID: s.spanID,\n        flags: 0,\n        references,\n        logs: s.logs?.map((l) => ({ ...l, timestamp: l.timestamp * 1000 })) || [],\n        dataFrameRowIndex: index,\n      };\n    }),\n  };\n}\n","import { useCallback, useState } from 'react';\nimport { TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Children state means whether spans are collapsed or not. Also provides some functions to manipulate that state.\n */\nexport function useChildrenState() {\n  const [childrenHiddenIDs, setChildrenHiddenIDs] = useState(new Set<string>());\n\n  const expandOne = useCallback(\n    function expandOne(spans: TraceSpan[]) {\n      if (childrenHiddenIDs.size === 0) {\n        return;\n      }\n      let prevExpandedDepth = -1;\n      let expandNextHiddenSpan = true;\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.depth <= prevExpandedDepth) {\n          expandNextHiddenSpan = true;\n        }\n        if (expandNextHiddenSpan && res.has(s.spanID)) {\n          res.delete(s.spanID);\n          expandNextHiddenSpan = false;\n          prevExpandedDepth = s.depth;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const collapseOne = useCallback(\n    function collapseOne(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      let nearestCollapsedAncestor: TraceSpan | undefined;\n      const newChildrenHiddenIDs = spans.reduce((res, curSpan) => {\n        if (nearestCollapsedAncestor && curSpan.depth <= nearestCollapsedAncestor.depth) {\n          res.add(nearestCollapsedAncestor.spanID);\n          if (curSpan.hasChildren) {\n            nearestCollapsedAncestor = curSpan;\n          }\n        } else if (curSpan.hasChildren && !res.has(curSpan.spanID)) {\n          nearestCollapsedAncestor = curSpan;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      // The last one\n      if (nearestCollapsedAncestor) {\n        newChildrenHiddenIDs.add(nearestCollapsedAncestor.spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const expandAll = useCallback(function expandAll() {\n    setChildrenHiddenIDs(new Set<string>());\n  }, []);\n\n  const collapseAll = useCallback(\n    function collapseAll(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.hasChildren) {\n          res.add(s.spanID);\n        }\n        return res;\n      }, new Set<string>());\n\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const childrenToggle = useCallback(\n    function childrenToggle(spanID: string) {\n      const newChildrenHiddenIDs = new Set(childrenHiddenIDs);\n      if (childrenHiddenIDs.has(spanID)) {\n        newChildrenHiddenIDs.delete(spanID);\n      } else {\n        newChildrenHiddenIDs.add(spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  return {\n    childrenHiddenIDs,\n    expandOne,\n    collapseOne,\n    expandAll,\n    collapseAll,\n    childrenToggle,\n  };\n}\n\nfunction shouldDisableCollapse(allSpans: TraceSpan[], hiddenSpansIds: Set<string>) {\n  const allParentSpans = allSpans.filter((s) => s.hasChildren);\n  return allParentSpans.length === hiddenSpansIds.size;\n}\n","import React, { RefObject, useMemo, useState } from 'react';\nimport { Collapse } from '@grafana/ui';\nimport { DataFrame, SplitOpen, PanelData } from '@grafana/data';\nimport { TraceView } from './TraceView';\nimport { ExploreId } from 'app/types/explore';\nimport TracePageSearchBar from '@jaegertracing/jaeger-ui-components/src/TracePageHeader/TracePageSearchBar';\nimport { useSearch } from './useSearch';\nimport { transformDataFrames } from './utils/transform';\nimport { useChildrenState } from './useChildrenState';\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n  scrollElement?: Element;\n  topOfExploreViewRef?: RefObject<HTMLDivElement>;\n  queryResponse: PanelData;\n}\nexport function TraceViewContainer(props: Props) {\n  // At this point we only show single trace\n  const frame = props.dataFrames[0];\n\n  const { dataFrames, splitOpenFn, exploreId, scrollElement, topOfExploreViewRef, queryResponse } = props;\n  const traceProp = useMemo(() => transformDataFrames(frame), [frame]);\n  const { search, setSearch, spanFindMatches } = useSearch(traceProp?.spans);\n  const { expandOne, collapseOne, childrenToggle, collapseAll, childrenHiddenIDs, expandAll } = useChildrenState();\n\n  const [focusedSpanIdForSearch, setFocusedSpanIdForSearch] = useState('');\n  const [searchBarSuffix, setSearchBarSuffix] = useState('');\n\n  const setTraceSearch = (value: string) => {\n    setFocusedSpanIdForSearch('');\n    setSearchBarSuffix('');\n    setSearch(value);\n  };\n\n  const nextResult = () => {\n    expandAll();\n    const spanMatches = Array.from(spanFindMatches!);\n    const prevMatchedIndex = spanMatches.indexOf(focusedSpanIdForSearch)\n      ? spanMatches.indexOf(focusedSpanIdForSearch)\n      : 0;\n\n    // new query || at end, go to start\n    if (prevMatchedIndex === -1 || prevMatchedIndex === spanMatches.length - 1) {\n      setFocusedSpanIdForSearch(spanMatches[0]);\n      setSearchBarSuffix(getSearchBarSuffix(1));\n      return;\n    }\n\n    // get next\n    setFocusedSpanIdForSearch(spanMatches[prevMatchedIndex + 1]);\n    setSearchBarSuffix(getSearchBarSuffix(prevMatchedIndex + 2));\n  };\n\n  const prevResult = () => {\n    expandAll();\n    const spanMatches = Array.from(spanFindMatches!);\n    const prevMatchedIndex = spanMatches.indexOf(focusedSpanIdForSearch)\n      ? spanMatches.indexOf(focusedSpanIdForSearch)\n      : 0;\n\n    // new query || at start, go to end\n    if (prevMatchedIndex === -1 || prevMatchedIndex === 0) {\n      setFocusedSpanIdForSearch(spanMatches[spanMatches.length - 1]);\n      setSearchBarSuffix(getSearchBarSuffix(spanMatches.length));\n      return;\n    }\n\n    // get prev\n    setFocusedSpanIdForSearch(spanMatches[prevMatchedIndex - 1]);\n    setSearchBarSuffix(getSearchBarSuffix(prevMatchedIndex));\n  };\n\n  const getSearchBarSuffix = (index: number): string => {\n    if (spanFindMatches?.size && spanFindMatches?.size > 0) {\n      return index + ' of ' + spanFindMatches?.size;\n    }\n    return '';\n  };\n\n  if (!traceProp) {\n    return null;\n  }\n\n  return (\n    <>\n      <TracePageSearchBar\n        nextResult={nextResult}\n        prevResult={prevResult}\n        navigable={true}\n        searchValue={search}\n        onSearchValueChange={setTraceSearch}\n        searchBarSuffix={searchBarSuffix}\n      />\n\n      <Collapse label=\"Trace View\" isOpen>\n        <TraceView\n          exploreId={exploreId}\n          dataFrames={dataFrames}\n          splitOpenFn={splitOpenFn}\n          scrollElement={scrollElement}\n          topOfExploreViewRef={topOfExploreViewRef}\n          traceProp={traceProp}\n          spanFindMatches={spanFindMatches}\n          search={search}\n          focusedSpanIdForSearch={focusedSpanIdForSearch}\n          expandOne={expandOne}\n          collapseOne={collapseOne}\n          collapseAll={collapseAll}\n          expandAll={expandAll}\n          childrenToggle={childrenToggle}\n          childrenHiddenIDs={childrenHiddenIDs}\n          queryResponse={queryResponse}\n        />\n      </Collapse>\n    </>\n  );\n}\n","import { useMemo, useState } from 'react';\nimport { filterSpans, TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls the state of search input that highlights spans if they match the search string.\n * @param spans\n */\nexport function useSearch(spans?: TraceSpan[]) {\n  const [search, setSearch] = useState('');\n  const spanFindMatches: Set<string> | undefined = useMemo(() => {\n    return search && spans ? filterSpans(search, spans) : undefined;\n  }, [search, spans]);\n\n  return { search, setSearch, spanFindMatches };\n}\n","import { AbsoluteTimeRange, DataQueryError, DataQueryResponse, LoadingState, SplitOpen, TimeZone } from '@grafana/data';\nimport { Alert, Button, Collapse, InlineField, TooltipDisplayMode, useStyles2, useTheme2 } from '@grafana/ui';\nimport { ExploreGraph } from './ExploreGraph';\nimport React, { useState } from 'react';\nimport { css } from '@emotion/css';\n\ntype Props = {\n  logsVolumeData?: DataQueryResponse;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n};\n\nconst SHORT_ERROR_MESSAGE_LIMIT = 100;\n\nfunction ErrorAlert(props: { error: DataQueryError }) {\n  const [isOpen, setIsOpen] = useState(false);\n  // generic get-error-message-logic, taken from\n  // /public/app/features/explore/ErrorContainer.tsx\n  const message = props.error.message || props.error.data?.message || '';\n\n  const showButton = !isOpen && message.length > SHORT_ERROR_MESSAGE_LIMIT;\n\n  return (\n    <Alert title=\"Failed to load log volume for this query\" severity=\"warning\">\n      {showButton ? (\n        <Button\n          variant=\"secondary\"\n          size=\"xs\"\n          onClick={() => {\n            setIsOpen(true);\n          }}\n        >\n          Show details\n        </Button>\n      ) : (\n        message\n      )}\n    </Alert>\n  );\n}\n\nexport function LogsVolumePanel(props: Props) {\n  const { width, logsVolumeData, absoluteRange, timeZone, splitOpen, onUpdateTimeRange, onLoadLogsVolume } = props;\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n  const height = 150;\n\n  let LogsVolumePanelContent;\n\n  if (!logsVolumeData) {\n    return null;\n  } else if (logsVolumeData?.error) {\n    return <ErrorAlert error={logsVolumeData?.error} />;\n  } else if (logsVolumeData?.state === LoadingState.Loading) {\n    LogsVolumePanelContent = <span>Log volume is loading...</span>;\n  } else if (logsVolumeData?.data) {\n    if (logsVolumeData.data.length > 0) {\n      LogsVolumePanelContent = (\n        <ExploreGraph\n          graphStyle=\"lines\"\n          loadingState={LoadingState.Done}\n          data={logsVolumeData.data}\n          height={height}\n          width={width - spacing}\n          absoluteRange={absoluteRange}\n          onChangeTime={onUpdateTimeRange}\n          timeZone={timeZone}\n          splitOpenFn={splitOpen}\n          tooltipDisplayMode={TooltipDisplayMode.Multi}\n        />\n      );\n    } else {\n      LogsVolumePanelContent = <span>No volume data.</span>;\n    }\n  }\n\n  const zoomRatio = logsLevelZoomRatio(logsVolumeData, absoluteRange);\n  let zoomLevelInfo;\n\n  if (zoomRatio !== undefined && zoomRatio < 1) {\n    zoomLevelInfo = (\n      <InlineField label=\"Reload log volume\" transparent>\n        <Button size=\"xs\" icon=\"sync\" variant=\"secondary\" onClick={onLoadLogsVolume} id=\"reload-volume\" />\n      </InlineField>\n    );\n  }\n\n  return (\n    <Collapse label=\"Log volume\" isOpen={true} loading={logsVolumeData?.state === LoadingState.Loading}>\n      <div style={{ height }} className={styles.contentContainer}>\n        {LogsVolumePanelContent}\n      </div>\n      <div className={styles.zoomInfoContainer}>{zoomLevelInfo}</div>\n    </Collapse>\n  );\n}\n\nconst getStyles = () => {\n  return {\n    zoomInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: 5px;\n    `,\n    contentContainer: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `,\n  };\n};\n\nfunction logsLevelZoomRatio(\n  logsVolumeData: DataQueryResponse | undefined,\n  selectedTimeRange: AbsoluteTimeRange\n): number | undefined {\n  const dataRange = logsVolumeData && logsVolumeData.data[0] && logsVolumeData.data[0].meta?.custom?.absoluteRange;\n  return dataRange ? (selectedTimeRange.from - selectedTimeRange.to) / (dataRange.from - dataRange.to) : undefined;\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { SelectableValue } from '@grafana/data';\nimport { RadioButtonGroup } from '@grafana/ui';\nimport { EXPLORE_GRAPH_STYLES, ExploreGraphStyle } from '../../types';\n\nconst ALL_GRAPH_STYLE_OPTIONS: Array<SelectableValue<ExploreGraphStyle>> = EXPLORE_GRAPH_STYLES.map((style) => ({\n  value: style,\n  // capital-case it and switch `_` to ` `\n  label: style[0].toUpperCase() + style.slice(1).replace(/_/, ' '),\n}));\n\nconst spacing = css({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n\ntype Props = {\n  graphStyle: ExploreGraphStyle;\n  onChangeGraphStyle: (style: ExploreGraphStyle) => void;\n};\n\nexport function ExploreGraphLabel(props: Props) {\n  const { graphStyle, onChangeGraphStyle } = props;\n  return (\n    <div className={spacing}>\n      Graph\n      <RadioButtonGroup size=\"sm\" options={ALL_GRAPH_STYLE_OPTIONS} value={graphStyle} onChange={onChangeGraphStyle} />\n    </div>\n  );\n}\n","import React, { createRef } from 'react';\nimport { css, cx } from '@emotion/css';\nimport { compose } from 'redux';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport memoizeOne from 'memoize-one';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Collapse, CustomScrollbar, ErrorBoundaryAlert, Themeable2, withTheme2 } from '@grafana/ui';\nimport { AbsoluteTimeRange, DataQuery, GrafanaTheme2, LoadingState, RawTimeRange } from '@grafana/data';\n\nimport LogsContainer from './LogsContainer';\nimport { QueryRows } from './QueryRows';\nimport TableContainer from './TableContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { splitOpen } from './state/main';\nimport { changeSize, changeGraphStyle } from './state/explorePane';\nimport { makeAbsoluteTime, updateTimeRange } from './state/time';\nimport { addQueryRow, loadLogsVolumeData, modifyQueries, scanStart, scanStopAction, setQueries } from './state/query';\nimport { ExploreGraphStyle, ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { SecondaryActions } from './SecondaryActions';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR, FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { NodeGraphContainer } from './NodeGraphContainer';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\nimport { ExploreGraph } from './ExploreGraph';\nimport { LogsVolumePanel } from './LogsVolumePanel';\nimport { ExploreGraphLabel } from './ExploreGraphLabel';\nimport appEvents from 'app/core/app_events';\nimport { AbsoluteTimeEvent } from 'app/types/events';\nimport { Unsubscribable } from 'rxjs';\nimport { getNodeGraphDataFrames } from 'app/plugins/panel/nodeGraph/utils';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    exploreMain: css`\n      label: exploreMain;\n      // Is needed for some transition animations to work.\n      position: relative;\n      margin-top: 21px;\n    `,\n    button: css`\n      label: button;\n      margin: 1em 4px 0 0;\n    `,\n    queryContainer: css`\n      label: queryContainer;\n      // Need to override normal css class and don't want to count on ordering of the classes in html.\n      height: auto !important;\n      flex: unset !important;\n      display: unset !important;\n      padding: ${theme.spacing(1)};\n    `,\n  };\n};\n\nexport interface ExploreProps extends Themeable2 {\n  exploreId: ExploreId;\n  theme: GrafanaTheme2;\n}\n\nenum ExploreDrawer {\n  RichHistory,\n  QueryInspector,\n}\n\ninterface ExploreState {\n  openDrawer?: ExploreDrawer;\n}\n\nexport type Props = ExploreProps & ConnectedProps<typeof connector>;\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\nexport class Explore extends React.PureComponent<Props, ExploreState> {\n  scrollElement: HTMLDivElement | undefined;\n  absoluteTimeUnsubsciber: Unsubscribable | undefined;\n  topOfExploreViewRef = createRef<HTMLDivElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.absoluteTimeUnsubsciber = appEvents.subscribe(AbsoluteTimeEvent, this.onMakeAbsoluteTime);\n  }\n\n  componentWillUnmount() {\n    this.absoluteTimeUnsubsciber?.unsubscribe();\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: FilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onClickFilterLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', key, value });\n  };\n\n  onClickFilterOutLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER_OUT', key, value });\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  onMakeAbsoluteTime = () => {\n    const { makeAbsoluteTime } = this.props;\n    makeAbsoluteTime();\n  };\n\n  onModifyQueries = (action: any, index?: number) => {\n    const { datasourceInstance } = this.props;\n    if (datasourceInstance?.modifyQuery) {\n      const modifier = (queries: DataQuery, modification: any) =>\n        datasourceInstance.modifyQuery!(queries, modification);\n      this.props.modifyQueries(this.props.exploreId, action, modifier, index);\n    }\n  };\n\n  onResize = (size: { height: number; width: number }) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  onChangeGraphStyle = (graphStyle: ExploreGraphStyle) => {\n    const { exploreId, changeGraphStyle } = this.props;\n    changeGraphStyle(exploreId, graphStyle);\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.RichHistory ? undefined : ExploreDrawer.RichHistory,\n      };\n    });\n  };\n\n  toggleShowQueryInspector = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.QueryInspector ? undefined : ExploreDrawer.QueryInspector,\n      };\n    });\n  };\n\n  renderEmptyState() {\n    return (\n      <div className=\"explore-container\">\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderGraphPanel(width: number) {\n    const { graphResult, absoluteRange, timeZone, splitOpen, queryResponse, loading, theme, graphStyle } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    const label = <ExploreGraphLabel graphStyle={graphStyle} onChangeGraphStyle={this.onChangeGraphStyle} />;\n    return (\n      <Collapse label={label} loading={loading} isOpen>\n        <ExploreGraph\n          graphStyle={graphStyle}\n          data={graphResult!}\n          height={400}\n          width={width - spacing}\n          absoluteRange={absoluteRange}\n          onChangeTime={this.onUpdateTimeRange}\n          timeZone={timeZone}\n          annotations={queryResponse.annotations}\n          splitOpenFn={splitOpen}\n          loadingState={queryResponse.state}\n        />\n      </Collapse>\n    );\n  }\n\n  renderLogsVolume(width: number) {\n    const { logsVolumeData, exploreId, loadLogsVolumeData, absoluteRange, timeZone, splitOpen } = this.props;\n\n    return (\n      <LogsVolumePanel\n        absoluteRange={absoluteRange}\n        width={width}\n        logsVolumeData={logsVolumeData}\n        onUpdateTimeRange={this.onUpdateTimeRange}\n        timeZone={timeZone}\n        splitOpen={splitOpen}\n        onLoadLogsVolume={() => loadLogsVolumeData(exploreId)}\n      />\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, datasourceInstance, timeZone } = this.props;\n    return (\n      <TableContainer\n        ariaLabel={selectors.pages.Explore.General.table}\n        width={width}\n        exploreId={exploreId}\n        onCellFilterAdded={datasourceInstance?.modifyQuery ? this.onCellFilterAdded : undefined}\n        timeZone={timeZone}\n      />\n    );\n  }\n\n  renderLogsPanel(width: number) {\n    const { exploreId, syncedTimes, theme, queryResponse } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    return (\n      <LogsContainer\n        exploreId={exploreId}\n        loadingState={queryResponse.state}\n        syncedTimes={syncedTimes}\n        width={width - spacing}\n        onClickFilterLabel={this.onClickFilterLabel}\n        onClickFilterOutLabel={this.onClickFilterOutLabel}\n        onStartScanning={this.onStartScanning}\n        onStopScanning={this.onStopScanning}\n      />\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse } = this.props;\n    return (\n      <NodeGraphContainer\n        dataFrames={this.memoizedGetNodeGraphDataFrames(queryResponse.series)}\n        exploreId={exploreId}\n        withTraceView={showTrace}\n      />\n    );\n  }\n\n  memoizedGetNodeGraphDataFrames = memoizeOne(getNodeGraphDataFrames);\n\n  renderTraceViewPanel() {\n    const { queryResponse, splitOpen, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && (\n        <TraceViewContainer\n          exploreId={exploreId}\n          dataFrames={dataFrames}\n          splitOpenFn={splitOpen}\n          scrollElement={this.scrollElement}\n          topOfExploreViewRef={this.topOfExploreViewRef}\n          queryResponse={queryResponse}\n        />\n      )\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      datasourceMissing,\n      exploreId,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showLogs,\n      showTrace,\n      showNodeGraph,\n      timeZone,\n    } = this.props;\n    const { openDrawer } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const showRichHistory = openDrawer === ExploreDrawer.RichHistory;\n    const showQueryInspector = openDrawer === ExploreDrawer.QueryInspector;\n\n    return (\n      <CustomScrollbar\n        autoHeightMin={'100%'}\n        scrollRefCallback={(scrollElement) => (this.scrollElement = scrollElement || undefined)}\n      >\n        <ExploreToolbar\n          exploreId={exploreId}\n          onChangeTime={this.onChangeTime}\n          topOfExploreViewRef={this.topOfExploreViewRef}\n        />\n        {datasourceMissing ? this.renderEmptyState() : null}\n        {datasourceInstance && (\n          <div className=\"explore-container\">\n            <div className={cx('panel-container', styles.queryContainer)}>\n              <QueryRows exploreId={exploreId} />\n              <SecondaryActions\n                addQueryRowButtonDisabled={isLive}\n                // We cannot show multiple traces at the same time right now so we do not show add query button.\n                //TODO:unification\n                addQueryRowButtonHidden={false}\n                richHistoryButtonActive={showRichHistory}\n                queryInspectorButtonActive={showQueryInspector}\n                onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                onClickRichHistoryButton={this.toggleShowRichHistory}\n                onClickQueryInspectorButton={this.toggleShowQueryInspector}\n              />\n              <ResponseErrorContainer exploreId={exploreId} />\n            </div>\n            <AutoSizer onResize={this.onResize} disableHeight>\n              {({ width }) => {\n                if (width === 0) {\n                  return null;\n                }\n\n                return (\n                  <main className={cx(styles.exploreMain)} style={{ width }}>\n                    <ErrorBoundaryAlert>\n                      {showPanels && (\n                        <>\n                          {showMetrics && graphResult && (\n                            <ErrorBoundaryAlert>{this.renderGraphPanel(width)}</ErrorBoundaryAlert>\n                          )}\n                          {<ErrorBoundaryAlert>{this.renderLogsVolume(width)}</ErrorBoundaryAlert>}\n                          {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                          {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel(width)}</ErrorBoundaryAlert>}\n                          {showNodeGraph && <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>}\n                          {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                        </>\n                      )}\n                      {showRichHistory && (\n                        <RichHistoryContainer\n                          width={width}\n                          exploreId={exploreId}\n                          onClose={this.toggleShowRichHistory}\n                        />\n                      )}\n                      {showQueryInspector && (\n                        <ExploreQueryInspector\n                          exploreId={exploreId}\n                          width={width}\n                          onClose={this.toggleShowQueryInspector}\n                          timeZone={timeZone}\n                        />\n                      )}\n                    </ErrorBoundaryAlert>\n                  </main>\n                );\n              }}\n            </AutoSizer>\n          </div>\n        )}\n      </CustomScrollbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps) {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    isLive,\n    graphResult,\n    logsVolumeData,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    absoluteRange,\n    queryResponse,\n    showNodeGraph,\n    loading,\n    graphStyle,\n  } = item;\n\n  return {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    isLive,\n    graphResult,\n    logsVolumeData,\n    logsResult: logsResult ?? undefined,\n    absoluteRange,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showNodeGraph,\n    loading,\n    graphStyle,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeSize,\n  changeGraphStyle,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  makeAbsoluteTime,\n  loadLogsVolumeData,\n  addQueryRow,\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(connector, withTheme2)(Explore) as React.ComponentType<{ exploreId: ExploreId }>;\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport memoizeOne from 'memoize-one';\nimport { DataQuery, ExploreUrlState, EventBusExtended, EventBusSrv } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport store from 'app/core/store';\nimport { lastSavedUrl, cleanupPaneAction } from './state/main';\nimport { initializeExplore, refreshExplore } from './state/explorePane';\nimport { ExploreId } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport {\n  DEFAULT_RANGE,\n  ensureQueries,\n  getTimeRange,\n  getTimeRangeFromUrl,\n  lastUsedDatasourceKeyForOrgId,\n  parseUrlState,\n} from 'app/core/utils/explore';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\nimport Explore from './Explore';\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  urlQuery: string;\n  split: boolean;\n}\n\ninterface Props extends OwnProps, ConnectedProps<typeof connector> {}\n\n/**\n * This component is responsible for handling initialization of an Explore pane and triggering synchronization\n * of state based on URL changes and preventing any infinite loops.\n */\nclass ExplorePaneContainerUnconnected extends React.PureComponent<Props> {\n  el: any;\n  exploreEvents: EventBusExtended;\n\n  constructor(props: Props) {\n    super(props);\n    this.exploreEvents = new EventBusSrv();\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { initialized, exploreId, initialDatasource, initialQueries, initialRange, panelsState } = this.props;\n    const width = this.el?.offsetWidth ?? 0;\n\n    // initialize the whole explore first time we mount and if browser history contains a change in datasource\n    if (!initialized) {\n      this.props.initializeExplore(\n        exploreId,\n        initialDatasource,\n        initialQueries,\n        initialRange,\n        width,\n        this.exploreEvents,\n        panelsState\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.exploreEvents.removeAllListeners();\n    this.props.cleanupPaneAction({ exploreId: this.props.exploreId });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.refreshExplore(prevProps.urlQuery);\n  }\n\n  refreshExplore = (prevUrlQuery: string) => {\n    const { exploreId, urlQuery } = this.props;\n\n    // Update state from url only if it changed and only if the change wasn't initialised by redux to prevent any loops\n    if (urlQuery !== prevUrlQuery && urlQuery !== lastSavedUrl[exploreId]) {\n      this.props.refreshExplore(exploreId, urlQuery);\n    }\n  };\n\n  getRef = (el: any) => {\n    this.el = el;\n  };\n\n  render() {\n    const exploreClass = this.props.split ? 'explore explore-split' : 'explore';\n    return (\n      <div className={exploreClass} ref={this.getRef} data-testid={selectors.pages.Explore.General.container}>\n        {this.props.initialized && <Explore exploreId={this.props.exploreId} />}\n      </div>\n    );\n  }\n}\n\nconst ensureQueriesMemoized = memoizeOne(ensureQueries);\nconst getTimeRangeFromUrlMemoized = memoizeOne(getTimeRangeFromUrl);\n\nfunction mapStateToProps(state: StoreState, props: OwnProps) {\n  const urlState = parseUrlState(props.urlQuery);\n  const timeZone = getTimeZone(state.user);\n  const fiscalYearStartMonth = getFiscalYearStartMonth(state.user);\n\n  const { datasource, queries, range: urlRange, panelsState } = (urlState || {}) as ExploreUrlState;\n  const initialDatasource = datasource || store.get(lastUsedDatasourceKeyForOrgId(state.user.orgId));\n  const initialQueries: DataQuery[] = ensureQueriesMemoized(queries);\n  const initialRange = urlRange\n    ? getTimeRangeFromUrlMemoized(urlRange, timeZone, fiscalYearStartMonth)\n    : getTimeRange(timeZone, DEFAULT_RANGE, fiscalYearStartMonth);\n\n  return {\n    initialized: state.explore[props.exploreId]?.initialized,\n    initialDatasource,\n    initialQueries,\n    initialRange,\n    panelsState,\n  };\n}\n\nconst mapDispatchToProps = {\n  initializeExplore,\n  refreshExplore,\n  cleanupPaneAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExplorePaneContainer = connector(ExplorePaneContainerUnconnected);\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreId, ExploreQueryParams } from 'app/types/explore';\nimport { ErrorBoundaryAlert } from '@grafana/ui';\nimport { lastSavedUrl, resetExploreAction, richHistoryUpdatedAction } from './state/main';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { Branding } from '../../core/components/Branding/Branding';\n\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { StoreState } from 'app/types';\nimport { locationService } from '@grafana/runtime';\n\ninterface RouteProps extends GrafanaRouteComponentProps<{}, ExploreQueryParams> {}\ninterface OwnProps {}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    navModel: getNavModel(state.navIndex, 'explore'),\n    exploreState: state.explore,\n  };\n};\n\nconst mapDispatchToProps = {\n  resetExploreAction,\n  richHistoryUpdatedAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = OwnProps & RouteProps & ConnectedProps<typeof connector>;\nclass WrapperUnconnected extends PureComponent<Props> {\n  componentWillUnmount() {\n    this.props.resetExploreAction({});\n  }\n\n  componentDidMount() {\n    lastSavedUrl.left = undefined;\n    lastSavedUrl.right = undefined;\n\n    // timeSrv (which is used internally) on init reads `from` and `to` param from the URL and updates itself\n    // using those value regardless of what is passed to the init method.\n    // The updated value is then used by Explore to get the range for each pane.\n    // This means that if `from` and `to` parameters are present in the URL,\n    // it would be impossible to change the time range in Explore.\n    // We are only doing this on mount for 2 reasons:\n    // 1: Doing it on update means we'll enter a render loop.\n    // 2: when parsing time in Explore (before feeding it to timeSrv) we make sure `from` is before `to` inside\n    //    each pane state in order to not trigger un URL update from timeSrv.\n    const searchParams = locationService.getSearchObject();\n    if (searchParams.from || searchParams.to) {\n      locationService.partial({ from: undefined, to: undefined }, true);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n    const datasourceTitle = hasSplit\n      ? `${this.props.exploreState.left.datasourceInstance?.name} | ${this.props.exploreState.right?.datasourceInstance?.name}`\n      : `${this.props.exploreState.left.datasourceInstance?.name}`;\n    const documentTitle = `${this.props.navModel.main.text} - ${datasourceTitle} - ${Branding.AppTitle}`;\n    document.title = documentTitle;\n  }\n\n  render() {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n\n    return (\n      <div className=\"page-scrollbar-wrapper\">\n        <div className=\"explore-wrapper\">\n          <ErrorBoundaryAlert style=\"page\">\n            <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.left} urlQuery={left} />\n          </ErrorBoundaryAlert>\n          {hasSplit && (\n            <ErrorBoundaryAlert style=\"page\">\n              <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.right} urlQuery={right} />\n            </ErrorBoundaryAlert>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Wrapper = connector(WrapperUnconnected);\n\nexport default Wrapper;\n","import { ExploreId, StoreState } from 'app/types';\n\nexport const isSplit = (state: StoreState) => Boolean(state.explore[ExploreId.left] && state.explore[ExploreId.right]);\n\nexport const getExploreItemSelector = (exploreId: ExploreId) => (state: StoreState) => state.explore[exploreId];\n","import { useEffect, useRef } from 'react';\nexport default function usePrevious(state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n}\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(\"production\"!==process.env.NODE_ENV){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,t):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(t.length?\" \"+t.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function r(n){return!!n&&!!n[Q]}function t(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,\"constructor\")&&r.constructor;return t===Object||\"function\"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&\"symbol\"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return\"production\"===process.env.NODE_ENV||U||n(0),U}function j(n,r){r&&(b(\"Patches\"),n.u=[],n.s=[],n.v=r)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b(\"ES5\").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b(\"Patches\").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(r,i){return A(n,e,o,r,i,t)})),x(n,o,!1),t&&n.u&&b(\"Patches\").R(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if(\"production\"!==process.env.NODE_ENV&&c===o&&n(5),r(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!r(v))return;e.m=!1}if(t(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),n.h.F&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,r,t){var e=s(r)?b(\"MapSet\").N(r,t):v(r)?b(\"MapSet\").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b(\"ES5\").J(r,t);return(t?t.A:_()).p.push(e),e}function D(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=F(r,c),u.I=!1}else e=F(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function F(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return\"production\"!==process.env.NODE_ENV&&f(r),en.get(r,n)},set:function(r){var t=this[Q];\"production\"!==process.env.NODE_ENV&&f(t),en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.O&&n(3,JSON.stringify(p(r)))}var s={};m(\"ES5\",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,\"\"+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&\"object\"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.D,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c=\"add\";m(\"Patches\",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=\"\"+i[s];0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof f&&\"prototype\"===p&&n(24),\"object\"!=typeof(f=a(f,p))&&n(15,i.join(\"/\"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case\"replace\":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return\"-\"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case\"remove\":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},R:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?\"replace\":c:\"remove\";if(v!==p||\"replace\"!==l){var d=r.concat(n);t.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:\"remove\",path:d}:\"remove\"===l?{op:c,path:d,value:f(v)}:{op:\"replace\",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:\"replace\",path:p,value:f(u[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:\"replace\",path:r.concat([\"length\"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:\"remove\",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:\"replace\",path:[],value:r===H?void 0:r}),e.push({op:\"replace\",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=R(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.O&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,\"size\",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.D.set(n,!0),t.o.set(n,r),t.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.D.set(n,!1):r.D.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(r){n.D.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=R(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,\"size\",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m(\"MapSet\",{N:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",V=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return\"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return\"'current' expects a draft, got: \"+n},23:function(n){return\"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=R(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.D[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&\"number\"!=typeof t&&(void 0!==t||r in n.o)||(n.o[r]=t,n.D[r]=!0,!0)},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.D[r]=!1,E(n),k(n)):delete n.D[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||\"length\"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return\"production\"!==process.env.NODE_ENV&&isNaN(parseInt(t))&&n(13),on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return\"production\"!==process.env.NODE_ENV&&\"length\"!==t&&isNaN(parseInt(t))&&n(14),en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.g=B,this.F=!0,this.produce=function(r,i,o){if(\"function\"==typeof r&&\"function\"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),t(r)){var c=w(e),s=R(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!r||\"object\"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.F&&d(f,!0),o){var p=[],l=[];b(\"Patches\").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if(\"function\"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return\"undefined\"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},\"boolean\"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),\"boolean\"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(r,t){var e=r&&r[Q];\"production\"!==process.env.NODE_ENV&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b(\"Patches\").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);export default fn;export{un as Immer,pn as applyPatches,K as castDraft,$ as castImmutable,ln as createDraft,D as current,J as enableAllPlugins,N as enableES5,C as enableMapSet,T as enablePatches,dn as finishDraft,d as freeze,L as immerable,r as isDraft,t as isDraftable,H as nothing,e as original,fn as produce,cn as produceWithPatches,sn as setAutoFreeze,vn as setUseProxies};\n//# sourceMappingURL=immer.esm.js.map\n"],"names":["displayOverrideRef","isHideSeriesOverride","isSystemOverrideWithRef","seriesVisibilityConfigFactory","label","mode","fieldConfig","data","overrides","displayName","currentIndex","findIndex","SeriesVisibilityChangeMode","override","createOverride","getDisplayNames","overridesCopy","Array","from","current","splice","existing","getExistingDisplayNames","length","createExtendedOverride","allFieldsAreExcluded","names","ByNamesMatcherMode","property","id","value","viz","legend","tooltip","__systemRef","matcher","FieldMatcherID","options","prefix","undefined","readOnly","properties","find","p","index","name","push","rule","isArray","excludeName","unique","Set","frame","field","fields","type","FieldType","getFieldDisplayName","add","callback","delay","savedCallback","useRef","useEffect","interval_1","setInterval","clearInterval","Time","timeInMs","className","humanize","formatTime","inSeconds","toFixed","duration","toDuration","hours","minutes","seconds","ElapsedTime","resetKey","elapsed","setElapsed","useState","useInterval","LiveLogs","PureComponent","constructor","props","super","React","event","isPaused","onPause","this","scrollTop","clientHeight","scrollHeight","currentTarget","logRowsToRender","rowsToRender","state","slice","logRows","nextProps","render","theme","timeZone","onResume","styles","logsRowsLive","css","typography","fontFamilyMonospace","bodySmall","fontSize","logsRowFade","colors","text","tinycolor","info","transparent","setAlpha","toString","logsRowsIndicator","h6","spacing","button","fullWidth","getStyles","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","onScroll","cx","ref","scrollContainerRef","map","row","dateTimeFormat","timeEpochMs","hasAnsi","LogMessageAnsi","raw","entry","uid","element","liveEndDiv","scrollTo","Button","variant","onClick","Icon","stopLive","size","LiveLogsWithTheme","withTheme2","metaContainer","secondary","metaItem","error","metaLabel","fontWeightMedium","metaValue","MetaInfoItem","memo","style","useStyles2","MetaInfoText","metaItems","item","LogsMetaRow","meta","dedupStrategy","dedupCount","showDetectedFields","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logsMetaItem","LogsDedupStrategy","kind","LogsMetaKind","some","r","MAX_CHARACTERS","renderMetaItem","Tooltip","content","placement","LogLabels","labels","LogsNavigationPages","pages","currentPageIndex","oldestLogsFirst","loading","changeTime","time","format","systemDateFormats","createPageContent","page","Spinner","logsRange","to","useTheme2","CustomScrollbar","autoHide","pagesWrapper","pagesContainer","queryRange","line","selectedBg","selectedText","background","primary","main","v1","sm","LogsNavigation","absoluteRange","logsSortOrder","onChangeTime","scrollToTopLogs","visibleRange","queries","clearCache","addResultsToCache","setPages","setCurrentPageIndex","expectedQueriesRef","expectedRangeRef","rangeSpanRef","LogsSortOrder","onFirstPage","onLastPage","newPage","newPages","isEqual","filter","sort","a","b","sortPages","olderLogsButton","navButton","indexChange","disabled","navButtonContent","newerLogsButton","navContainer","scrollToTopButton","title","ExploreGraph","height","width","loadingState","annotations","onHiddenSeriesChanged","splitOpenFn","graphStyle","tooltipDisplayMode","TooltipDisplayMode","showAllTimeSeries","setShowAllTimeSeries","baseStructureRev","setBaseStructureRev","previousData","usePrevious","structureChangesRef","compareArrayValues","compareDataFrameStructures","structureRev","setFieldConfig","defaults","color","FieldColorModeId","custom","drawStyle","GraphDrawStyle","fillOpacity","pointSize","timeRange","dateTime","dataWithConfig","useMemo","registry","createFieldConfigRegistry","getGraphFieldConfig","defaultGraphConfig","styledFieldConfig","config","produce","draft","stacking","group","StackingMode","Error","applyGraphStyle","applyFieldOverrides","replaceVariables","fieldConfigRegistry","hiddenFrames","forEach","hideFrom","every","identity","getFrameDisplayName","seriesToShow","panelContext","eventBus","appEvents","onSplitOpen","onToggleSeriesVisibility","PanelContextProvider","timeSeriesDisclaimer","disclaimerIcon","PanelRenderer","series","pluginId","onChangeTimeRange","SortOrder","displayMode","LegendDisplayMode","calcs","warning","link","SETTINGS_KEYS","UnthemedLogs","createRef","showLabels","store","showTime","wrapLogMessage","prettifyLogMessage","hiddenLogLevels","isFlipping","setState","flipOrderTimer","window","setTimeout","prevState","newSortOrder","cancelFlippingTimer","target","checked","hiddenRawLevels","level","LogLevel","preventDefault","onStartScanning","onStopScanning","key","indexOf","concat","k","memoizeOne","dedupedRows","dedupLogRows","reduce","sum","duplicates","filterLogLevels","topLogsRef","scrollIntoView","componentWillUnmount","clearTimeout","logsMeta","logsSeries","onClickFilterLabel","onClickFilterOutLabel","scanning","scanRange","showContextToggle","getFieldLinks","logsQueries","hasData","checkUnescapedContent","filteredLogs","filterRows","dedupRows","scanText","rangeUtil","infoText","onToggleLogLevel","logOptions","InlineFieldRow","InlineField","horizontalInlineLabel","InlineSwitch","onChange","horizontalInlineSwitch","onChangeLabels","onChangewrapLogMessage","onChangePrettifyLogMessage","RadioButtonGroup","Object","values","dedupType","capitalize","description","LogsDedupDescription","onChangeDedup","radioButtons","onChangeLogsSortOrder","logsSection","LogRows","deduplicatedRows","getRowContext","enableLogDetails","onClickShowDetectedField","showDetectedField","onClickHideDetectedField","hideDetectedField","noData","fill","onClickScan","onClickStopScan","Logs","shape","borderRadius","border","medium","headerButton","logsEnter","logsEnterActive","logsExit","logsExitActive","LogsCrossFadeTransition","visible","children","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","transitionDuration","classNames","enter","enterActive","exit","exitActive","LiveTailControls","controls","exploreId","dispatch","useDispatch","pause","useCallback","setPausedStateAction","resume","stop","changeRefreshInterval","RefreshPicker","runQueries","start","useLiveTailControls","LogsContainer","updateTimeRange","async","datasourceInstance","hasLogsContextSupport","getLogRowContext","rowIndex","splitOpen","range","getFieldLinksForExplore","isLive","styleOverridesForStickyNavigation","Collapse","isOpen","mapDispatchToProps","connect","explore","logsResult","logsVolumeDataProvider","logsVolumeData","getTimeZone","user","rows","QueryRows","getQueries","getDatasourceInstanceSettings","getQueryResponse","getHistory","getEventBridge","exploreItemSelector","getExploreItemSelector","createSelector","s","queryResponse","history","eventBridge","getDatasourceSrv","getInstanceSettings","makeSelectors","useSelector","dsSettings","onRunQueries","newQueries","changeQueriesAction","onAddQuery","query","refId","getNextRefIdChar","QueryEditorRows","onQueriesChange","app","CoreApp","connector","loadingInState","tableResult","TableContainer","getTableHeight","Math","max","min","onCellFilterAdded","ariaLabel","tableWidth","PANEL_BORDER","dataFrame","v","getLinks","valueRowIndex","Table","stylesFactory","container","lg","input","switch","md","retentionPeriodOptions","RichHistorySettings","retentionPeriod","starredTabAsFirstTab","activeDatasourceOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","useTheme","selectedOption","Field","MAX_HISTORY_ITEMS","Select","menuShouldPortal","Switch","weight","bold","ShowConfirmModalEvent","yesText","icon","onConfirm","notifyApp","createSuccessNotification","changeDatasource","deleteHistoryItem","commentHistoryItem","starHistoryItem","setQueries","isRemoved","rigtColumnWidth","rigtColumnContentWidth","cardColor","bg2","queryCard","border1","radius","palette","orange","cardRow","xs","base","datasourceContainer","semibold","queryActionButtons","queryContainer","queryRow","updateCommentContainer","comment","regular","commentButtonRow","textArea","runButton","dsImg","activeUpdateComment","setActiveUpdateComment","setComment","queryDsInstance","setQueryDsInstance","ds","getDataSourceSrv","get","datasourceName","getQueryDsInstance","onUpdateComment","onCancelUpdateComment","updateComment","TextArea","placeholder","e","IconButton","queriesToCopy","q","createQueryText","join","copyStringToClipboard","createUrlFromRichHistory","createAndCopyShortLink","starred","iconType","onKeyDown","keyEvent","shiftKey","ctrlKey","src","i","queryText","queriesToRun","importQueries","bgColor","isLight","gray5","dark4","sliderHeight","containerContent","containerSlider","slider","selectors","filterInput","multiselect","xxs","sessionName","heading","h4","footer","light","RichHistoryQueriesTab","datasourceFilters","onSelectDatasourceFilters","onChangeSortOrder","sortOrder","timeFilter","setTimeFilter","setData","searchInput","setSearchInput","debouncedSearchInput","setDebouncedSearchInput","useDebounce","datasourcesRetrievedFromQueryHistory","uniqBy","d","listOfDatasources","createDatasourcesList","filterAndSortQueries","filteredQueries","mappedQueriesToHeadings","mapQueriesToHeadings","mapNumbertoTimeInSlider","RangeSlider","tooltipAlwaysVisible","orientation","formatTooltipResult","reverse","onAfterChange","MultiSelect","FilterInput","sortOrderOptions","order","keys","idx","imgUrl","RichHistoryStarredTab","starredQueries","Tabs","UnThemedRichHistory","RICH_HISTORY_SETTING_KEYS","console","updateFilters","activeDatasourceInstance","componentDidMount","componentDidUpdate","prevProps","richHistory","onClose","firstTab","tabs","RichHistory","Starred","Settings","toggleActiveDatasourceOnly","TabbedContainer","defaultTab","closeIconTooltip","withTheme","extendStatics","__extends","setPrototypeOf","__proto__","prototype","hasOwnProperty","call","__","create","__assign","assign","t","n","arguments","apply","top","left","cursor","right","bottom","topRight","position","bottomRight","bottomLeft","topLeft","Resizer","_super","_this","onMouseDown","onResizeStart","direction","onTouchStart","userSelect","replaceStyles","DEFAULT_SIZE","clamp","snap","round","hasDirection","dir","RegExp","test","isTouchEvent","Boolean","touches","findClosestSnap","snapArray","snapGap","closestGapIndex","prev","curr","abs","gap","endsWith","str","searchStr","substr","getStringSize","getPixelSize","parentSize","innerWidth","innerHeight","Number","replace","calculateNewMax","maxWidth","maxHeight","minWidth","minHeight","definedProps","baseClassName","Resizable","ratio","resizable","parentLeft","parentTop","resizableLeft","resizableRight","resizableTop","resizableBottom","targetLeft","targetTop","appendBase","parent","parentNode","document","createElement","transform","flex","classList","appendChild","removeBase","removeChild","c","isResizing","propsSize","original","x","y","backgroundStyle","backgroundColor","opacity","zIndex","flexBasis","bind","onMouseMove","onMouseUp","defineProperty","enumerable","configurable","ownerDocument","defaultView","defaultSize","orgWidth","offsetWidth","orgHeight","offsetHeight","orgPosition","getSize","getParentSize","wrapChanged","wrap","flexWrap","bindEvents","addEventListener","capture","passive","unbindEvents","removeEventListener","computedStyle","getComputedStyle","createSizeForCssProperty","newSize","calculateNewMaxFromBoundary","boundWidth","boundHeight","boundsByDirection","widthByDirection","heightByDirection","bounds","parent_1","isFinite","calculateNewSizeFromDirection","clientX","clientY","scale","resizeRatio","_a","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","calculateNewSizeFromAspectRatio","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","setBoundingClientRect","parent_2","parentRect","getBoundingClientRect","targetRect","top_1","nativeEvent","isMouseEvent","parent_3","flexDirection","flexDir","startsWith","TouchEvent","stopPropagation","_c","boundaryMax","grid","newGridWidth","newGridHeight","delta","newState","onResize","onResizeStop","updateSize","renderResizer","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","extendsProps","acc","sizeStyle","boxSizing","flexShrink","Wrapper","as","defaultProps","drawerSlide","keyframes","weak","shadows","z3","sidemenu","drawerActive","rzHandle","shade","ExploreDrawer","drawerWidth","loadRichHistory","setHeight","_e","_dir","dataFrames","statsTab","InspectStatsTab","request","timezone","jsonTab","InspectJSONTab","dataTab","InspectDataTab","isLoading","withTransforms","withFieldConfig","QueryInspector","onRefreshQuery","errorTab","InspectErrorTab","TimeSyncButton","isSynced","ToolbarButton","ExploreTimeControls","Component","getShiftedTimeRange","dateTimeForTimeZone","onMoveTimePicker","adjustedFrom","dateMath","adjustedTo","getZoomedTimeRange","fiscalYearStartMonth","splitted","syncedTimes","onChangeTimeSync","hideText","onChangeTimeZone","onChangeFiscalYearStartMonth","timeSyncButton","timePickerCommonProps","onMoveBackward","onMoveBack","onMoveForward","onZoom","TimePickerWithHistory","onChangeTimePicker","LiveTailButton","buttonVariant","onClickMain","ButtonGroup","iconOnly","stopButtonEnter","stopButtonEnterActive","stopButtonExit","stopButtonExitActive","RunButton","isSmall","onRun","onChangeRefreshInterval","refreshInterval","showDropdown","intervals","getTimeSrv","getValidIntervals","defaultIntervals","onIntervalChanged","onRefresh","noIntervalPicker","AddToDashboard","lazy","then","default","UnConnectedExploreToolbar","cancelQueries","syncTimes","datasourceMissing","closeSplit","split","hasLiveOption","containerWidth","topOfExploreViewRef","showSmallDataSourcePicker","showSmallTimePicker","PageToolbar","ExploreId","pageIcon","leftItems","DashNavButton","location","href","DataSourcePicker","onChangeDatasource","hideTextValue","ToolbarButtonRow","Suspense","fallback","onRunQuery","SetInterval","func","interval","splitClose","updateTimeZoneForSession","updateFiscalYearStartMonthForSession","ExploreToolbar","exploreItem","streaming","getFiscalYearStartMonth","isSplit","NoDataSourceCallToAction","canCreateDataSource","contextSrv","AccessControlAction","rel","ctaElement","LinkButton","cardClassName","breakpoints","CallToActionCard","callToActionElement","message","SecondaryActions","containerMargin","HorizontalGroup","addQueryRowButtonHidden","onClickAddQueryRowButton","addQueryRowButtonDisabled","richHistoryButtonActive","onClickRichHistoryButton","queryInspectorButtonActive","onClickQueryInspectorButton","warningText","NodeGraphContainer","withTraceView","useLinks","frames","nodes","useCategorizeFrames","open","toggleOpen","useToggle","countWarning","Badge","collapsible","onToggle","NodeGraph","FadeIn","defaultStyle","transition","transitionStyles","exited","display","entering","entered","exiting","Transition","onExited","ErrorContainer","queryError","showError","alertWithTopMargin","Alert","severity","ResponseErrorContainer","LoadingState","createSpanLinkFactory","traceToLogsOptions","f","links","span","dataFrameRowIndex","getTimeRangeFromSpan","datasourceUid","dataSourceSettings","isSplunkDS","dataLink","tags","filterByTraceID","filterBySpanID","mapTagNamesEnabled","mappedTags","keysToCheck","defaultKeys","process","tag","keyValue","includes","expr","traceID","spanID","url","internal","getLinkForLoki","getLinkForSplunk","mapInternalLinkToExplore","internalLink","scopedVars","startMs","spanStartTimeShift","endMs","spanEndTimeShift","onClickFn","getTemplateSrv","legacyCreateSpanLinkFactory","timeShift","adjustedStartTime","floor","startTime","spanEndMs","adjustedEndTime","makeDetailSubsectionToggle","subSection","detailStates","setDetailStates","old","detailState","toggleTags","toggleProcess","toggleWarnings","toggleReferences","toggleStackTraces","toggleLogs","newDetailStates","Map","set","noop","TraceView","expandOne","expandAll","collapseOne","collapseAll","childrenToggle","childrenHiddenIDs","spanFindMatches","traceProp","toggleDetail","detailLogItemToggle","detailLogsToggle","detailProcessToggle","detailReferencesToggle","detailReferenceItemToggle","detailTagsToggle","detailWarningsToggle","detailStackTracesToggle","has","delete","DetailState","log","toggleLogItem","reference","toggleReferenceItem","useDetailState","removeHoverIndentGuideId","addHoverIndentGuideId","hoverIndentGuideIds","setHoverIndentGuideIds","newHoverIndentGuideIds","useHoverIndentGuide","viewRange","updateViewRangeTime","updateNextViewRangeTime","setViewRange","update","prevRange","end","useViewRange","spanNameColumnWidth","setSpanNameColumnWidth","slim","setSlim","datasource","focusedSpanId","createFocusSpanLink","panelState","panelsState","trace","spanId","setFocusedSpanId","changePanelState","traceId","useFocusSpanLink","traceTimeline","shouldScrollToFirstUiFindMatch","jsonData","tracesToLogs","createSpanLink","onSlimViewClicked","canCollapse","hideMap","hideSummary","onTraceGraphViewClicked","slimView","registerAccessors","scrollToFirstVisibleSpan","findMatchesIDs","focusSpan","createLinkToExternalSpan","clearShouldScrollToFirstUiFindMatch","detailToggle","setTrace","linksGetter","uiFind","search","scrollElement","focusedSpanIdForSearch","UiFindInput","allowClear","inputProps","suffix","clearUiFind","Input","trackFindFunction","TracePageSearchBar","navbarFixed","z2","TracePageSearchBarBar","TracePageSearchBarSuffix","TracePageSearchBarBtn","TracePageSearchBarBtnDisabled","TracePageSearchBarLocateBtn","navigable","nextResult","prevResult","onSearchValueChange","searchValue","searchBarSuffix","btnClass","uiFindInputInputProps","ubFlexAuto","ubJustifyEnd","transformDataFrames","view","DataFrameView","processes","serviceName","serviceTags","spans","toArray","references","parentSpanID","refType","processID","flags","logs","l","timestamp","transformTraceDataFrame","transformTraceData","shouldDisableCollapse","allSpans","hiddenSpansIds","hasChildren","TraceViewContainer","setSearch","filterSpans","useSearch","setChildrenHiddenIDs","prevExpandedDepth","expandNextHiddenSpan","newChildrenHiddenIDs","res","depth","nearestCollapsedAncestor","curSpan","useChildrenState","setFocusedSpanIdForSearch","setSearchBarSuffix","getSearchBarSuffix","spanMatches","prevMatchedIndex","ErrorAlert","setIsOpen","showButton","LogsVolumePanel","onUpdateTimeRange","onLoadLogsVolume","parseInt","LogsVolumePanelContent","zoomRatio","selectedTimeRange","dataRange","logsLevelZoomRatio","zoomLevelInfo","contentContainer","zoomInfoContainer","ALL_GRAPH_STYLE_OPTIONS","EXPLORE_GRAPH_STYLES","toUpperCase","justifyContent","ExploreGraphLabel","onChangeGraphStyle","Explore","rawRange","operator","FILTER_FOR_OPERATOR","FILTER_OUT_OPERATOR","onModifyQueries","queryKeys","addQueryRow","makeAbsoluteTime","action","modifyQuery","modifier","modification","modifyQueries","changeSize","scanStart","scanStopAction","changeGraphStyle","openDrawer","getNodeGraphDataFrames","absoluteTimeUnsubsciber","AbsoluteTimeEvent","onMakeAbsoluteTime","unsubscribe","renderEmptyState","renderGraphPanel","graphResult","renderLogsVolume","loadLogsVolumeData","renderTablePanel","renderLogsPanel","renderNodeGraphPanel","showTrace","memoizedGetNodeGraphDataFrames","renderTraceViewPanel","preferredVisualisationType","showMetrics","showTable","showLogs","showNodeGraph","exploreMain","showPanels","showRichHistory","showQueryInspector","autoHeightMin","scrollRefCallback","toggleShowRichHistory","toggleShowQueryInspector","disableHeight","ErrorBoundaryAlert","compose","ExplorePaneContainerUnconnected","prevUrlQuery","urlQuery","lastSavedUrl","refreshExplore","el","exploreEvents","EventBusSrv","initialized","initialDatasource","initialQueries","initialRange","initializeExplore","removeAllListeners","cleanupPaneAction","exploreClass","getRef","ensureQueriesMemoized","ensureQueries","getTimeRangeFromUrlMemoized","getTimeRangeFromUrl","urlState","parseUrlState","urlRange","lastUsedDatasourceKeyForOrgId","orgId","getTimeRange","DEFAULT_RANGE","ExplorePaneContainer","resetExploreAction","richHistoryUpdatedAction","navModel","getNavModel","navIndex","exploreState","WrapperUnconnected","searchParams","locationService","queryParams","datasourceTitle","documentTitle","Branding","hasSplit","monadic","fn","cache","serializer","arg","cacheKey","computedValue","variadic","args","assemble","context","strategy","serialize","strategyDefault","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","cacheDefault","module","exports","strategies","Q","getPrototypeOf","Function","Z","L","o","nn","u","X","rn","writable","clear","h","freeze","isFrozen","tn","_","U","j","O","g","S","w","m","P","M","H","A","I","R","D","F","z","getOwnPropertyDescriptor","E","N","T","C","en","on","Proxy","revocable","revoke","proxy","J","K","G","W","Symbol","B","Reflect","for","iterator","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","getOwnPropertyDescriptors","deleteProperty","un","Promise","produceWithPatches","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","finishDraft","applyPatches","path","op","$","an"],"sourceRoot":""}