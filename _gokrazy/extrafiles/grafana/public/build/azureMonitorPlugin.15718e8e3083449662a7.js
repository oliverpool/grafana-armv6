"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[2364],{"./public/app/plugins/datasource/grafana-azure-monitor-datasource/module.ts":(e,s,t)=>{t.r(s),t.d(s,{plugin:()=>Be});var r=t("./packages/grafana-data/src/index.ts"),o=t("./public/app/features/templating/template_srv.ts"),a=t("../../opt/drone/yarncache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js"),i=t.n(a),n=t("../../opt/drone/yarncache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/observable/forkJoin.js"),c=t("../../opt/drone/yarncache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/observable/of.js"),u=t("../../opt/drone/yarncache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/operators/map.js"),p=t("./packages/grafana-runtime/src/index.ts"),l=t("../../opt/drone/yarncache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/observable/from.js"),d=t("../../opt/drone/yarncache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),m=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/components/ResourcePicker/utils.ts"),g=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/types/index.ts");const h=Symbol("Concealed client secret");function f(e){return e.jsonData.azureAuthType?e.jsonData.azureAuthType:e.jsonData.tenantId&&e.jsonData.clientId?"clientsecret":p.config.azure.managedIdentityEnabled?"msi":"clientsecret"}function y(){switch(p.config.azure.cloud){case g._v.Public:case g._v.None:case void 0:return"azuremonitor";case g._v.China:return"chinaazuremonitor";case g._v.USGovernment:return"govazuremonitor";case g._v.Germany:return"germanyazuremonitor";default:throw new Error(`The cloud '${p.config.azure.cloud}' not supported.`)}}function v(e){switch(e){case"azuremonitor":return"https://portal.azure.com";case"chinaazuremonitor":return"https://portal.azure.cn";case"govazuremonitor":return"https://portal.azure.us";case"germanyazuremonitor":return"https://portal.microsoftazure.de";default:throw new Error("The cloud not supported.")}}function b(e){switch(f(e)){case"msi":return y();case"clientsecret":return e.jsonData.cloudName||y()}}function N(e){if(e.secureJsonFields.clientSecret)return h;{var s;const t=null===(s=e.secureJsonData)||void 0===s?void 0:s.clientSecret;return"string"==typeof t&&t.length>0?t:void 0}}function S(e){switch(f(e)){case"msi":return p.config.azure.managedIdentityEnabled?{authType:"msi",defaultSubscriptionId:e.jsonData.subscriptionId}:{authType:"clientsecret",azureCloud:y()};case"clientsecret":return{authType:"clientsecret",azureCloud:e.jsonData.cloudName||y(),tenantId:e.jsonData.tenantId,clientId:e.jsonData.clientId,clientSecret:N(e),defaultSubscriptionId:e.jsonData.subscriptionId}}}class w{constructor(e,s,t){this.rawQueryString=e,this.options=s,this.defaultTimeField=t,this.rawQueryString=e,this.options=s,this.defaultTimeField=t}generate(){let e=this.rawQueryString;const s=/\$__([_a-zA-Z0-9]+)\(([^()]*)\)/gi;e=e.replace(s,((e,s,t)=>"contains"===s?this.getMultiContains(t):e)),e=e.replace(/\$__escapeMulti\(('[^]*')\)/gi,((e,s)=>this.escape(s))),this.options&&(e=e.replace(s,((e,s,t)=>"timeFilter"===s?this.getTimeFilter(t,this.options):"timeFrom"===s?this.getFrom(this.options):"timeTo"===s?this.getUntil(this.options):e)),e=e.replace(/\$__interval/gi,this.options.interval));const t=e;e=encodeURIComponent(e);return{uriString:`query=${e}`,rawQuery:t}}getFrom(e){const s=e.range.from;return`datetime(${(0,r.dateTime)(s).startOf("minute").toISOString()})`}getUntil(e){var s;if("now"===(null===(s=e.rangeRaw)||void 0===s?void 0:s.to)){const e=Date.now();return`datetime(${(0,r.dateTime)(e).startOf("minute").toISOString()})`}{const s=e.range.to;return`datetime(${(0,r.dateTime)(s).startOf("minute").toISOString()})`}}getTimeFilter(e,s){var t;const r=e||this.defaultTimeField;return"now"===(null===(t=s.rangeRaw)||void 0===t?void 0:t.to)?`${r} >= ${this.getFrom(s)}`:`${r}  >= ${this.getFrom(s)} and ${r} <= ${this.getUntil(s)}`}getMultiContains(e){const s=e.indexOf(","),t=e.substring(0,s),r=e.substring(e.indexOf(",")+1);return r&&"all"===r.toLowerCase().trim()?"1 == 1":`${t.trim()} in (${r.trim()})`}escape(e){return e.substring(1,e.length-1).split("','").map((e=>`@'${e}'`)).join(", ")}}var M=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/utils/common.ts");class T{constructor(e){this.results=e,this.results=e}parseQueryResult(){let e=[],s=[];for(let t=0;t<this.results.length;t++){if(0===this.results[t].result.tables.length)continue;s=this.results[t].result.tables[0].columns;const r=this.results[t].result.tables[0].rows;e="time_series"===this.results[t].query.resultFormat?(0,a.concat)(e,this.parseTimeSeriesResult(this.results[t].query,s,r)):(0,a.concat)(e,this.parseTableResult(this.results[t].query,s,r))}return e}parseTimeSeriesResult(e,s,t){const r=[];let o=-1,i=-1,n=-1;for(let e=0;e<s.length;e++)-1===o&&"datetime"===s[e].type&&(o=e),-1===i&&"string"===s[e].type&&(i=e),-1===n&&["int","long","real","double"].indexOf(s[e].type)>-1&&(n=e);if(-1===o)throw new Error("No datetime column found in the result. The Time Series format requires a time column.");return(0,a.forEach)(t,(t=>{const a=T.dateTimeToEpoch(t[o]),c=i>-1?t[i]:s[n].name,u=T.findOrCreateBucket(r,c);u.datapoints.push([t[n],a]),u.refId=e.refId,u.meta={executedQueryString:e.query}})),r}parseTableResult(e,s,t){return{type:"table",columns:(0,a.map)(s,(e=>({text:e.name,type:e.type}))),rows:t,refId:e.refId,meta:{executedQueryString:e.query}}}parseToVariables(){const e=this.parseQueryResult(),s=[];return(0,a.forEach)(e,(e=>{(0,a.forEach)((0,a.flattenDeep)(e.rows),(e=>{s.push({text:e,value:e})}))})),s}transformToAnnotations(e){const s=this.parseQueryResult(),t=[];return(0,a.forEach)(s,(s=>{let r=-1,o=-1,i=-1;for(let e=0;e<s.columns.length;e++)-1===r&&"datetime"===s.columns[e].type&&(r=e),-1===o&&"text"===s.columns[e].text.toLowerCase()&&(o=e),-1===i&&"tags"===s.columns[e].text.toLowerCase()&&(i=e);(0,a.forEach)(s.rows,(s=>{t.push({annotation:e.annotation,time:Math.floor(T.dateTimeToEpoch(s[r])),text:s[o]?s[o].toString():"",tags:s[i]?s[i].trim().split(/\s*,\s*/):[]})}))})),t}static findOrCreateBucket(e,s){let t=(0,a.find)(e,["target",s]);return t||(t={target:s,datapoints:[],refId:"",query:""},e.push(t)),t}static dateTimeToEpoch(e){return(0,r.dateTime)(e).valueOf()}static parseSubscriptions(e){const s=[];if(!e)return s;const t="subscriptionId";for(let r=0;r<e.value.length;r++)(0,a.find)(s,["value",(0,a.get)(e.value[r],t)])||s.push({text:`${(0,a.get)(e.value[r],"displayName")}`,value:(0,a.get)(e.value[r],t)});return s}}const L=/([\w\W]+):([\w]+)(?:\s?=\s?([\w\W]+))?/;function k(e){return e.functions?e.functions.map((e=>{const s=e.parameters&&e.parameters.split(", ").map((e=>{const s=e.match(L);if(!s)return;const[,t,r,o]=s;return{name:t,type:r,defaultValue:o,cslDefaultValue:o}})).filter((e=>!!e));return{name:e.name,body:e.body,inputParameters:s||[]}})):[]}function A(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}class I extends p.DataSourceWithBackend{constructor(e){super(e),A(this,"resourcePath",void 0),A(this,"azurePortalUrl",void 0),A(this,"defaultSubscriptionId",void 0),A(this,"azureMonitorPath",void 0),A(this,"firstWorkspace",void 0),A(this,"cache",void 0),this.instanceSettings=e,this.instanceSettings=e,this.cache=new Map,this.resourcePath=`${M.kr.logAnalytics}`,this.azureMonitorPath=`${M.kr.azureMonitor}/subscriptions`;const s=b(e);this.azurePortalUrl=v(s),this.defaultSubscriptionId=this.instanceSettings.jsonData.subscriptionId||""}isConfigured(){return!this.validateDatasource()}filterQuery(e){var s;return!(!0===e.hide||null===(s=e.azureLogAnalytics)||void 0===s||!s.query||!e.azureLogAnalytics.resource&&!e.azureLogAnalytics.workspace)}async getSubscriptions(){if(!this.isConfigured())return[];const e=`${this.azureMonitorPath}?api-version=2019-03-01`;return await this.getResource(e).then((e=>T.parseSubscriptions(e)))}async getWorkspaces(e){const s=await this.getWorkspaceList(e);return(0,a.map)(s.value,(e=>({text:e.name,value:e.id})))||[]}getWorkspaceList(e){const s=(0,p.getTemplateSrv)().replace(e||this.defaultSubscriptionId),t=this.azureMonitorPath+`/${s}/providers/Microsoft.OperationalInsights/workspaces?api-version=2017-04-26-preview`;return this.getResource(t)}async getMetadata(e){const s=`${this.resourcePath}/v1${e}/metadata`;return await this.getResource(s)}async getKustoSchema(e){const s=(0,p.getTemplateSrv)(),t=s.replace(e,{},M.Ll);return function(e,s,t){const r={name:s,tables:e.tables,functions:k(e),majorVersion:0,minorVersion:0};r.functions.push({name:"$__timeFilter",body:"{ true }",inputParameters:[{name:"timeColumn",type:"System.String",defaultValue:"TimeGenerated",cslDefaultValue:"TimeGenerated"}]},{name:"$__timeFrom",body:"{ datetime(2018-06-05T18:09:58.907Z) }",inputParameters:[]},{name:"$__timeTo",body:"{ datetime(2018-06-05T20:09:58.907Z) }",inputParameters:[]},{name:"$__escapeMulti",body:"{ @'\\grafana-vmNetwork(eth0)Total', @'\\hello!'}",inputParameters:[{name:"$myVar",type:"System.String",defaultValue:"$myVar",cslDefaultValue:"$myVar"}]},{name:"$__contains",body:"{ colName in ('value1','value2') }",inputParameters:[{name:"colName",type:"System.String",defaultValue:"colName",cslDefaultValue:"colName"},{name:"$myVar",type:"System.String",defaultValue:"$myVar",cslDefaultValue:"$myVar"}]});const o=t.map((e=>({name:`$${e.name}`,type:"dynamic"})));return o.push({name:"$__timeFilter",type:"boolean"}),{clusterType:"Engine",cluster:{connectionString:s,databases:[r]},database:r,globalParameters:o}}(await this.getMetadata(t),t,s.getVariables())}applyTemplateVariables(e,s){const t=e.azureLogAnalytics;if(!t)return e;const r=(0,p.getTemplateSrv)(),o=r.replace(t.resource,s);let a=r.replace(t.workspace,s);a||o||!this.firstWorkspace||(a=this.firstWorkspace);const i=r.replace(t.query,s,M.Ll);return{refId:e.refId,queryType:g.Bj.LogAnalytics,azureLogAnalytics:{resultFormat:t.resultFormat,query:i,resource:o,workspace:a}}}query(e){return super.query(e).pipe((0,d.z)((e=>(0,l.D)(this.processResponse(e)))))}async processResponse(e){if(e.data)for(const r of e.data){var s,t;const e=null===(s=r.meta)||void 0===s||null===(t=s.custom)||void 0===t?void 0:t.encodedQuery;if(e&&e.length>0){const e=await this.buildDeepLink(r.meta.custom);if(null!=e&&e.length)for(const s of r.fields)s.config.links=[{url:e,title:"View in Azure Portal",targetBlank:!0}]}}return e}async buildDeepLink(e){const s=encodeURIComponent(e.encodedQuery),t=e.workspace,r=e.subscription,o=await this.getWorkspaceDetails(t);if(!o.workspace||!o.resourceGroup)return"";return`${this.azurePortalUrl}/#blade/Microsoft_OperationsManagementSuite_Workspace/AnalyticsBlade/initiator/AnalyticsShareLinkToQuery/isQueryEditorVisible/true/scope/%7B%22resources%22%3A%5B%7B%22resourceId%22%3A%22%2Fsubscriptions%2F${r}%2Fresourcegroups%2F${o.resourceGroup}%2Fproviders%2Fmicrosoft.operationalinsights%2Fworkspaces%2F${o.workspace}%22%7D%5D%7D/query/${s}/isQueryBase64Compressed/true/timespanInIsoFormat/P1D`}async getWorkspaceDetails(e){if(!this.defaultSubscriptionId)return{};const s=(await this.getWorkspaceList(this.defaultSubscriptionId)).value.find((s=>s.properties.customerId===e));if(!s)return{};const t=/.*resourcegroups\/(.*)\/providers.*/.exec(s.id);return!t||t.length<2?{}:{workspace:s.name,resourceGroup:t[1]}}getDeprecatedDefaultWorkSpace(){return this.instanceSettings.jsonData.logAnalyticsDefaultWorkspace}buildQuery(e,s,t){const r=new w((0,p.getTemplateSrv)().replace(e,{},M.Ll),s,"TimeGenerated").generate().uriString,o=(0,m.uD)(t)?`${this.resourcePath}/v1/workspaces/${t}/query?${r}`:`${this.resourcePath}/v1${t}/query?${r}`;return[{datasource:this.getRef(),path:o,resultFormat:"table"}]}async getDefaultOrFirstSubscription(){var e;if(this.defaultSubscriptionId)return this.defaultSubscriptionId;return null===(e=(await this.getSubscriptions())[0])||void 0===e?void 0:e.value}async getFirstWorkspace(){var e;if(this.firstWorkspace)return this.firstWorkspace;const s=await this.getDefaultOrFirstSubscription();if(!s)return;const t=null===(e=(await this.getWorkspaces(s))[0])||void 0===e?void 0:e.value;return t&&(this.firstWorkspace=t),t}annotationQuery(e){if(!e.annotation.rawQuery)return Promise.reject({message:"Query missing in annotation definition"});const s=this.buildQuery(e.annotation.rawQuery,e,e.annotation.workspace),t=this.doQueries(s);return Promise.all(t).then((s=>new T(s).transformToAnnotations(e)))}doQueries(e){return(0,a.map)(e,(e=>this.getResource(e.path).then((s=>({result:s,query:e}))).catch((s=>{throw{error:s,query:e}}))))}async testDatasource(){const e=this.validateDatasource();if(e)return e;let s;try{const e=await this.getFirstWorkspace();if(!e)return{status:"error",message:"Workspace not found."};s=e}catch(e){let s="Azure Log Analytics requires access to Azure Monitor but had the following error: ";return{status:"error",message:this.getErrorMessage(s,e)}}try{const e=(0,m.uD)(s)?`${this.resourcePath}/v1/workspaces/${s}/metadata`:`${this.resourcePath}/v1${s}/metadata`;return await this.getResource(e).then((e=>({status:"success",message:"Successfully queried the Azure Log Analytics service.",title:"Success"})))}catch(e){let s="Azure Log Analytics: ";return{status:"error",message:this.getErrorMessage(s,e)}}}getErrorMessage(e,s){return e+=s.statusText?s.statusText+": ":"",s.data&&s.data.error&&s.data.error.code?e+=s.data.error.code+". "+s.data.error.message:s.data&&s.data.error?e+=s.data.error:s.data?e+=s.data:e+="Cannot connect to Azure Log Analytics REST API.",e}validateDatasource(){if("clientsecret"===f(this.instanceSettings)){if(!this.isValidConfigField(this.instanceSettings.jsonData.tenantId))return{status:"error",message:"The Tenant Id field is required."};if(!this.isValidConfigField(this.instanceSettings.jsonData.clientId))return{status:"error",message:"The Client Id field is required."}}}isValidConfigField(e){return"string"==typeof e&&e.length>0}}var D=t("./public/app/features/dashboard/services/TimeSrv.ts");const j=[{location:"eastus",displayName:"East US",supportsLogs:!0},{location:"eastus2",displayName:"East US 2",supportsLogs:!0},{location:"southcentralus",displayName:"South Central US",supportsLogs:!0},{location:"westus2",displayName:"West US 2",supportsLogs:!0},{location:"westus3",displayName:"West US 3",supportsLogs:!0},{location:"australiaeast",displayName:"Australia East",supportsLogs:!0},{location:"southeastasia",displayName:"Southeast Asia",supportsLogs:!0},{location:"northeurope",displayName:"North Europe",supportsLogs:!0},{location:"uksouth",displayName:"UK South",supportsLogs:!0},{location:"westeurope",displayName:"West Europe",supportsLogs:!0},{location:"centralus",displayName:"Central US",supportsLogs:!0},{location:"northcentralus",displayName:"North Central US",supportsLogs:!0},{location:"westus",displayName:"West US",supportsLogs:!0},{location:"southafricanorth",displayName:"South Africa North",supportsLogs:!0},{location:"centralindia",displayName:"Central India",supportsLogs:!0},{location:"eastasia",displayName:"East Asia",supportsLogs:!0},{location:"japaneast",displayName:"Japan East",supportsLogs:!0},{location:"jioindiawest",displayName:"Jio India West",supportsLogs:!0},{location:"koreacentral",displayName:"Korea Central",supportsLogs:!0},{location:"canadacentral",displayName:"Canada Central",supportsLogs:!0},{location:"francecentral",displayName:"France Central",supportsLogs:!0},{location:"germanywestcentral",displayName:"Germany West Central",supportsLogs:!0},{location:"norwayeast",displayName:"Norway East",supportsLogs:!0},{location:"switzerlandnorth",displayName:"Switzerland North",supportsLogs:!0},{location:"uaenorth",displayName:"UAE North",supportsLogs:!0},{location:"brazilsouth",displayName:"Brazil South",supportsLogs:!0},{location:"centralusstage",displayName:"Central US (Stage)",supportsLogs:!0},{location:"eastusstage",displayName:"East US (Stage)",supportsLogs:!0},{location:"eastus2stage",displayName:"East US 2 (Stage)",supportsLogs:!0},{location:"northcentralusstage",displayName:"North Central US (Stage)",supportsLogs:!0},{location:"southcentralusstage",displayName:"South Central US (Stage)",supportsLogs:!0},{location:"westusstage",displayName:"West US (Stage)",supportsLogs:!0},{location:"westus2stage",displayName:"West US 2 (Stage)",supportsLogs:!0},{location:"asia",displayName:"Asia",supportsLogs:!0},{location:"asiapacific",displayName:"Asia Pacific",supportsLogs:!0},{location:"australia",displayName:"Australia",supportsLogs:!0},{location:"brazil",displayName:"Brazil",supportsLogs:!0},{location:"canada",displayName:"Canada",supportsLogs:!0},{location:"europe",displayName:"Europe",supportsLogs:!0},{location:"global",displayName:"Global",supportsLogs:!0},{location:"india",displayName:"India",supportsLogs:!0},{location:"japan",displayName:"Japan",supportsLogs:!0},{location:"uk",displayName:"United Kingdom",supportsLogs:!0},{location:"unitedstates",displayName:"United States",supportsLogs:!0},{location:"eastasiastage",displayName:"East Asia (Stage)",supportsLogs:!0},{location:"southeastasiastage",displayName:"Southeast Asia (Stage)",supportsLogs:!0},{location:"westcentralus",displayName:"West Central US",supportsLogs:!0},{location:"southafricawest",displayName:"South Africa West",supportsLogs:!0},{location:"australiacentral",displayName:"Australia Central",supportsLogs:!0},{location:"australiacentral2",displayName:"Australia Central 2",supportsLogs:!0},{location:"australiasoutheast",displayName:"Australia Southeast",supportsLogs:!0},{location:"japanwest",displayName:"Japan West",supportsLogs:!0},{location:"koreasouth",displayName:"Korea South",supportsLogs:!0},{location:"southindia",displayName:"South India",supportsLogs:!0},{location:"westindia",displayName:"West India",supportsLogs:!0},{location:"canadaeast",displayName:"Canada East",supportsLogs:!0},{location:"francesouth",displayName:"France South",supportsLogs:!0},{location:"germanynorth",displayName:"Germany North",supportsLogs:!0},{location:"norwaywest",displayName:"Norway West",supportsLogs:!0},{location:"switzerlandwest",displayName:"Switzerland West",supportsLogs:!0},{location:"ukwest",displayName:"UK West",supportsLogs:!0},{location:"uaecentral",displayName:"UAE Central",supportsLogs:!0},{location:"brazilsoutheast",displayName:"Brazil Southeast",supportsLogs:!0},{location:"chinaeast",displayName:"China Eest",supportsLogs:!0},{location:"chinaeast2",displayName:"China Eest 2",supportsLogs:!0},{location:"chinanorth",displayName:"China North",supportsLogs:!0},{location:"chinanorth2",displayName:"China North 2",supportsLogs:!0},{location:"chinanorth3",displayName:"China North 3",supportsLogs:!0}],C=j.filter((e=>e.supportsLogs)).map((e=>`"${e.location}"`)).join(","),z=j.reduce(((e,s)=>Object.assign({},e,{[s.location]:s.displayName})),{}),x=[{resourceType:"microsoft.analysisservices/servers",displayName:"Analysis Services",supportsLogs:!0},{resourceType:"microsoft.synapse/workspaces/bigdatapools",displayName:"Apache Spark pool",supportsLogs:!0},{resourceType:"microsoft.apimanagement/service",displayName:"API Management service",supportsLogs:!0},{resourceType:"microsoft.appconfiguration/configurationstores",displayName:"App Configuration",supportsLogs:!0},{resourceType:"microsoft.web/sites/slots",displayName:"App Service (Slot)",supportsLogs:!0},{resourceType:"microsoft.web/hostingenvironments",displayName:"App Service Environment",supportsLogs:!0},{resourceType:"microsoft.web/serverfarms",displayName:"App Service plan",supportsLogs:!0},{resourceType:"microsoft.web/sites",displayName:"App Service",supportsLogs:!0},{resourceType:"microsoft.network/applicationgateways",displayName:"Application gateway",supportsLogs:!0},{resourceType:"microsoft.insights/components",displayName:"Application Insights",supportsLogs:!0},{resourceType:"microsoft.automation/automationaccounts",displayName:"Automation Account",supportsLogs:!0},{resourceType:"microsoft.insights/autoscalesettings",displayName:"Autoscale Settings",supportsLogs:!0},{resourceType:"microsoft.aadiam/azureadmetrics",displayName:"Azure AD Metrics",supportsLogs:!0},{resourceType:"microsoft.cache/redis",displayName:"Azure Cache for Redis",supportsLogs:!0},{resourceType:"microsoft.documentdb/databaseaccounts",displayName:"Azure Cosmos DB account",supportsLogs:!0},{resourceType:"microsoft.kusto/clusters",displayName:"Azure Data Explorer Cluster",supportsLogs:!0},{resourceType:"microsoft.dbformariadb/servers",displayName:"Azure Database for MariaDB server",supportsLogs:!0},{resourceType:"microsoft.dbformysql/servers",displayName:"Azure Database for MySQL server",supportsLogs:!0},{resourceType:"microsoft.dbforpostgresql/flexibleservers",displayName:"Azure Database for PostgreSQL flexible server",supportsLogs:!0},{resourceType:"microsoft.dbforpostgresql/servergroupsv2",displayName:"Azure Database for PostgreSQL server group",supportsLogs:!0},{resourceType:"microsoft.dbforpostgresql/servers",displayName:"Azure Database for PostgreSQL server",supportsLogs:!0},{resourceType:"microsoft.dbforpostgresql/serversv2",displayName:"Azure Database for PostgreSQL server v2",supportsLogs:!0},{resourceType:"microsoft.resources/subscriptions",displayName:"Subscription",supportsLogs:!0},{resourceType:"microsoft.appplatform/spring",displayName:"Azure Spring Cloud",supportsLogs:!0},{resourceType:"microsoft.databoxedge/databoxedgedevices",displayName:"Azure Stack Edge / Data Box Gateway",supportsLogs:!0},{resourceType:"microsoft.azurestackresourcemonitor/storageaccountmonitor",displayName:"Azure Stack Resource Monitor",supportsLogs:!0},{resourceType:"microsoft.synapse/workspaces",displayName:"Synapse workspace",supportsLogs:!0},{resourceType:"microsoft.network/bastionhosts",displayName:"Bastion",supportsLogs:!0},{resourceType:"microsoft.batch/batchaccounts",displayName:"Batch account",supportsLogs:!0},{resourceType:"microsoft.botservice/botservices",displayName:"Bot Service",supportsLogs:!0},{resourceType:"microsoft.netapp/netappaccounts/capacitypools",displayName:"Capacity pool",supportsLogs:!0},{resourceType:"microsoft.classiccompute/domainnames",displayName:"Cloud service (classic)",supportsLogs:!0},{resourceType:"microsoft.vmwarecloudsimple/virtualmachines",displayName:"CloudSimple Virtual Machine",supportsLogs:!0},{resourceType:"microsoft.cognitiveservices/accounts",displayName:"Cognitive Services",supportsLogs:!0},{resourceType:"microsoft.network/networkwatchers/connectionmonitors",displayName:"Connection Monitors",supportsLogs:!0},{resourceType:"microsoft.network/connections",displayName:"Connection",supportsLogs:!0},{resourceType:"microsoft.containerinstance/containergroups",displayName:"Container instances",supportsLogs:!0},{resourceType:"microsoft.containerregistry/registries",displayName:"Container registry",supportsLogs:!0},{resourceType:"microsoft.insights/qos",displayName:"Custom Metric Usage",supportsLogs:!0},{resourceType:"microsoft.customerinsights/hubs",displayName:"CustomerInsights",supportsLogs:!0},{resourceType:"microsoft.datafactory/datafactories",displayName:"Data factory",supportsLogs:!0},{resourceType:"microsoft.datafactory/factories",displayName:"Data factory (V2)",supportsLogs:!0},{resourceType:"microsoft.datalakeanalytics/accounts",displayName:"Data Lake Analytics",supportsLogs:!0},{resourceType:"microsoft.datalakestore/accounts",displayName:"Data Lake Storage Gen1",supportsLogs:!0},{resourceType:"microsoft.datashare/accounts",displayName:"Data Share",supportsLogs:!0},{resourceType:"microsoft.synapse/workspaces/sqlpools",displayName:"Dedicated SQL pool",supportsLogs:!0},{resourceType:"microsoft.devices/provisioningservices",displayName:"Device Provisioning Service",supportsLogs:!0},{resourceType:"microsoft.compute/disks",displayName:"Disk",supportsLogs:!0},{resourceType:"microsoft.network/dnszones",displayName:"DNS zone",supportsLogs:!0},{resourceType:"microsoft.eventgrid/domains",displayName:"Event Grid Domain",supportsLogs:!0},{resourceType:"microsoft.eventgrid/systemtopics",displayName:"Event Grid System Topic",supportsLogs:!0},{resourceType:"microsoft.eventgrid/topics",displayName:"Event Grid Topic",supportsLogs:!0},{resourceType:"microsoft.eventhub/clusters",displayName:"Event Hubs Cluster",supportsLogs:!0},{resourceType:"microsoft.eventhub/namespaces",displayName:"Event Hubs Namespace",supportsLogs:!0},{resourceType:"microsoft.network/expressroutecircuits",displayName:"ExpressRoute circuit",supportsLogs:!0},{resourceType:"microsoft.network/expressrouteports",displayName:"ExpressRoute Direct",supportsLogs:!0},{resourceType:"microsoft.network/expressroutegateways",displayName:"ExpressRoute Gateways",supportsLogs:!0},{resourceType:"microsoft.fabric.admin/fabriclocations",displayName:"Fabric Locations",supportsLogs:!0},{resourceType:"microsoft.network/azurefirewalls",displayName:"Firewall",supportsLogs:!0},{resourceType:"microsoft.network/frontdoors",displayName:"Front Door",supportsLogs:!0},{resourceType:"microsoft.hdinsight/clusters",displayName:"HDInsight cluster",supportsLogs:!0},{resourceType:"microsoft.storagecache/caches",displayName:"HPC cache",supportsLogs:!0},{resourceType:"microsoft.logic/integrationserviceenvironments",displayName:"Integration Service Environment",supportsLogs:!0},{resourceType:"microsoft.iotcentral/iotapps",displayName:"IoT Central Application",supportsLogs:!0},{resourceType:"microsoft.devices/iothubs",displayName:"IoT Hub",supportsLogs:!0},{resourceType:"microsoft.keyvault/vaults",displayName:"Key vault",supportsLogs:!0},{resourceType:"microsoft.kubernetes/connectedclusters",displayName:"Kubernetes - Azure Arc",supportsLogs:!0},{resourceType:"microsoft.containerservice/managedclusters",displayName:"Kubernetes service",supportsLogs:!0},{resourceType:"microsoft.media/mediaservices/liveevents",displayName:"Live event",supportsLogs:!0},{resourceType:"microsoft.network/loadbalancers",displayName:"Load balancer",supportsLogs:!0},{resourceType:"microsoft.operationalinsights/workspaces",displayName:"Log Analytics workspace",supportsLogs:!0},{resourceType:"microsoft.logic/workflows",displayName:"Logic app",supportsLogs:!0},{resourceType:"microsoft.machinelearningservices/workspaces",displayName:"Machine learning",supportsLogs:!0},{resourceType:"microsoft.media/mediaservices",displayName:"Media service",supportsLogs:!0},{resourceType:"microsoft.network/natgateways",displayName:"NAT gateway",supportsLogs:!0},{resourceType:"microsoft.network/networkinterfaces",displayName:"Network interface",supportsLogs:!0},{resourceType:"microsoft.network/networkvirtualappliances",displayName:"Network Virtual Appliances",supportsLogs:!0},{resourceType:"microsoft.network/networkwatchers",displayName:"Network Watcher",supportsLogs:!0},{resourceType:"microsoft.notificationhubs/namespaces/notificationhubs",displayName:"Notification Hub",supportsLogs:!0},{resourceType:"microsoft.network/p2svpngateways",displayName:"P2S VPN Gateways",supportsLogs:!0},{resourceType:"microsoft.peering/peeringservices",displayName:"Peering Service",supportsLogs:!0},{resourceType:"microsoft.powerbidedicated/capacities",displayName:"Power BI Embedded",supportsLogs:!0},{resourceType:"microsoft.network/privateendpoints",displayName:"Private endpoint",supportsLogs:!0},{resourceType:"microsoft.network/privatelinkservices",displayName:"Private link service",supportsLogs:!0},{resourceType:"microsoft.network/publicipaddresses",displayName:"Public IP address",supportsLogs:!0},{resourceType:"microsoft.cache/redisenterprise",displayName:"Redis Enterprise",supportsLogs:!0},{resourceType:"microsoft.relay/namespaces",displayName:"Relay",supportsLogs:!0},{resourceType:"microsoft.synapse/workspaces/scopepools",displayName:"Scope pool",supportsLogs:!0},{resourceType:"microsoft.search/searchservices",displayName:"Search service",supportsLogs:!0},{resourceType:"microsoft.servicebus/namespaces",displayName:"Service Bus Namespace",supportsLogs:!0},{resourceType:"microsoft.signalrservice/signalr",displayName:"SignalR",supportsLogs:!0},{resourceType:"microsoft.operationsmanagement/solutions",displayName:"Solution",supportsLogs:!0},{resourceType:"microsoft.sql/servers/databases",displayName:"SQL database",supportsLogs:!0},{resourceType:"microsoft.sql/servers/elasticpools",displayName:"SQL elastic pool",supportsLogs:!0},{resourceType:"microsoft.sql/managedinstances",displayName:"SQL managed instance",supportsLogs:!0},{resourceType:"microsoft.storage/storageaccounts",displayName:"Storage account",supportsLogs:!0},{resourceType:"microsoft.classicstorage/storageaccounts",displayName:"Storage account (classic)",supportsLogs:!0},{resourceType:"microsoft.storagesync/storagesyncservices",displayName:"Storage Sync Service",supportsLogs:!0},{resourceType:"microsoft.streamanalytics/streamingjobs",displayName:"Stream Analytics job",supportsLogs:!0},{resourceType:"microsoft.media/mediaservices/streamingendpoints",displayName:"Streaming Endpoint",supportsLogs:!0},{resourceType:"microsoft.timeseriesinsights/environments",displayName:"Time Series Insights environment",supportsLogs:!0},{resourceType:"microsoft.network/trafficmanagerprofiles",displayName:"Traffic Manager profile",supportsLogs:!0},{resourceType:"microsoft.compute/virtualmachinescalesets",displayName:"Virtual machine scale set",supportsLogs:!0},{resourceType:"microsoft.compute/virtualmachines",displayName:"Virtual machine",supportsLogs:!0},{resourceType:"microsoft.classiccompute/virtualmachines",displayName:"Virtual machine (classic)",supportsLogs:!0},{resourceType:"microsoft.network/virtualnetworkgateways",displayName:"Virtual network gateway",supportsLogs:!0},{resourceType:"microsoft.netapp/netappaccounts/capacitypools/volumes",displayName:"Volume",supportsLogs:!0},{resourceType:"microsoft.network/vpngateways",displayName:"VPN Gateways",supportsLogs:!0},{resourceType:"microsoft.cdn/cdnwebapplicationfirewallpolicies",displayName:"Content Delivery Network WAF policy",supportsLogs:!0},{resourceType:"microsoft.web/hostingenvironments/workerpools",displayName:"WorkerPools",supportsLogs:!0}],G=x.filter((e=>e.supportsLogs)).map((e=>`"${e.resourceType}"`)).join(","),R=x.reduce(((e,s)=>Object.assign({},e,{[s.resourceType]:s.displayName})),{});var q=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/time_grain_converter.ts");class P{static parseResponseValues(e,s,t){const r=[];if(!e)return r;for(let o=0;o<e.value.length;o++)if(!(0,a.find)(r,["value",(0,a.get)(e.value[o],t)])){const i=(0,a.get)(e.value[o],t),n=(0,a.get)(e.value[o],s,i);r.push({text:n,value:i})}return r}static parseResourceNames(e,s){const t=[];if(!e)return t;for(let r=0;r<e.value.length;r++)"string"==typeof e.value[r].type&&e.value[r].type.toLocaleLowerCase()===s.toLocaleLowerCase()&&t.push({text:e.value[r].name,value:e.value[r].name});return t}static parseMetadata(e,s){var t,r;const o=["None","Average","Minimum","Maximum","Total","Count"],a=null==e?void 0:e.value.find((e=>e.name.value===s));return a?{primaryAggType:a.primaryAggregationType,supportedAggTypes:a.supportedAggregationTypes||o,supportedTimeGrains:[{label:"Auto",value:"auto"},...P.parseTimeGrains(null!==(t=a.metricAvailabilities)&&void 0!==t?t:[])],dimensions:P.parseDimensions(null!==(r=a.dimensions)&&void 0!==r?r:[])}:{primaryAggType:"",supportedAggTypes:o,supportedTimeGrains:[],dimensions:[]}}static parseTimeGrains(e){const s=[];return e?(e.forEach((e=>{e.timeGrain&&s.push({label:q.Z.createTimeGrainFromISO8601Duration(e.timeGrain),value:e.timeGrain})})),s):s}static parseDimensions(e){return e.map((e=>({label:e.localizedValue||e.value,value:e.value})))}static parseSubscriptions(e){const s=[];if(!e)return s;const t="subscriptionId";for(let r=0;r<e.value.length;r++)(0,a.find)(s,["value",(0,a.get)(e.value[r],t)])||s.push({text:`${(0,a.get)(e.value[r],"displayName")}`,value:(0,a.get)(e.value[r],t)});return s}static parseSubscriptionsForSelect(e){const s=[];if(!e)return s;const t="subscriptionId";for(let r=0;r<e.data.value.length;r++)(0,a.find)(s,["value",(0,a.get)(e.data.value[r],t)])||s.push({label:`${(0,a.get)(e.data.value[r],"displayName")} - ${(0,a.get)(e.data.value[r],t)}`,value:(0,a.get)(e.data.value[r],t)});return s}static parseWorkspacesForSelect(e){const s=[];if(!e)return s;const t="customerId";for(let r=0;r<e.data.value.length;r++)(0,a.find)(s,["value",(0,a.get)(e.data.value[r].properties,t)])||s.push({label:(0,a.get)(e.data.value[r],"name"),value:(0,a.get)(e.data.value[r].properties,t)});return s}}class F{constructor(e){var s,t,r;r={azuremonitor:["Microsoft.AnalysisServices/servers","Microsoft.ApiManagement/service","Microsoft.AppConfiguration/configurationStores","Microsoft.Automation/automationAccounts","Microsoft.Batch/batchAccounts","Microsoft.Cache/redis","Microsoft.Cdn/cdnwebapplicationfirewallpolicies","Microsoft.Cdn/profiles","Microsoft.ClassicCompute/virtualMachines","Microsoft.ClassicCompute/domainNames","Microsoft.CognitiveServices/accounts","Microsoft.Compute/virtualMachines","Microsoft.Compute/virtualMachineScaleSets","Microsoft.ContainerInstance/containerGroups","Microsoft.ContainerRegistry/registries","Microsoft.ContainerService/managedClusters","Microsoft.CustomerInsights/hubs","Microsoft.DataBoxEdge/dataBoxEdgeDevices","Microsoft.DataFactory/datafactories","Microsoft.DataFactory/factories","Microsoft.DataLakeAnalytics/accounts","Microsoft.DataLakeStore/accounts","Microsoft.DBforMariaDB/servers","Microsoft.DBforMySQL/servers","Microsoft.DBforMySQL/flexibleServers","Microsoft.DBforPostgreSQL/servers","Microsoft.DBforPostgreSQL/flexibleServers","Microsoft.Devices/IotHubs","Microsoft.Devices/provisioningServices","Microsoft.DocumentDB/databaseAccounts","Microsoft.EventGrid/topics","Microsoft.EventGrid/eventSubscriptions","Microsoft.EventGrid/extensionTopics","Microsoft.EventHub/namespaces","Microsoft.EventHub/clusters","Microsoft.HDInsight/clusters","Microsoft.Insights/AutoscaleSettings","Microsoft.Insights/components","Microsoft.KeyVault/vaults","Microsoft.Kusto/clusters","Microsoft.LocationBasedServices/accounts","Microsoft.Logic/workflows","Microsoft.Logic/integrationServiceEnvironments","Microsoft.NetApp/netAppAccounts/capacityPools","Microsoft.NetApp/netAppAccounts/capacityPools/volumes","Microsoft.Network/networkInterfaces","Microsoft.Network/loadBalancers","Microsoft.Network/dnsZones","Microsoft.Network/publicIPAddresses","Microsoft.Network/azureFirewalls","Microsoft.Network/applicationGateways","Microsoft.Network/virtualNetworkGateways","Microsoft.Network/expressRouteCircuits","Microsoft.Network/expressRouteCircuits/Peerings","Microsoft.Network/connections","Microsoft.Network/trafficManagerProfiles","Microsoft.Network/networkWatchers/connectionMonitors","Microsoft.Network/frontdoors","Microsoft.Network/natGateways","Microsoft.Network/vpngateways","Microsoft.Network/virtualNetworkGateways","Microsoft.NotificationHubs/namespaces/notificationHubs","Microsoft.OperationalInsights/workspaces","Microsoft.PowerBIDedicated/capacities","Microsoft.Relay/namespaces","Microsoft.Search/searchServices","Microsoft.ServiceBus/namespaces","Microsoft.SignalRService/SignalR","Microsoft.Sql/servers/databases","Microsoft.Sql/servers/elasticPools","Microsoft.Sql/managedInstances","Microsoft.Storage/storageAccounts","Microsoft.Storage/storageAccounts/blobServices","Microsoft.Storage/storageAccounts/fileServices","Microsoft.Storage/storageAccounts/queueServices","Microsoft.Storage/storageAccounts/tableServices","Microsoft.StorageSync/storageSyncServices","Microsoft.StorageSync/storageSyncServices/syncGroups","Microsoft.StorageSync/storageSyncServices/syncGroups/serverEndpoints","Microsoft.StorageSync/storageSyncServices/registeredServers","Microsoft.StreamAnalytics/streamingJobs","Microsoft.Web/serverfarms","Microsoft.Web/sites","Microsoft.Web/sites/slots","Microsoft.Web/hostingEnvironments/multiRolePools","Microsoft.Web/hostingEnvironments/workerPools"],govazuremonitor:["Microsoft.AnalysisServices/servers","Microsoft.ApiManagement/service","Microsoft.Batch/batchAccounts","Microsoft.Cache/redis","Microsoft.Cdn/cdnwebapplicationfirewallpolicies","Microsoft.Cdn/profiles","Microsoft.ClassicCompute/virtualMachines","Microsoft.ClassicCompute/domainNames","Microsoft.CognitiveServices/accounts","Microsoft.Compute/virtualMachines","Microsoft.Compute/virtualMachineScaleSets","Microsoft.ContainerRegistry/registries","Microsoft.DBforMySQL/servers","Microsoft.DBforPostgreSQL/servers","Microsoft.Devices/IotHubs","Microsoft.Devices/provisioningServices","Microsoft.EventGrid/topics","Microsoft.EventGrid/eventSubscriptions","Microsoft.EventGrid/extensionTopics","Microsoft.EventHub/namespaces","Microsoft.EventHub/clusters","Microsoft.Insights/AutoscaleSettings","Microsoft.Insights/components","Microsoft.KeyVault/vaults","Microsoft.Logic/workflows","Microsoft.Network/networkInterfaces","Microsoft.Network/loadBalancers","Microsoft.Network/dnsZones","Microsoft.Network/publicIPAddresses","Microsoft.Network/azureFirewalls","Microsoft.Network/applicationGateways","Microsoft.Network/virtualNetworkGateways","Microsoft.Network/expressRouteCircuits","Microsoft.Network/expressRouteCircuits/Peerings","Microsoft.Network/connections","Microsoft.Network/trafficManagerProfiles","Microsoft.Network/networkWatchers/connectionMonitors","Microsoft.Network/frontdoors","Microsoft.NotificationHubs/namespaces/notificationHubs","Microsoft.OperationalInsights/workspaces","Microsoft.PowerBIDedicated/capacities","Microsoft.Relay/namespaces","Microsoft.ServiceBus/namespaces","Microsoft.Sql/servers/databases","Microsoft.Sql/servers/elasticPools","Microsoft.Sql/managedInstances","Microsoft.Storage/storageAccounts","Microsoft.Storage/storageAccounts/blobServices","Microsoft.Storage/storageAccounts/fileServices","Microsoft.Storage/storageAccounts/queueServices","Microsoft.Storage/storageAccounts/tableServices","Microsoft.Web/serverfarms","Microsoft.Web/sites","Microsoft.Web/sites/slots","Microsoft.Web/hostingEnvironments/multiRolePools","Microsoft.Web/hostingEnvironments/workerPools"],germanyazuremonitor:["Microsoft.AnalysisServices/servers","Microsoft.Batch/batchAccounts","Microsoft.Cache/redis","Microsoft.Cdn/cdnwebapplicationfirewallpolicies","Microsoft.Cdn/profiles","Microsoft.ClassicCompute/virtualMachines","Microsoft.ClassicCompute/domainNames","Microsoft.Compute/virtualMachines","Microsoft.Compute/virtualMachineScaleSets","Microsoft.DBforMySQL/servers","Microsoft.DBforPostgreSQL/servers","Microsoft.Devices/IotHubs","Microsoft.Devices/provisioningServices","Microsoft.EventHub/namespaces","Microsoft.EventHub/clusters","Microsoft.Insights/AutoscaleSettings","Microsoft.Insights/components","Microsoft.KeyVault/vaults","Microsoft.Network/networkInterfaces","Microsoft.Network/loadBalancers","Microsoft.Network/dnsZones","Microsoft.Network/publicIPAddresses","Microsoft.Network/azureFirewalls","Microsoft.Network/applicationGateways","Microsoft.Network/virtualNetworkGateways","Microsoft.Network/expressRouteCircuits","Microsoft.Network/expressRouteCircuits/Peerings","Microsoft.Network/connections","Microsoft.Network/trafficManagerProfiles","Microsoft.Network/networkWatchers/connectionMonitors","Microsoft.Network/frontdoors","Microsoft.NotificationHubs/namespaces/notificationHubs","Microsoft.OperationalInsights/workspaces","Microsoft.PowerBIDedicated/capacities","Microsoft.Relay/namespaces","Microsoft.ServiceBus/namespaces","Microsoft.Sql/servers/databases","Microsoft.Sql/servers/elasticPools","Microsoft.Sql/managedInstances","Microsoft.Storage/storageAccounts","Microsoft.Storage/storageAccounts/blobServices","Microsoft.Storage/storageAccounts/fileServices","Microsoft.Storage/storageAccounts/queueServices","Microsoft.Storage/storageAccounts/tableServices","Microsoft.StreamAnalytics/streamingJobs","Microsoft.Web/serverfarms","Microsoft.Web/sites","Microsoft.Web/sites/slots","Microsoft.Web/hostingEnvironments/multiRolePools","Microsoft.Web/hostingEnvironments/workerPools"],chinaazuremonitor:["Microsoft.AnalysisServices/servers","Microsoft.Batch/batchAccounts","Microsoft.Cache/redis","Microsoft.Cdn/cdnwebapplicationfirewallpolicies","Microsoft.Cdn/profiles","Microsoft.ClassicCompute/virtualMachines","Microsoft.ClassicCompute/domainNames","Microsoft.CognitiveServices/accounts","Microsoft.Compute/virtualMachines","Microsoft.Compute/virtualMachineScaleSets","Microsoft.ContainerRegistry/registries","Microsoft.DBforMySQL/servers","Microsoft.DBforPostgreSQL/servers","Microsoft.Devices/IotHubs","Microsoft.Devices/provisioningServices","Microsoft.EventHub/namespaces","Microsoft.Insights/AutoscaleSettings","Microsoft.Insights/components","Microsoft.KeyVault/vaults","Microsoft.Logic/workflows","Microsoft.Network/networkInterfaces","Microsoft.Network/loadBalancers","Microsoft.Network/dnsZones","Microsoft.Network/publicIPAddresses","Microsoft.Network/azureFirewalls","Microsoft.Network/applicationGateways","Microsoft.Network/virtualNetworkGateways","Microsoft.Network/expressRouteCircuits","Microsoft.Network/expressRouteCircuits/Peerings","Microsoft.Network/connections","Microsoft.Network/trafficManagerProfiles","Microsoft.Network/networkWatchers/connectionMonitors","Microsoft.Network/frontdoors","Microsoft.NotificationHubs/namespaces/notificationHubs","Microsoft.PowerBIDedicated/capacities","Microsoft.Relay/namespaces","Microsoft.ServiceBus/namespaces","Microsoft.Sql/servers/databases","Microsoft.Sql/servers/elasticPools","Microsoft.Sql/managedInstances","Microsoft.Storage/storageAccounts","Microsoft.Storage/storageAccounts/blobServices","Microsoft.Storage/storageAccounts/fileServices","Microsoft.Storage/storageAccounts/queueServices","Microsoft.Storage/storageAccounts/tableServices","Microsoft.StreamAnalytics/streamingJobs","Microsoft.Web/serverfarms","Microsoft.Web/sites","Microsoft.Web/sites/slots","Microsoft.Web/hostingEnvironments/multiRolePools","Microsoft.Web/hostingEnvironments/workerPools"]},(t="supportedMetricNamespaces")in(s=this)?Object.defineProperty(s,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):s[t]=r,this.cloudName=e,this.cloudName=e}get(){return this.supportedMetricNamespaces[this.cloudName]}}class V{static buildAzureMonitorGetMetricNamespacesUrl(e,s,t,r,o,a){const i=r.split("/"),n=o.split("/"),c=[e,s,"resourceGroups",t,"providers",i.shift()];for(const e in i)c.push(i[e]),c.push(n[e]);return`${c.join("/")}/providers/microsoft.insights/metricNamespaces?api-version=${a}`}static buildAzureMonitorGetMetricNamesUrl(e,s,t,r,o,a,i){const n=r.split("/"),c=o.split("/"),u=[e,s,"resourceGroups",t,"providers",n.shift()];for(const e in n)u.push(n[e]),u.push(c[e]);return`${u.join("/")}/providers/microsoft.insights/metricdefinitions?api-version=${i}&metricnamespace=${encodeURIComponent(a)}`}}function Q(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}const X="select";class $ extends p.DataSourceWithBackend{constructor(e){super(e),Q(this,"apiVersion","2018-01-01"),Q(this,"apiPreviewVersion","2017-12-01-preview"),Q(this,"listByResourceGroupApiVersion","2021-04-01"),Q(this,"defaultSubscriptionId",void 0),Q(this,"resourcePath",void 0),Q(this,"azurePortalUrl",void 0),Q(this,"supportedMetricNamespaces",[]),Q(this,"timeSrv",void 0),this.instanceSettings=e,this.instanceSettings=e,this.timeSrv=(0,D.$t)(),this.defaultSubscriptionId=e.jsonData.subscriptionId;const s=b(e);this.resourcePath=`${M.kr.azureMonitor}/subscriptions`,this.supportedMetricNamespaces=new F(s).get(),this.azurePortalUrl=v(s)}isConfigured(){return!this.validateDatasource()}filterQuery(e){return!!(!0!==e.hide&&e.azureMonitor&&e.azureMonitor.resourceGroup&&e.azureMonitor.resourceGroup!==X&&e.azureMonitor.resourceName&&e.azureMonitor.resourceName!==X&&e.azureMonitor.metricDefinition&&e.azureMonitor.metricDefinition!==X&&e.azureMonitor.metricName&&e.azureMonitor.metricName!==X&&e.azureMonitor.aggregation&&e.azureMonitor.aggregation!==X)}applyTemplateVariables(e,s){var t;const r=e.azureMonitor;if(!r)throw new Error("Query is not a valid Azure Monitor Metrics query");r.timeGrain&&r.timeGrainUnit&&"auto"!==r.timeGrain&&(r.timeGrain=q.Z.createISO8601Duration(r.timeGrain,r.timeGrainUnit));const o=(0,p.getTemplateSrv)(),a=o.replace(e.subscription||this.defaultSubscriptionId,s),i=o.replace(r.resourceGroup,s),n=o.replace(r.resourceName,s),c=o.replace(r.metricNamespace,s),u=o.replace(r.metricDefinition,s),l=o.replace((r.timeGrain||"").toString(),s),d=o.replace(r.aggregation,s),m=o.replace(r.top||"",s),h=(null!==(t=r.dimensionFilters)&&void 0!==t?t:[]).filter((e=>e.dimension&&"None"!==e.dimension)).map((e=>{var t;const r=o.replace(null!==(t=e.filter)&&void 0!==t?t:"",s);return{dimension:o.replace(e.dimension,s),operator:e.operator||"eq",filter:r||"*"}}));return{refId:e.refId,subscription:a,queryType:g.Bj.AzureMonitor,azureMonitor:{resourceGroup:i,resourceName:n,metricDefinition:u,timeGrain:l,allowedTimeGrainsMs:r.allowedTimeGrainsMs,metricName:o.replace(r.metricName,s),metricNamespace:c&&c!==X?c:u,aggregation:d,dimensionFilters:h,top:m||"10",alias:r.alias}}}async getSubscriptions(){return this.isConfigured()?this.getResource(`${this.resourcePath}?api-version=2019-03-01`).then((e=>P.parseSubscriptions(e))):[]}getResourceGroups(e){return this.getResource(`${this.resourcePath}/${e}/resourceGroups?api-version=${this.listByResourceGroupApiVersion}`).then((e=>P.parseResponseValues(e,"name","name")))}getMetricDefinitions(e,s){return this.getResource(`${this.resourcePath}/${e}/resourceGroups/${s}/resources?api-version=${this.listByResourceGroupApiVersion}`).then((e=>P.parseResponseValues(e,"type","type"))).then((e=>(0,a.filter)(e,(e=>{for(let s=0;s<this.supportedMetricNamespaces.length;s++)if(e.value.toLowerCase()===this.supportedMetricNamespaces[s].toLowerCase())return!0;return!1})))).then((e=>{let s=!1;for(let t=0;t<e.length;t++)if("Microsoft.Storage/storageAccounts"===e[t].value){s=!0;break}return s&&(e.push({text:"Microsoft.Storage/storageAccounts/blobServices",value:"Microsoft.Storage/storageAccounts/blobServices"}),e.push({text:"Microsoft.Storage/storageAccounts/fileServices",value:"Microsoft.Storage/storageAccounts/fileServices"}),e.push({text:"Microsoft.Storage/storageAccounts/tableServices",value:"Microsoft.Storage/storageAccounts/tableServices"}),e.push({text:"Microsoft.Storage/storageAccounts/queueServices",value:"Microsoft.Storage/storageAccounts/queueServices"})),e.map((e=>({value:e.value,text:R[e.value.toLowerCase()]||e.value})))}))}getResourceNames(e,s,t,r){let o=`${this.resourcePath}/${e}/resourceGroups/${s}/resources?$filter=resourceType eq '${t}'&api-version=${this.listByResourceGroupApiVersion}`;return r&&(o+=`&$skiptoken=${r}`),this.getResource(o).then((async r=>{let o=[];if((0,a.startsWith)(t,"Microsoft.Storage/storageAccounts/")){o=P.parseResourceNames(r,"Microsoft.Storage/storageAccounts");for(let e=0;e<o.length;e++)o[e].text+="/default",o[e].value+="/default"}else o=P.parseResourceNames(r,t);if(r.nextLink){const a=new URL(r.nextLink).searchParams.get("$skiptoken");if(!a)throw Error("unable to request the next page of resources");const i=await this.getResourceNames(e,s,t,a);o=o.concat(i)}return o}))}getMetricNamespaces(e,s,t,r){const o=V.buildAzureMonitorGetMetricNamespacesUrl(this.resourcePath,e,s,t,r,this.apiPreviewVersion);return this.getResource(o).then((e=>P.parseResponseValues(e,"name","properties.metricNamespaceName")))}getMetricNames(e,s,t,r,o){const a=V.buildAzureMonitorGetMetricNamesUrl(this.resourcePath,e,s,t,r,o,this.apiVersion);return this.getResource(a).then((e=>P.parseResponseValues(e,"name.localizedValue","name.value")))}getMetricMetadata(e,s,t,r,o,a){const i=V.buildAzureMonitorGetMetricNamesUrl(this.resourcePath,e,s,t,r,o,this.apiVersion);return this.getResource(i).then((e=>P.parseMetadata(e,a)))}async testDatasource(){const e=this.validateDatasource();if(e)return Promise.resolve(e);try{const e=`${this.resourcePath}?api-version=2019-03-01`;return await this.getResource(e).then((e=>({status:"success",message:"Successfully queried the Azure Monitor service.",title:"Success"})))}catch(e){let s="Azure Monitor: ";return s+=e.statusText?e.statusText+": ":"",e.data&&e.data.error&&e.data.error.code?s+=e.data.error.code+". "+e.data.error.message:e.data&&e.data.error?s+=e.data.error:e.data?s+=e.data:s+="Cannot connect to Azure Monitor REST API.",{status:"error",message:s}}}validateDatasource(){if("clientsecret"===f(this.instanceSettings)){if(!this.isValidConfigField(this.instanceSettings.jsonData.tenantId))return{status:"error",message:"The Tenant Id field is required."};if(!this.isValidConfigField(this.instanceSettings.jsonData.clientId))return{status:"error",message:"The Client Id field is required."}}}isValidConfigField(e){return"string"==typeof e&&e.length>0}}class E extends p.DataSourceWithBackend{filterQuery(e){var s;return!(null===(s=e.azureResourceGraph)||void 0===s||!s.query)}applyTemplateVariables(e,s){const t=e.azureResourceGraph;if(!t)return e;const r=(0,p.getTemplateSrv)(),o=r.getVariables().map((e=>`$${e.name}`)),a=i().find(e.subscriptions,(e=>i().includes(o,e))),n=[...r.replace(a,s,(e=>e)).split(",").filter((e=>e.length>0)),...i().filter(e.subscriptions,(e=>!i().includes(o,e)))],c=r.replace(t.query,s,M.Ll);return{refId:e.refId,queryType:g.Bj.AzureResourceGraph,subscriptions:n,azureResourceGraph:{resultFormat:"table",query:c}}}}class B{constructor(e){this.results=e,this.results=e}parseQueryResult(){let e=[],s=[];for(let t=0;t<this.results.length;t++)if(this.results[t].query.raw){const r=this.results[t].query.xaxis,o=this.results[t].query.yaxis,i=this.results[t].query.spliton;s=this.results[t].result.Tables[0].Columns;const n=this.results[t].result.Tables[0].Rows;e=(0,a.concat)(e,this.parseRawQueryResultRow(this.results[t].query,s,n,r,o,i))}else{const s=this.results[t].result.value,r=this.results[t].query.alias;e=(0,a.concat)(e,this.parseQueryResultRow(this.results[t].query,s,r))}return e}parseRawQueryResultRow(e,s,t,r,o,i){const n=[],c=(0,a.map)(s,(e=>({text:e.ColumnName,value:e.ColumnName}))),u=s.findIndex((e=>e.ColumnName===r)),p=o.split(","),l={};(0,a.forEach)(p,(e=>{l[e]=s.findIndex((s=>s.ColumnName===e))}));const d=s.findIndex((e=>e.ColumnName===i)),m="timestamp"===r;return(0,a.forEach)(t,(s=>{(0,a.forEach)(l,((t,r)=>{const o=-1===d?B.findOrCreateBucket(n,r):B.findOrCreateBucket(n,s[d]),a=m?B.dateTimeToEpoch(s[u]):s[u];o.datapoints.push([s[t],a]),o.refId=e.refId,o.query=e.query,o.columnsForDropdown=c}))})),n}parseQueryResultRow(e,s,t){const r=[];if(B.isSingleValue(s)){const t=B.getMetricFieldKey(s),o=B.getKeyForAggregationField(s[t]),a=B.dateTimeToEpoch(s.end);return r.push({target:t,datapoints:[[s[t][o],a]],refId:e.refId,query:e.query}),r}if(B.hasSegmentsField(s.segments[0]))for(let o=0;o<s.segments.length;o++){const a=B.dateTimeToEpoch(s.segments[o].end);for(let i=0;i<s.segments[o].segments.length;i++){const n=B.getMetricFieldKey(s.segments[o].segments[i]),c=B.getKeyForAggregationField(s.segments[o].segments[i][n]),u=this.getTargetName(s.segments[o].segments[i],t),p=B.findOrCreateBucket(r,u);p.datapoints.push([s.segments[o].segments[i][n][c],a]),p.refId=e.refId,p.meta={query:e.query}}}else{const t=B.getMetricFieldKey(s.segments[0]),o=B.findOrCreateBucket(r,t);for(let e=0;e<s.segments.length;e++){const r=B.dateTimeToEpoch(s.segments[e].end),a=B.getKeyForAggregationField(s.segments[e][t]);o.datapoints.push([s.segments[e][t][a],r])}o.refId=e.refId,o.query=e.query}return r}getTargetName(e,s){let t="",r="",o="";for(const s in e)(0,a.isObject)(e[s])?t=s:(r=s,o=e[s]);if(s){const e=/\{\{([\s\S]+?)\}\}/g;return s.replace(e,((e,s,a)=>{const i=s||a;return"metric"===i?t:"groupbyname"===i?r:"groupbyvalue"===i?o:e}))}return t+`{${r}="${o}"}`}static isSingleValue(e){return!B.hasSegmentsField(e)}static findOrCreateBucket(e,s){let t=(0,a.find)(e,["target",s]);return t||(t={target:s,datapoints:[]},e.push(t)),t}static hasSegmentsField(e){const s=(0,a.keys)(e);return(0,a.indexOf)(s,"segments")>-1}static getMetricFieldKey(e){const s=(0,a.keys)(e);return(0,a.filter)((0,a.without)(s,"start","end"),(s=>(0,a.isObject)(e[s])))[0]}static getKeyForAggregationField(e){const s=(0,a.keys)(e);return(0,a.intersection)(s,["sum","avg","min","max","count","unique"])[0]}static dateTimeToEpoch(e){return(0,r.dateTime)(e).valueOf()}static parseMetricNames(e){const s=(0,a.keys)(e.metrics);return B.toTextValueList(s)}parseMetadata(e){const s=this.results.metrics[e];if(!s)throw Error("No data found for metric: "+e);return{primaryAggType:s.defaultAggregation,supportedAggTypes:s.supportedAggregations,supportedGroupBy:s.supportedGroupBy.all}}parseGroupBys(){return B.toTextValueList(this.results.supportedGroupBy)}parseQuerySchema(){const e={Type:"AppInsights",Tables:{}};if(this.results&&this.results&&this.results.Tables)for(let s=0;s<this.results.Tables[0].Rows.length;s++){const t=this.results.Tables[0].Rows[s],r=t[0],o=t[1],a=t[2];e.Tables[r]?e.Tables[r].OrderedColumns.push({Name:o,Type:a}):e.Tables[r]={Name:r,OrderedColumns:[{Name:o,Type:a}]}}return e}static toTextValueList(e){const s=[];for(let t=0;t<e.length;t++)s.push({text:e[t],value:e[t]});return s}}function W(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}class O extends p.DataSourceWithBackend{constructor(e){super(e),W(this,"resourcePath",void 0),W(this,"version","beta"),W(this,"applicationId",void 0),W(this,"logAnalyticsColumns",{}),this.applicationId=e.jsonData.appInsightsAppId||"",this.resourcePath=`${M.kr.appInsights}/${this.version}/apps/${this.applicationId}`}isConfigured(){return!!this.applicationId&&this.applicationId.length>0}createRawQueryRequest(e,s,t){return e.xaxis&&!e.timeColumn&&(e.timeColumn=e.xaxis),e.yaxis&&!e.valueColumn&&(e.valueColumn=e.yaxis),e.spliton&&!e.segmentColumn&&(e.segmentColumn=e.spliton),{type:"timeSeriesQuery",raw:!1,appInsights:{rawQuery:!0,rawQueryString:(0,p.getTemplateSrv)().replace(e.rawQueryString,s.scopedVars),timeColumn:e.timeColumn,valueColumn:e.valueColumn,segmentColumn:e.segmentColumn}}}applyTemplateVariables(e,s){const t=e.appInsights;if(!t)return e;const r=t;r.timeGrainCount?t.timeGrain=q.Z.createISO8601Duration(r.timeGrainCount,t.timeGrainUnit):t.timeGrain&&t.timeGrainUnit&&"auto"!==t.timeGrain&&(t.timeGrain=q.Z.createISO8601Duration(t.timeGrain,t.timeGrainUnit)),r.groupBy&&!t.dimension&&(t.dimension=[r.groupBy]),r.filter&&!t.dimensionFilter&&(t.dimensionFilter=r.filter),(0,a.isString)(t.dimension)&&("None"===t.dimension?t.dimension=[]:t.dimension=[t.dimension]),t.dimension||(t.dimension=[]);const o=(0,p.getTemplateSrv)();return{refId:e.refId,queryType:g.H0.ApplicationInsights,appInsights:{timeGrain:o.replace((t.timeGrain||"").toString(),s),metricName:o.replace(t.metricName,s),aggregation:o.replace(t.aggregation,s),dimension:t.dimension.map((e=>o.replace(e,s))),dimensionFilter:o.replace(t.dimensionFilter,s),alias:t.alias}}}testDatasource(){const e=`${this.resourcePath}/metrics/metadata`;return this.getResource(e).then((e=>({status:"success",message:"Successfully queried the Application Insights service.",title:"Success"}))).catch((e=>{let s="Application Insights: ";return s+=e.statusText?e.statusText+": ":"",e.data&&e.data.error&&"PathNotFoundError"===e.data.error.code?s+="Invalid Application Id for Application Insights service.":e.data&&e.data.error?s+=e.data.error.code+". "+e.data.error.message:s+="Cannot connect to Application Insights REST API.",{status:"error",message:s}}))}getMetricNames(){const e=`${this.resourcePath}/metrics/metadata`;return this.getResource(e).then(B.parseMetricNames)}getMetricMetadata(e){const s=`${this.resourcePath}/metrics/metadata`;return this.getResource(s).then((s=>new B(s).parseMetadata(e)))}getGroupBys(e){return this.getMetricMetadata(e).then((e=>new B(e).parseGroupBys()))}getQuerySchema(){const e=`${this.resourcePath}/query/schema`;return this.getResource(e).then((e=>new B(e).parseQuerySchema()))}}class U extends O{constructor(e){super(e)}applyTemplateVariables(e,s){const t=e.insightsAnalytics;if(!t)return e;const r=t.rawQueryString&&!t.query?t.rawQueryString:t.query;return{refId:e.refId,queryType:g.H0.InsightsAnalytics,insightsAnalytics:{query:(0,p.getTemplateSrv)().replace(r,s),resultFormat:t.resultFormat}}}}var _=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/components/ResourcePicker/types.ts");class H extends p.DataSourceWithBackend{constructor(e){var s,t,r;super(e),r=void 0,(t="resourcePath")in(s=this)?Object.defineProperty(s,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):s[t]=r,this.resourcePath=`${M.kr.resourceGraph}`}async getSubscriptions(){let e,s=[],t=!1;for(;!t;){let r={};e&&(r={$skipToken:e});const o=await this.makeResourceGraphRequest("\n    resources\n    | join kind=inner (\n              ResourceContainers\n                | where type == 'microsoft.resources/subscriptions'\n                | project subscriptionName=name, subscriptionURI=id, subscriptionId\n              ) on subscriptionId\n    | summarize count() by subscriptionName, subscriptionURI, subscriptionId\n    | order by subscriptionName desc\n  ",1,r);if(!o.data.length)throw new Error("No subscriptions were found");s=s.concat(o.data),e=o.$skipToken,t=!e}return s.map((e=>({name:e.subscriptionName,id:e.subscriptionId,uri:`/subscriptions/${e.subscriptionId}`,typeLabel:"Subscription",type:_.J.Subscription,children:[]})))}async getResourceGroupsBySubscriptionId(e){const s=`\n    resources\n     | join kind=inner (\n       ResourceContainers\n       | where type == 'microsoft.resources/subscriptions/resourcegroups'\n       | project resourceGroupURI=id, resourceGroupName=name, resourceGroup, subscriptionId\n     ) on resourceGroup, subscriptionId\n\n     | where type in (${G})\n     | where subscriptionId == '${e}'\n     | summarize count() by resourceGroupName, resourceGroupURI\n     | order by resourceGroupURI asc`;let t,r=[],o=!1;for(;!o;){let e={};t&&(e={$skipToken:t});const a=await this.makeResourceGraphRequest(s,1,e);r=r.concat(a.data),t=a.$skipToken,o=!t}return r.map((e=>{const s=(0,m._E)(e.resourceGroupURI);if(!s||!s.resourceGroup)throw new Error("unable to fetch resource groups");return{name:e.resourceGroupName,uri:e.resourceGroupURI,id:s.resourceGroup,type:_.J.ResourceGroup,typeLabel:"Resource Group",children:[]}}))}async getResourcesForResourceGroup(e){const{data:s}=await this.makeResourceGraphRequest(`\n      resources\n      | where id hasprefix "${e}"\n      | where type in (${G}) and location in (${C})\n    `);return s.map((e=>{const s=(0,m._E)(e.id);if(!s||!s.resource)throw new Error("unable to fetch resource details");return{name:e.name,id:s.resource,uri:e.id,resourceGroupName:e.resourceGroup,type:_.J.Resource,typeLabel:R[e.type]||e.type,location:z[e.location]||e.location}}))}async getResourceURIDisplayProperties(e){var s;const{subscriptionID:t,resourceGroup:r,resource:o}=null!==(s=(0,m._E)(e))&&void 0!==s?s:{};if(!t)throw new Error("Invalid resource URI passed");const a=`/subscriptions/${t}`,i=`\n    resourcecontainers\n    | where type == "microsoft.resources/subscriptions"\n    | where id =~ "${a}"\n    | project subscriptionName=name, subscriptionId\n\n    | join kind=leftouter (\n      resourcecontainers            \n            | where type == "microsoft.resources/subscriptions/resourcegroups"\n            | where id =~ "${`${a}/resourceGroups/${r}`}"\n            | project resourceGroupName=name, resourceGroup, subscriptionId\n        ) on subscriptionId\n\n        | join kind=leftouter (\n          resources\n            | where id =~ "${e}"\n            | project resourceName=name, subscriptionId\n        ) on subscriptionId\n\n        | project subscriptionName, resourceGroupName, resourceName\n    `,{data:n}=await this.makeResourceGraphRequest(i);if(!n.length)throw new Error("unable to fetch resource details");const{subscriptionName:c,resourceGroupName:u,resourceName:p}=n[0];return{subscriptionName:c||t,resourceGroupName:u||r,resourceName:p||o}}async getResourceURIFromWorkspace(e){const{data:s}=await this.makeResourceGraphRequest(`\n      resources\n      | where properties['customerId'] == "${e}"\n      | project id\n    `);if(!s.length)throw new Error("unable to find resource for workspace "+e);return s[0].id}async makeResourceGraphRequest(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=arguments.length>2?arguments[2]:void 0;try{return await this.postResource(this.resourcePath+"/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01",{query:e,options:Object.assign({resultFormat:"objectArray"},t)})}catch(t){if(s>0)return this.makeResourceGraphRequest(e,s-1);throw t}}}function K(e){var s,t,r,o,a;const i="string"==typeof e.rawQuery?e.rawQuery:null,n="string"==typeof e.workspace?e.workspace:null;if(!i||!n||null!==(s=e.target)&&void 0!==s&&null!==(t=s.azureLogAnalytics)&&void 0!==t&&t.query)return e;const c=Object.assign({},null!==(r=e.target)&&void 0!==r?r:{},{refId:null!==(o=null===(a=e.target)||void 0===a?void 0:a.refId)&&void 0!==o?o:"Anno",queryType:g.Bj.LogAnalytics,azureLogAnalytics:{query:i,resource:n}});return Object.assign({},e,{rawQuery:void 0,workspace:void 0,subscription:void 0,queryType:void 0,target:c})}var J=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/utils/migrateQuery.ts"),Z=t("../../opt/drone/yarncache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/lastValueFrom.js"),Y=t("./packages/grafana-ui/src/index.ts"),ee=t("../../opt/drone/yarncache/react-npm-17.0.2-99ba37d931-b254cc17ce.zip/node_modules/react/index.js"),se=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/components/LogsQueryEditor/index.tsx"),te=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/utils/useLastError.ts"),re=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/components/Space.tsx");const oe=e=>({subscriptions:e.match(/^Subscriptions\(\)/i),resourceGroups:e.match(/^ResourceGroups\(\)/i),resourceGroupsWithSub:e.match(/^ResourceGroups\(([^\)]+?)(,\s?([^,]+?))?\)/i),metricDefinitions:e.match(/^Namespaces\(([^\)]+?)(,\s?([^,]+?))?\)/i),metricDefinitionsWithSub:e.match(/^Namespaces\(([^,]+?),\s?([^,]+?)\)/i),resourceNames:e.match(/^ResourceNames\(([^,]+?),\s?([^,]+?)\)/i),resourceNamesWithSub:e.match(/^ResourceNames\(([^,]+?),\s?([^,]+?),\s?(.+?)\)/i),metricNamespace:e.match(/^MetricNamespace\(([^,]+?),\s?([^,]+?),\s?([^,]+?)\)/i),metricNamespaceWithSub:e.match(/^metricnamespace\(([^,]+?),\s?([^,]+?),\s?([^,]+?),\s?([^,]+?)\)/i),metricNames:e.match(/^MetricNames\(([^,]+?),\s?([^,]+?),\s?([^,]+?),\s?([^,]+?)\)/i),metricNamesWithSub:e.match(/^MetricNames\(([^,]+?),\s?([^,]+?),\s?([^,]+?),\s?([^,]+?),\s?(.+?)\)/i),appInsightsMetricNameQuery:e.match(/^AppInsightsMetricNames\(\)/i),appInsightsGroupByQuery:e.match(/^AppInsightsGroupBys\(([^\)]+?)(,\s?([^,]+?))?\)/i),workspacesQuery:e.match(/^workspaces\(\)/i),workspacesQueryWithSub:e.match(/^workspaces\(["']?([^\)]+?)["']?\)/i)}),ae=async(e,s)=>"string"!=typeof e?e:(e=>{const s=oe(e);return Object.keys(s).some((e=>!!s[e]))})(e)?((e,s)=>{const t=oe(e),r=s.azureMonitorDatasource.defaultSubscriptionId;return{refId:"A",queryType:g.Bj.GrafanaTemplateVariableFn,grafanaTemplateVariableFn:t.appInsightsMetricNameQuery?{rawQuery:e,kind:"AppInsightsMetricNameQuery"}:t.appInsightsGroupByQuery?{kind:"AppInsightsGroupByQuery",rawQuery:e,metricName:t.appInsightsGroupByQuery[1]}:t.subscriptions?{kind:"SubscriptionsQuery",rawQuery:e}:t.resourceGroupsWithSub?{kind:"ResourceGroupsQuery",rawQuery:e,subscription:t.resourceGroupsWithSub[1]}:t.resourceGroups&&r?{kind:"ResourceGroupsQuery",rawQuery:e,subscription:r}:t.metricDefinitionsWithSub?{kind:"MetricDefinitionsQuery",rawQuery:e,subscription:t.metricDefinitionsWithSub[1],resourceGroup:t.metricDefinitionsWithSub[2]}:t.metricDefinitions&&r?{kind:"MetricDefinitionsQuery",rawQuery:e,subscription:r,resourceGroup:t.metricDefinitions[1]}:t.resourceNamesWithSub?{kind:"ResourceNamesQuery",rawQuery:e,subscription:t.resourceNamesWithSub[1],resourceGroup:t.resourceNamesWithSub[2],metricDefinition:t.resourceNamesWithSub[3]}:t.resourceNames&&r?{kind:"ResourceNamesQuery",rawQuery:e,subscription:r,resourceGroup:t.resourceNames[1],metricDefinition:t.resourceNames[2]}:t.metricNamespaceWithSub?{kind:"MetricNamespaceQuery",rawQuery:e,subscription:t.metricNamespaceWithSub[1],resourceGroup:t.metricNamespaceWithSub[2],metricDefinition:t.metricNamespaceWithSub[3],resourceName:t.metricNamespaceWithSub[4]}:t.metricNamespace&&r?{kind:"MetricNamespaceQuery",rawQuery:e,subscription:r,resourceGroup:t.metricNamespace[1],metricDefinition:t.metricNamespace[2],resourceName:t.metricNamespace[3]}:t.metricNames&&r&&-1===t.metricNames[3].indexOf(",")?{kind:"MetricNamesQuery",rawQuery:e,subscription:r,resourceGroup:t.metricNames[1],metricDefinition:t.metricNames[2],resourceName:t.metricNames[3],metricNamespace:t.metricNames[4]}:t.metricNamesWithSub?{kind:"MetricNamesQuery",rawQuery:e,subscription:t.metricNamesWithSub[1],resourceGroup:t.metricNamesWithSub[2],metricDefinition:t.metricNamesWithSub[3],resourceName:t.metricNamesWithSub[4],metricNamespace:t.metricNamesWithSub[5]}:t.workspacesQueryWithSub?{kind:"WorkspacesQuery",rawQuery:e,subscription:(t.workspacesQueryWithSub[1]||"").trim()}:t.workspacesQuery&&r?{kind:"WorkspacesQuery",rawQuery:e,subscription:r}:{kind:"SubscriptionsQuery",rawQuery:e},subscription:r}})(e,s.datasource):(async(e,s)=>{const t=s.azureMonitorDatasource.defaultSubscriptionId;let r="";if(e){const e=s.azureLogAnalyticsDatasource.getDeprecatedDefaultWorkSpace();r=e?(0,m.uD)(e)?await s.resourcePickerData.getResourceURIFromWorkspace(e):e:await s.azureLogAnalyticsDatasource.getFirstWorkspace()||""}return{refId:"A",queryType:g.Bj.LogAnalytics,azureLogAnalytics:{query:e,resource:r},subscription:t}})(e,s.datasource);var ie,ne=t("../../opt/drone/yarncache/react-npm-17.0.2-99ba37d931-b254cc17ce.zip/node_modules/react/jsx-runtime.js");const ce=[{label:"Grafana Query Function",value:g.Bj.GrafanaTemplateVariableFn},{label:"Logs",value:g.Bj.LogAnalytics}],ue=e=>{var s;let{query:t,updateQuery:r,datasource:o}=e;const[a,i]=(0,ee.useState)("");(0,ee.useEffect)((()=>{var e;i((null===(e=t.grafanaTemplateVariableFn)||void 0===e?void 0:e.rawQuery)||"")}),[null===(s=t.grafanaTemplateVariableFn)||void 0===s?void 0:s.rawQuery]);const n=(0,ee.useCallback)((e=>{ae(e,{datasource:o}).then((s=>{s.queryType===g.Bj.GrafanaTemplateVariableFn?r(s):r(Object.assign({},t,{grafanaTemplateVariableFn:{kind:"UnknownQuery",rawQuery:e}}))}))}),[o,t,r]);return(0,ne.jsx)(Y.InlineField,{label:"Grafana template variable function",children:(0,ne.jsx)(Y.Input,{placeholder:"type a grafana template variable function, ex: Subscriptions()",value:a,onChange:e=>{i(e.target.value)},onBlur:()=>n(a)})})},pe=e=>{const s={refId:"A",queryType:g.Bj.GrafanaTemplateVariableFn},[t,r]=(0,ee.useState)(s);(0,ee.useEffect)((()=>{ae(e.query,{datasource:e.datasource}).then((e=>{r(e)}))}),[e.query,e.datasource]);const[o,a]=(0,te.Z)();return(0,ne.jsxs)(ne.Fragment,{children:[(0,ne.jsx)(Y.InlineField,{label:"Select query type",children:(0,ne.jsx)(Y.Select,{"aria-label":"select query type",onChange:e=>{e.value&&r(Object.assign({},t,{queryType:e.value}))},options:ce,width:25,value:t.queryType})}),t.queryType===g.Bj.LogAnalytics&&(0,ne.jsxs)(ne.Fragment,{children:[(0,ne.jsx)(se.Z,{subscriptionId:t.subscription,query:t,datasource:e.datasource,onChange:s=>{var t;r(s),null!==(t=s.azureLogAnalytics)&&void 0!==t&&t.query&&e.onChange(s)},variableOptionGroup:{label:"Template Variables",options:[]},setError:a,hideFormatAs:!0}),o&&(0,ne.jsxs)(ne.Fragment,{children:[ie||(ie=(0,ne.jsx)(re.T,{v:2})),(0,ne.jsx)(Y.Alert,{severity:"error",title:"An error occurred while requesting metadata from Azure Monitor",children:o})]})]}),t.queryType===g.Bj.GrafanaTemplateVariableFn&&(0,ne.jsx)(ue,{query:t,updateQuery:e.onChange,datasource:e.datasource})]})};var le,de,me,ge,he,fe,ye,ve=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/utils/messageFromError.ts");class be extends r.CustomVariableSupport{constructor(e){var s,t,r;super(),r=pe,(t="editor")in(s=this)?Object.defineProperty(s,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):s[t]=r,this.datasource=e,this.datasource=e,this.datasource=e,this.query=this.query.bind(this)}query(e){return(0,l.D)((async()=>{const s=await ae(e.targets[0],{datasource:this.datasource});if(s.queryType===g.Bj.GrafanaTemplateVariableFn&&s.grafanaTemplateVariableFn)try{const e=await this.callGrafanaTemplateVariableFn(s.grafanaTemplateVariableFn);return{data:null!=e&&e.length?[(0,r.toDataFrame)(e)]:[]}}catch(e){return{data:[],error:{message:(0,ve.Z)(e)}}}return e.targets[0]=s,(0,Z.n)(this.datasource.query(e))})())}callGrafanaTemplateVariableFn(e){if(this.datasource.insightsAnalyticsDatasource){if("AppInsightsMetricNameQuery"===e.kind)return this.datasource.insightsAnalyticsDatasource.getMetricNames();if("AppInsightsGroupByQuery"===e.kind)return this.datasource.insightsAnalyticsDatasource.getGroupBys((0,p.getTemplateSrv)().replace(e.metricName))}return"SubscriptionsQuery"===e.kind?this.datasource.getSubscriptions():"ResourceGroupsQuery"===e.kind?this.datasource.getResourceGroups(this.replaceVariable(e.subscription)):"MetricDefinitionsQuery"===e.kind?this.datasource.getMetricDefinitions(this.replaceVariable(e.subscription),this.replaceVariable(e.resourceGroup)):"ResourceNamesQuery"===e.kind?this.datasource.getResourceNames(this.replaceVariable(e.subscription),this.replaceVariable(e.resourceGroup),this.replaceVariable(e.metricDefinition)):"MetricNamespaceQuery"===e.kind?this.datasource.getMetricNamespaces(this.replaceVariable(e.subscription),this.replaceVariable(e.resourceGroup),this.replaceVariable(e.metricDefinition),this.replaceVariable(e.resourceName)):"MetricNamesQuery"===e.kind?this.datasource.getMetricNames(this.replaceVariable(e.subscription),this.replaceVariable(e.resourceGroup),this.replaceVariable(e.metricDefinition),this.replaceVariable(e.resourceName),this.replaceVariable(e.metricNamespace)):"WorkspacesQuery"===e.kind?this.datasource.azureLogAnalyticsDatasource.getWorkspaces(this.replaceVariable(e.subscription)):null}replaceVariable(e){return(0,p.getTemplateSrv)().replace((e||"").trim())}}function Ne(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}class Se extends r.DataSourceApi{constructor(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,o.J)();super(e),Ne(this,"annotations",{prepareAnnotation:K}),Ne(this,"azureMonitorDatasource",void 0),Ne(this,"azureLogAnalyticsDatasource",void 0),Ne(this,"resourcePickerData",void 0),Ne(this,"azureResourceGraphDatasource",void 0),Ne(this,"appInsightsDatasource",void 0),Ne(this,"insightsAnalyticsDatasource",void 0),Ne(this,"pseudoDatasource",{}),this.templateSrv=s,this.templateSrv=s,this.azureMonitorDatasource=new $(e),this.azureLogAnalyticsDatasource=new I(e),this.azureResourceGraphDatasource=new E(e),this.resourcePickerData=new H(e),this.pseudoDatasource={[g.Bj.AzureMonitor]:this.azureMonitorDatasource,[g.Bj.LogAnalytics]:this.azureLogAnalyticsDatasource,[g.Bj.AzureResourceGraph]:this.azureResourceGraphDatasource};const t=b(e);"azuremonitor"!==t&&"chinaazuremonitor"!==t||(this.appInsightsDatasource=new O(e),this.insightsAnalyticsDatasource=new U(e),this.pseudoDatasource[g.H0.ApplicationInsights]=this.appInsightsDatasource,this.pseudoDatasource[g.H0.InsightsAnalytics]=this.insightsAnalyticsDatasource),this.variables=new be(this)}filterQuery(e){var s,t;if(!e.queryType)return!0;const r=this.pseudoDatasource[e.queryType];return null===(s=null==r||null===(t=r.filterQuery)||void 0===t?void 0:t.call(r,e))||void 0===s||s}query(e){const s=new Map;for(const t of e.targets){const r=(0,J.N)(t);if(!r.queryType||r.hide||!we(r))continue;if(!s.has(r.queryType)){const t=(0,a.cloneDeep)(e);t.requestId=`${t.requestId}-${r.refId}`,t.targets=[],s.set(r.queryType,t)}const o=s.get(r.queryType);null==o||o.targets.push(r)}const t=Array.from(s.entries()).map((e=>{let[s,t]=e;const r=this.pseudoDatasource[s];if(!r)throw new Error("Data source not created for query type "+s);return r.query(t)}));return 1===t.length?t[0]:t.length>1?(0,n.D)(t).pipe((0,u.U)((e=>{const s=[];for(const t of e)for(const e of t.data)s.push(e);return{state:r.LoadingState.Done,data:s}}))):(0,c.of)({state:r.LoadingState.Done,data:[]})}targetContainsTemplate(e){if(e.subscription&&this.templateSrv.containsTemplate(e.subscription))return!0;let s;return e.queryType===g.Bj.AzureMonitor?s=JSON.stringify(e.azureMonitor):e.queryType===g.Bj.LogAnalytics?s=JSON.stringify(e.azureLogAnalytics):e.queryType===g.Bj.AzureResourceGraph&&(s=JSON.stringify([e.azureResourceGraph,e.subscriptions])),!!s&&this.templateSrv.containsTemplate(s)}async annotationQuery(e){return this.azureLogAnalyticsDatasource.annotationQuery(e)}async testDatasource(){var e;const s=[];return s.push(this.azureMonitorDatasource.testDatasource()),s.push(this.azureLogAnalyticsDatasource.testDatasource()),null!==(e=this.appInsightsDatasource)&&void 0!==e&&e.isConfigured()&&s.push(this.appInsightsDatasource.testDatasource()),await Promise.all(s).then((e=>{let s="success",t="";for(let r=0;r<e.length;r++)"success"!==e[r].status&&(s=e[r].status),t+=`${r+1}. ${e[r].message} `;return{status:s,message:t,title:(0,a.upperFirst)(s)}}))}getResourceGroups(e){return this.azureMonitorDatasource.getResourceGroups(this.replaceTemplateVariable(e))}getMetricDefinitions(e,s){return this.azureMonitorDatasource.getMetricDefinitions(this.replaceTemplateVariable(e),this.replaceTemplateVariable(s))}getResourceNames(e,s,t){return this.azureMonitorDatasource.getResourceNames(this.replaceTemplateVariable(e),this.replaceTemplateVariable(s),this.replaceTemplateVariable(t))}getMetricNames(e,s,t,r,o){return this.azureMonitorDatasource.getMetricNames(this.replaceTemplateVariable(e),this.replaceTemplateVariable(s),this.replaceTemplateVariable(t),this.replaceTemplateVariable(r),this.replaceTemplateVariable(o))}getMetricNamespaces(e,s,t,r){return this.azureMonitorDatasource.getMetricNamespaces(this.replaceTemplateVariable(e),this.replaceTemplateVariable(s),this.replaceTemplateVariable(t),this.replaceTemplateVariable(r))}getMetricMetadata(e,s,t,r,o,a){return this.azureMonitorDatasource.getMetricMetadata(this.replaceTemplateVariable(e),this.replaceTemplateVariable(s),this.replaceTemplateVariable(t),this.replaceTemplateVariable(r),this.replaceTemplateVariable(o),this.replaceTemplateVariable(a))}getAppInsightsMetricNames(){var e;return null===(e=this.appInsightsDatasource)||void 0===e?void 0:e.getMetricNames()}getAppInsightsMetricMetadata(e){var s;return null===(s=this.appInsightsDatasource)||void 0===s?void 0:s.getMetricMetadata(e)}getAppInsightsColumns(e){var s;return null===(s=this.appInsightsDatasource)||void 0===s?void 0:s.logAnalyticsColumns[e]}getAzureLogAnalyticsWorkspaces(e){return this.azureLogAnalyticsDatasource.getWorkspaces(e)}getSubscriptions(){return this.azureMonitorDatasource.getSubscriptions()}interpolateVariablesInQueries(e,s){return e.map((e=>{var t;if(!e.queryType)return e;const r=this.pseudoDatasource[e.queryType];return null!==(t=null==r?void 0:r.applyTemplateVariables(e,s))&&void 0!==t?t:e}))}replaceTemplateVariable(e){return this.templateSrv.replace(e)}getVariables(){return this.templateSrv.getVariables().map((e=>`$${e.name}`))}isTemplateVariable(e){return this.getVariables().includes(e)}}function we(e){switch(e.queryType){case g.Bj.AzureMonitor:return!!e.azureMonitor;case g.Bj.LogAnalytics:return!!e.azureLogAnalytics;case g.Bj.AzureResourceGraph:return!!e.azureResourceGraph;case g.Bj.GrafanaTemplateVariableFn:return!!e.grafanaTemplateVariableFn;case g.H0.ApplicationInsights:return!!e.appInsights;case g.H0.InsightsAnalytics:return!!e.insightsAnalytics;default:return!1}}const{Input:Me}=Y.LegacyForms,Te=[{value:"msi",label:"Managed Identity"},{value:"clientsecret",label:"App Registration"}],Le=e=>{const{credentials:s,azureCloudOptions:t,onCredentialsChange:r,getSubscriptions:o,disabled:a}=e,i=function(e){switch(e.authType){case"msi":return!0;case"clientsecret":return!!(e.azureCloud&&e.tenantId&&e.clientId&&e.clientSecret)}}(s),[n,c]=(0,ee.useState)([]),[u,p]=(0,ee.useReducer)((e=>e+1),0);(0,ee.useEffect)((()=>{if(!o||!i)return void l([]);let e=!1;return o().then((s=>{e||l(s,u)})),()=>{e=!0}}),[u]);const l=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(c(e),o)if(t&&!s.defaultSubscriptionId&&e.length>0)d(e[0]);else if(s.defaultSubscriptionId){e.find((e=>e.value===s.defaultSubscriptionId))||d(void 0)}},d=e=>{if(r){const t=Object.assign({},s,{defaultSubscriptionId:null==e?void 0:e.value});r(t)}};return(0,ne.jsxs)("div",{className:"gf-form-group",children:[e.managedIdentityEnabled&&(0,ne.jsx)("div",{className:"gf-form-inline",children:(0,ne.jsxs)("div",{className:"gf-form",children:[le||(le=(0,ne.jsx)(Y.InlineFormLabel,{className:"width-12",tooltip:"Choose the type of authentication to Azure services",children:"Authentication"})),(0,ne.jsx)(Y.Select,{menuShouldPortal:!0,className:"width-15",value:Te.find((e=>e.value===s.authType)),options:Te,onChange:e=>{if(r){c([]);const t=Object.assign({},s,{authType:e.value||"msi",defaultSubscriptionId:void 0});r(t)}},disabled:a})]})}),"clientsecret"===s.authType&&(0,ne.jsxs)(ne.Fragment,{children:[t&&(0,ne.jsx)("div",{className:"gf-form-inline",children:(0,ne.jsxs)("div",{className:"gf-form",children:[de||(de=(0,ne.jsx)(Y.InlineFormLabel,{className:"width-12",tooltip:"Choose an Azure Cloud",children:"Azure Cloud"})),(0,ne.jsx)(Y.Select,{"aria-label":"Azure Cloud",menuShouldPortal:!0,className:"width-15",value:t.find((e=>e.value===s.azureCloud)),options:t,onChange:e=>{if(r&&"clientsecret"===s.authType){c([]);const t=Object.assign({},s,{azureCloud:e.value,defaultSubscriptionId:void 0});r(t)}},disabled:a})]})}),(0,ne.jsx)("div",{className:"gf-form-inline",children:(0,ne.jsxs)("div",{className:"gf-form",children:[me||(me=(0,ne.jsx)(Y.InlineFormLabel,{className:"width-12",children:"Directory (tenant) ID"})),(0,ne.jsx)("div",{className:"width-15",children:(0,ne.jsx)(Me,{className:"width-30",placeholder:"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",value:s.tenantId||"",onChange:e=>{if(r&&"clientsecret"===s.authType){c([]);const t=Object.assign({},s,{tenantId:e.target.value,defaultSubscriptionId:void 0});r(t)}},disabled:a})})]})}),(0,ne.jsx)("div",{className:"gf-form-inline",children:(0,ne.jsxs)("div",{className:"gf-form",children:[ge||(ge=(0,ne.jsx)(Y.InlineFormLabel,{className:"width-12",children:"Application (client) ID"})),(0,ne.jsx)("div",{className:"width-15",children:(0,ne.jsx)(Me,{className:"width-30",placeholder:"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",value:s.clientId||"",onChange:e=>{if(r&&"clientsecret"===s.authType){c([]);const t=Object.assign({},s,{clientId:e.target.value,defaultSubscriptionId:void 0});r(t)}},disabled:a})})]})}),!a&&("symbol"==typeof s.clientSecret?(0,ne.jsxs)("div",{className:"gf-form-inline",children:[he||(he=(0,ne.jsxs)("div",{className:"gf-form",children:[(0,ne.jsx)(Y.InlineFormLabel,{className:"width-12",children:"Client Secret"}),(0,ne.jsx)(Me,{"data-testid":"client-secret",className:"width-25",placeholder:"configured",disabled:!0})]})),(0,ne.jsx)("div",{className:"gf-form",children:(0,ne.jsx)("div",{className:"max-width-30 gf-form-inline",children:(0,ne.jsx)(Y.Button,{variant:"secondary",type:"button",onClick:()=>{if(r&&"clientsecret"===s.authType){c([]);const e=Object.assign({},s,{clientSecret:"",defaultSubscriptionId:void 0});r(e)}},disabled:a,children:"reset"})})})]}):(0,ne.jsx)("div",{className:"gf-form-inline",children:(0,ne.jsxs)("div",{className:"gf-form",children:[fe||(fe=(0,ne.jsx)(Y.InlineFormLabel,{className:"width-12",children:"Client Secret"})),(0,ne.jsx)("div",{className:"width-15",children:(0,ne.jsx)(Me,{className:"width-30",placeholder:"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",value:s.clientSecret||"",onChange:e=>{if(r&&"clientsecret"===s.authType){c([]);const t=Object.assign({},s,{clientSecret:e.target.value,defaultSubscriptionId:void 0});r(t)}},disabled:a})})]})}))]}),o&&(0,ne.jsxs)(ne.Fragment,{children:[(0,ne.jsx)("div",{className:"gf-form-inline",children:(0,ne.jsxs)("div",{className:"gf-form",children:[ye||(ye=(0,ne.jsx)(Y.InlineFormLabel,{className:"width-12",children:"Default Subscription"})),(0,ne.jsx)("div",{className:"width-30",children:(0,ne.jsx)(Y.Select,{"aria-label":"Default Subscription",menuShouldPortal:!0,value:s.defaultSubscriptionId?n.find((e=>e.value===s.defaultSubscriptionId)):void 0,options:n,onChange:d,disabled:a})})]})}),!a&&(0,ne.jsx)("div",{className:"gf-form-inline",children:(0,ne.jsx)("div",{className:"gf-form",children:(0,ne.jsx)("div",{className:"max-width-30 gf-form-inline",children:(0,ne.jsx)(Y.Button,{variant:"secondary",size:"sm",type:"button",onClick:p,disabled:!i,children:"Load Subscriptions"})})})})]}),e.children]})};var ke,Ae;const Ie=e=>{const{updateOptions:s}=e,t=(0,ee.useMemo)((()=>S(e.options)),[e.options]);return"clientsecret"===t.authType&&!1===e.options.jsonData.azureLogAnalyticsSameAs?(0,ne.jsxs)(ne.Fragment,{children:[ke||(ke=(0,ne.jsx)("h3",{className:"page-heading",children:"Azure Monitor Logs"})),(0,ne.jsxs)(ne.Fragment,{children:[Ae||(Ae=(0,ne.jsx)(Y.Alert,{severity:"error",title:"Deprecated",children:"Using different credentials for Azure Monitor Logs is no longer supported. Authentication information above will be used instead. Please create a new data source with the credentials below."})),(0,ne.jsx)(Le,{managedIdentityEnabled:!1,credentials:Object.assign({},t,{authType:"clientsecret",tenantId:e.options.jsonData.logAnalyticsTenantId,clientId:e.options.jsonData.logAnalyticsClientId}),disabled:!0,children:(0,ne.jsx)(Y.Button,{onClick:()=>{s((e=>Object.assign({},e,{jsonData:Object.assign({},e.jsonData,{azureLogAnalyticsSameAs:!0})})))},children:"Clear Azure Monitor Logs Credentials"})})]})]}):null};var De,je,Ce,ze,xe;function Ge(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}const{Input:Re}=Y.LegacyForms;class qe extends ee.PureComponent{constructor(){super(...arguments),Ge(this,"onAppInsightsResetApiKey",(()=>{this.resetSecureKey("appInsightsApiKey")})),Ge(this,"onUpdateJsonDataOption",(e=>s=>{(0,r.updateDatasourcePluginJsonDataOption)(this.props,e,s.currentTarget.value)})),Ge(this,"onUpdateSecureJsonDataOption",(e=>s=>{(0,r.updateDatasourcePluginSecureJsonDataOption)(this.props,e,s.currentTarget.value)})),Ge(this,"resetSecureKey",(e=>{(0,r.updateDatasourcePluginResetOption)(this.props,e)}))}render(){const{options:e}=this.props;return(0,ne.jsxs)(ne.Fragment,{children:[De||(De=(0,ne.jsx)("h3",{className:"page-heading",children:"Azure Application Insights"})),je||(je=(0,ne.jsx)(Y.Alert,{severity:"info",title:"Application Insights credentials are deprecated",children:"Configure using Azure AD App Registration above and update existing queries to use Metrics or Logs."})),(0,ne.jsxs)("div",{className:"gf-form-group",children:[e.secureJsonFields.appInsightsApiKey?(0,ne.jsxs)("div",{className:"gf-form-inline",children:[Ce||(Ce=(0,ne.jsxs)("div",{className:"gf-form",children:[(0,ne.jsx)(Y.InlineFormLabel,{className:"width-12",children:"API Key"}),(0,ne.jsx)(Re,{className:"width-25",placeholder:"configured",disabled:!0})]})),(0,ne.jsx)("div",{className:"gf-form",children:(0,ne.jsx)("div",{className:"max-width-30 gf-form-inline",children:(0,ne.jsx)(Y.Button,{variant:"secondary",type:"button",onClick:this.onAppInsightsResetApiKey,disabled:this.props.options.readOnly,children:"reset"})})})]}):(0,ne.jsx)("div",{className:"gf-form-inline",children:(0,ne.jsxs)("div",{className:"gf-form",children:[ze||(ze=(0,ne.jsx)(Y.InlineFormLabel,{className:"width-12",children:"API Key"})),(0,ne.jsx)("div",{className:"width-15",children:(0,ne.jsx)(Re,{className:"width-30",placeholder:"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",value:e.secureJsonData.appInsightsApiKey||"",onChange:this.onUpdateSecureJsonDataOption("appInsightsApiKey"),disabled:this.props.options.readOnly})})]})}),(0,ne.jsx)("div",{className:"gf-form-inline",children:(0,ne.jsxs)("div",{className:"gf-form",children:[xe||(xe=(0,ne.jsx)(Y.InlineFormLabel,{className:"width-12",children:"Application ID"})),(0,ne.jsx)("div",{className:"width-15",children:(0,ne.jsx)(Re,{className:"width-30",value:e.jsonData.appInsightsAppId||"",onChange:this.onUpdateJsonDataOption("appInsightsAppId"),disabled:this.props.options.readOnly})})]})})]})]})}}var Pe,Fe=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/components/deprecated/utils.tsx");const Ve=[{value:"azuremonitor",label:"Azure"},{value:"govazuremonitor",label:"Azure US Government"},{value:"germanyazuremonitor",label:"Azure Germany"},{value:"chinaazuremonitor",label:"Azure China"}],Qe=e=>{const{updateOptions:s,getSubscriptions:t}=e,r=(0,ee.useMemo)((()=>S(e.options)),[e.options]);return(0,ne.jsxs)(ne.Fragment,{children:[Pe||(Pe=(0,ne.jsx)("h3",{className:"page-heading",children:"Authentication"})),(0,ne.jsx)(Le,{managedIdentityEnabled:p.config.azure.managedIdentityEnabled,credentials:r,azureCloudOptions:Ve,onCredentialsChange:e=>{s((s=>function(e,s){switch(s.authType){case"msi":if(!p.config.azure.managedIdentityEnabled)throw new Error("Managed Identity authentication is not enabled in Grafana config.");return Object.assign({},e,{jsonData:Object.assign({},e.jsonData,{azureAuthType:"msi",subscriptionId:s.defaultSubscriptionId})});case"clientsecret":return Object.assign({},e,{jsonData:Object.assign({},e.jsonData,{azureAuthType:"clientsecret",cloudName:s.azureCloud||y(),tenantId:s.tenantId,clientId:s.clientId,subscriptionId:s.defaultSubscriptionId}),secureJsonData:Object.assign({},e.secureJsonData,{clientSecret:"string"==typeof s.clientSecret&&s.clientSecret.length>0?s.clientSecret:void 0}),secureJsonFields:Object.assign({},e.secureJsonFields,{clientSecret:"symbol"==typeof s.clientSecret})})}}(s,e)))},getSubscriptions:t,disabled:e.options.readOnly})]})};function Xe(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}class $e extends ee.PureComponent{constructor(e){super(e),Xe(this,"templateSrv",(0,p.getTemplateSrv)()),Xe(this,"baseURL",void 0),Xe(this,"updateOptions",(e=>{const s=e(this.props.options);this.props.onOptionsChange(s),this.setState({unsaved:!0})})),Xe(this,"saveOptions",(async()=>{this.state.unsaved&&(await(0,p.getBackendSrv)().put(`/api/datasources/${this.props.options.id}`,this.props.options).then((e=>{(0,r.updateDatasourcePluginOption)(this.props,"version",e.datasource.version)})),this.setState({unsaved:!1}))})),Xe(this,"getSubscriptions",(async()=>{await this.saveOptions();try{const e=await(0,p.getBackendSrv)().fetch({url:this.baseURL+"?api-version=2019-03-01",method:"GET"}).toPromise();return this.setState({error:void 0}),P.parseSubscriptionsForSelect(e)}catch(s){var e;return this.setState({error:{title:"Error requesting subscriptions",description:"Could not request subscriptions from Azure. Check your credentials and try again.",details:null==s||null===(e=s.data)||void 0===e?void 0:e.message}}),Promise.resolve([])}})),this.state={unsaved:!1},this.baseURL=`/api/datasources/${this.props.options.id}/resources/${M.kr.azureMonitor}/subscriptions`}render(){const{options:e}=this.props,{error:s}=this.state;return(0,ne.jsxs)(ne.Fragment,{children:[(0,ne.jsx)(Qe,{options:e,updateOptions:this.updateOptions,getSubscriptions:this.getSubscriptions}),!(0,Fe.z)()&&(0,ne.jsxs)(ne.Fragment,{children:[(0,ne.jsx)(Ie,{options:e,updateOptions:this.updateOptions}),(0,Fe.C)(e)&&(0,ne.jsx)(qe,Object.assign({},this.props))]}),s&&(0,ne.jsxs)(Y.Alert,{severity:"error",title:s.title,children:[(0,ne.jsx)("p",{children:s.description}),s.details&&(0,ne.jsx)("details",{style:{whiteSpace:"pre-wrap"},children:s.details})]})]})}}var Ee=t("./public/app/plugins/datasource/grafana-azure-monitor-datasource/components/QueryEditor/QueryEditor.tsx");const Be=new r.DataSourcePlugin(Se).setConfigEditor($e).setQueryEditor(Ee.Z)}}]);
//# sourceMappingURL=azureMonitorPlugin.15718e8e3083449662a7.js.map